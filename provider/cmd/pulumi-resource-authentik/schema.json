{
    "name": "authentik",
    "displayName": "authentik",
    "description": "A Pulumi package for creating and managing authentik cloud resources.",
    "keywords": [
        "pulumi",
        "authentik",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`authentik` Terraform Provider](https://github.com/OSMIT-GmbH/terraform-provider-authentik).",
    "repository": "https://github.com/OSMIT-GmbH/pulumi-authentik",
    "pluginDownloadURL": "https://github.com/OSMIT-GmbH/pulumi-authentik/releases/download/v${VERSION}",
    "publisher": "OSMIT-GmbH",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "OSMIT_GmbH"
        },
        "go": {
            "importBasePath": "github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@osmit-gmbh/pulumi-authentik",
            "packageDescription": "A Pulumi package for creating and managing authentik cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/OSMIT-GmbH/terraform-provider-authentik)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-authentik` repo](https://github.com/OSMIT-GmbH/pulumi-authentik/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-authentik` repo](https://github.com/OSMIT-GmbH/terraform-provider-authentik/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "osmit_gmbh_pulumi_authentik",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/OSMIT-GmbH/terraform-provider-authentik)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-authentik` repo](https://github.com/OSMIT-GmbH/pulumi-authentik/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-authentik` repo](https://github.com/OSMIT-GmbH/terraform-provider-authentik/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "insecure": {
                "type": "boolean",
                "description": "Whether to skip TLS verification, can optionally be passed as `AUTHENTIK_INSECURE` environmental variable\n"
            },
            "token": {
                "type": "string",
                "description": "The authentik API token, can optionally be passed as `AUTHENTIK_TOKEN` environmental variable\n",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "The authentik API endpoint, can optionally be passed as `AUTHENTIK_URL` environmental variable\n"
            }
        },
        "defaults": [
            "token",
            "url"
        ]
    },
    "types": {
        "authentik:index/getGroupUsersObj:getGroupUsersObj": {
            "properties": {
                "attributes": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastLogin": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pk": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attributes",
                "email",
                "isActive",
                "lastLogin",
                "name",
                "pk",
                "uid",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "authentik:index/getGroupsGroup:getGroupsGroup": {
            "properties": {
                "attributes": {
                    "type": "string"
                },
                "isSuperuser": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "numPk": {
                    "type": "integer"
                },
                "parent": {
                    "type": "string"
                },
                "parentName": {
                    "type": "string"
                },
                "pk": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "usersObjs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/authentik:index/getGroupsGroupUsersObj:getGroupsGroupUsersObj"
                    }
                }
            },
            "type": "object",
            "required": [
                "attributes",
                "isSuperuser",
                "name",
                "numPk",
                "parent",
                "parentName",
                "pk",
                "users",
                "usersObjs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "authentik:index/getGroupsGroupUsersObj:getGroupsGroupUsersObj": {
            "properties": {
                "attributes": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastLogin": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pk": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attributes",
                "email",
                "isActive",
                "lastLogin",
                "name",
                "pk",
                "uid",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "authentik:index/getUsersUser:getUsersUser": {
            "properties": {
                "attributes": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isActive": {
                    "type": "boolean"
                },
                "isSuperuser": {
                    "type": "boolean"
                },
                "lastLogin": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "pk": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attributes",
                "avatar",
                "email",
                "groups",
                "isActive",
                "isSuperuser",
                "lastLogin",
                "name",
                "path",
                "pk",
                "type",
                "uid",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the authentik package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "insecure": {
                "type": "boolean",
                "description": "Whether to skip TLS verification, can optionally be passed as `AUTHENTIK_INSECURE` environmental variable\n"
            },
            "token": {
                "type": "string",
                "description": "The authentik API token, can optionally be passed as `AUTHENTIK_TOKEN` environmental variable\n",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "The authentik API endpoint, can optionally be passed as `AUTHENTIK_URL` environmental variable\n"
            }
        },
        "required": [
            "token",
            "url"
        ],
        "inputProperties": {
            "insecure": {
                "type": "boolean",
                "description": "Whether to skip TLS verification, can optionally be passed as `AUTHENTIK_INSECURE` environmental variable\n"
            },
            "token": {
                "type": "string",
                "description": "The authentik API token, can optionally be passed as `AUTHENTIK_TOKEN` environmental variable\n",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "The authentik API endpoint, can optionally be passed as `AUTHENTIK_URL` environmental variable\n"
            }
        },
        "requiredInputs": [
            "token",
            "url"
        ]
    },
    "resources": {
        "authentik:index/application:Application": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst nameProviderOauth2 = new authentik.ProviderOauth2(\"nameProviderOauth2\", {\n    clientId: \"example-app\",\n    clientSecret: \"test\",\n    authorizationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n});\nconst policy = new authentik.PolicyExpression(\"policy\", {expression: \"return True\"});\nconst nameApplication = new authentik.Application(\"nameApplication\", {\n    slug: \"example-app\",\n    protocolProvider: nameProviderOauth2.id,\n});\nconst app_access = new authentik.PolicyBinding(\"app-access\", {\n    target: nameApplication.uuid,\n    policy: policy.id,\n    order: 0,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nname_provider_oauth2 = authentik.ProviderOauth2(\"nameProviderOauth2\",\n    client_id=\"example-app\",\n    client_secret=\"test\",\n    authorization_flow=default_authorization_flow.id)\npolicy = authentik.PolicyExpression(\"policy\", expression=\"return True\")\nname_application = authentik.Application(\"nameApplication\",\n    slug=\"example-app\",\n    protocol_provider=name_provider_oauth2.id)\napp_access = authentik.PolicyBinding(\"app-access\",\n    target=name_application.uuid,\n    policy=policy.id,\n    order=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var nameProviderOauth2 = new Authentik.ProviderOauth2(\"nameProviderOauth2\", new()\n    {\n        ClientId = \"example-app\",\n        ClientSecret = \"test\",\n        AuthorizationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n    });\n\n    var policy = new Authentik.PolicyExpression(\"policy\", new()\n    {\n        Expression = \"return True\",\n    });\n\n    var nameApplication = new Authentik.Application(\"nameApplication\", new()\n    {\n        Slug = \"example-app\",\n        ProtocolProvider = nameProviderOauth2.Id,\n    });\n\n    var app_access = new Authentik.PolicyBinding(\"app-access\", new()\n    {\n        Target = nameApplication.Uuid,\n        Policy = policy.Id,\n        Order = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnameProviderOauth2, err := authentik.NewProviderOauth2(ctx, \"nameProviderOauth2\", \u0026authentik.ProviderOauth2Args{\n\t\t\tClientId:          pulumi.String(\"example-app\"),\n\t\t\tClientSecret:      pulumi.String(\"test\"),\n\t\t\tAuthorizationFlow: *pulumi.String(default_authorization_flow.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tpolicy, err := authentik.NewPolicyExpression(ctx, \"policy\", \u0026authentik.PolicyExpressionArgs{\n\t\t\tExpression: pulumi.String(\"return True\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnameApplication, err := authentik.NewApplication(ctx, \"nameApplication\", \u0026authentik.ApplicationArgs{\n\t\t\tSlug:             pulumi.String(\"example-app\"),\n\t\t\tProtocolProvider: nameProviderOauth2.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewPolicyBinding(ctx, \"app-access\", \u0026authentik.PolicyBindingArgs{\n\t\t\tTarget: nameApplication.Uuid,\n\t\t\tPolicy: policy.ID(),\n\t\t\tOrder:  pulumi.Int(0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.ProviderOauth2;\nimport com.pulumi.authentik.ProviderOauth2Args;\nimport com.pulumi.authentik.PolicyExpression;\nimport com.pulumi.authentik.PolicyExpressionArgs;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport com.pulumi.authentik.PolicyBinding;\nimport com.pulumi.authentik.PolicyBindingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var nameProviderOauth2 = new ProviderOauth2(\"nameProviderOauth2\", ProviderOauth2Args.builder()        \n            .clientId(\"example-app\")\n            .clientSecret(\"test\")\n            .authorizationFlow(default_authorization_flow.id())\n            .build());\n\n        var policy = new PolicyExpression(\"policy\", PolicyExpressionArgs.builder()        \n            .expression(\"return True\")\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()        \n            .slug(\"example-app\")\n            .protocolProvider(nameProviderOauth2.id())\n            .build());\n\n        var app_access = new PolicyBinding(\"app-access\", PolicyBindingArgs.builder()        \n            .target(nameApplication.uuid())\n            .policy(policy.id())\n            .order(0)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  nameProviderOauth2:\n    type: authentik:ProviderOauth2\n    properties:\n      clientId: example-app\n      clientSecret: test\n      authorizationFlow: ${[\"default-authorization-flow\"].id}\n  policy:\n    type: authentik:PolicyExpression\n    properties:\n      expression: return True\n  app-access:\n    type: authentik:PolicyBinding\n    properties:\n      target: ${nameApplication.uuid}\n      policy: ${policy.id}\n      order: 0\n  nameApplication:\n    type: authentik:Application\n    properties:\n      slug: example-app\n      protocolProvider: ${nameProviderOauth2.id}\nvariables:\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "backchannelProviders": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "group": {
                    "type": "string"
                },
                "metaDescription": {
                    "type": "string"
                },
                "metaIcon": {
                    "type": "string"
                },
                "metaLaunchUrl": {
                    "type": "string"
                },
                "metaPublisher": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "openInNewTab": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Defaults to `any`.\n"
                },
                "protocolProvider": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "required": [
                "name",
                "slug",
                "uuid"
            ],
            "inputProperties": {
                "backchannelProviders": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "group": {
                    "type": "string"
                },
                "metaDescription": {
                    "type": "string"
                },
                "metaIcon": {
                    "type": "string"
                },
                "metaLaunchUrl": {
                    "type": "string"
                },
                "metaPublisher": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "openInNewTab": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Defaults to `any`.\n"
                },
                "protocolProvider": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "requiredInputs": [
                "slug"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Application resources.\n",
                "properties": {
                    "backchannelProviders": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "group": {
                        "type": "string"
                    },
                    "metaDescription": {
                        "type": "string"
                    },
                    "metaIcon": {
                        "type": "string"
                    },
                    "metaLaunchUrl": {
                        "type": "string"
                    },
                    "metaPublisher": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "openInNewTab": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Defaults to `any`.\n"
                    },
                    "protocolProvider": {
                        "type": "integer"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/blueprint:Blueprint": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst instance = new authentik.Blueprint(\"instance\", {\n    path: \"default/flow-default-authentication-flow.yaml\",\n    context: JSON.stringify({\n        foo: \"bar\",\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport osmit_gmbh_pulumi_authentik as authentik\n\ninstance = authentik.Blueprint(\"instance\",\n    path=\"default/flow-default-authentication-flow.yaml\",\n    context=json.dumps({\n        \"foo\": \"bar\",\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance = new Authentik.Blueprint(\"instance\", new()\n    {\n        Path = \"default/flow-default-authentication-flow.yaml\",\n        Context = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"foo\"] = \"bar\",\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"foo\": \"bar\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = authentik.NewBlueprint(ctx, \"instance\", \u0026authentik.BlueprintArgs{\n\t\t\tPath:    pulumi.String(\"default/flow-default-authentication-flow.yaml\"),\n\t\t\tContext: pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.Blueprint;\nimport com.pulumi.authentik.BlueprintArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var instance = new Blueprint(\"instance\", BlueprintArgs.builder()        \n            .path(\"default/flow-default-authentication-flow.yaml\")\n            .context(serializeJson(\n                jsonObject(\n                    jsonProperty(\"foo\", \"bar\")\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  instance:\n    type: authentik:Blueprint\n    properties:\n      path: default/flow-default-authentication-flow.yaml\n      context:\n        fn::toJSON:\n          foo: bar\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "content": {
                    "type": "string"
                },
                "context": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "content": {
                    "type": "string"
                },
                "context": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Blueprint resources.\n",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "context": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/certificateKeyPair:CertificateKeyPair": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as tls from \"@pulumi/tls\";\n\n// Generate a certificate-key pair\nconst exampletls_private_key = new tls.index.Tls_private_key(\"exampletls_private_key\", {\n    algorithm: \"ECDSA\",\n    ecdsaCurve: \"P384\",\n});\nconst exampletls_self_signed_cert = new tls.index.Tls_self_signed_cert(\"exampletls_self_signed_cert\", {\n    keyAlgorithm: \"ECDSA\",\n    privateKeyPem: exampletls_private_key.privateKeyPem,\n    subject: [{\n        commonName: \"example.com\",\n        organization: \"ACME Examples, Inc\",\n    }],\n    validityPeriodHours: 12,\n    allowedUses: [\n        \"key_encipherment\",\n        \"digital_signature\",\n        \"server_auth\",\n    ],\n});\nconst name = new authentik.CertificateKeyPair(\"name\", {\n    certificateData: exampletls_self_signed_cert.certPem,\n    keyData: exampletls_private_key.privateKeyPem,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_tls as tls\n\n# Generate a certificate-key pair\nexample_private_key = tls.PrivateKey(\"examplePrivateKey\",\n    algorithm=\"ECDSA\",\n    ecdsa_curve=\"P384\")\nexample_self_signed_cert = tls.SelfSignedCert(\"exampleSelfSignedCert\",\n    key_algorithm=\"ECDSA\",\n    private_key_pem=example_private_key.private_key_pem,\n    subject=tls.SelfSignedCertSubjectArgs(\n        common_name=\"example.com\",\n        organization=\"ACME Examples, Inc\",\n    ),\n    validity_period_hours=12,\n    allowed_uses=[\n        \"key_encipherment\",\n        \"digital_signature\",\n        \"server_auth\",\n    ])\nname = authentik.CertificateKeyPair(\"name\",\n    certificate_data=example_self_signed_cert.cert_pem,\n    key_data=example_private_key.private_key_pem)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Tls = Pulumi.Tls;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Generate a certificate-key pair\n    var examplePrivateKey = new Tls.PrivateKey(\"examplePrivateKey\", new()\n    {\n        Algorithm = \"ECDSA\",\n        EcdsaCurve = \"P384\",\n    });\n\n    var exampleSelfSignedCert = new Tls.SelfSignedCert(\"exampleSelfSignedCert\", new()\n    {\n        KeyAlgorithm = \"ECDSA\",\n        PrivateKeyPem = examplePrivateKey.PrivateKeyPem,\n        Subject = new Tls.Inputs.SelfSignedCertSubjectArgs\n        {\n            CommonName = \"example.com\",\n            Organization = \"ACME Examples, Inc\",\n        },\n        ValidityPeriodHours = 12,\n        AllowedUses = new[]\n        {\n            \"key_encipherment\",\n            \"digital_signature\",\n            \"server_auth\",\n        },\n    });\n\n    var name = new Authentik.CertificateKeyPair(\"name\", new()\n    {\n        CertificateData = exampleSelfSignedCert.CertPem,\n        KeyData = examplePrivateKey.PrivateKeyPem,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi-tls/sdk/v4/go/tls\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texamplePrivateKey, err := tls.NewPrivateKey(ctx, \"examplePrivateKey\", \u0026tls.PrivateKeyArgs{\n\t\t\tAlgorithm:  pulumi.String(\"ECDSA\"),\n\t\t\tEcdsaCurve: pulumi.String(\"P384\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleSelfSignedCert, err := tls.NewSelfSignedCert(ctx, \"exampleSelfSignedCert\", \u0026tls.SelfSignedCertArgs{\n\t\t\tKeyAlgorithm:  pulumi.String(\"ECDSA\"),\n\t\t\tPrivateKeyPem: examplePrivateKey.PrivateKeyPem,\n\t\t\tSubject: \u0026tls.SelfSignedCertSubjectArgs{\n\t\t\t\tCommonName:   pulumi.String(\"example.com\"),\n\t\t\t\tOrganization: pulumi.String(\"ACME Examples, Inc\"),\n\t\t\t},\n\t\t\tValidityPeriodHours: pulumi.Int(12),\n\t\t\tAllowedUses: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"key_encipherment\"),\n\t\t\t\tpulumi.String(\"digital_signature\"),\n\t\t\t\tpulumi.String(\"server_auth\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewCertificateKeyPair(ctx, \"name\", \u0026authentik.CertificateKeyPairArgs{\n\t\t\tCertificateData: exampleSelfSignedCert.CertPem,\n\t\t\tKeyData:         examplePrivateKey.PrivateKeyPem,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.tls.PrivateKey;\nimport com.pulumi.tls.PrivateKeyArgs;\nimport com.pulumi.tls.SelfSignedCert;\nimport com.pulumi.tls.SelfSignedCertArgs;\nimport com.pulumi.tls.inputs.SelfSignedCertSubjectArgs;\nimport com.pulumi.authentik.CertificateKeyPair;\nimport com.pulumi.authentik.CertificateKeyPairArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var examplePrivateKey = new PrivateKey(\"examplePrivateKey\", PrivateKeyArgs.builder()        \n            .algorithm(\"ECDSA\")\n            .ecdsaCurve(\"P384\")\n            .build());\n\n        var exampleSelfSignedCert = new SelfSignedCert(\"exampleSelfSignedCert\", SelfSignedCertArgs.builder()        \n            .keyAlgorithm(\"ECDSA\")\n            .privateKeyPem(examplePrivateKey.privateKeyPem())\n            .subject(SelfSignedCertSubjectArgs.builder()\n                .commonName(\"example.com\")\n                .organization(\"ACME Examples, Inc\")\n                .build())\n            .validityPeriodHours(12)\n            .allowedUses(            \n                \"key_encipherment\",\n                \"digital_signature\",\n                \"server_auth\")\n            .build());\n\n        var name = new CertificateKeyPair(\"name\", CertificateKeyPairArgs.builder()        \n            .certificateData(exampleSelfSignedCert.certPem())\n            .keyData(examplePrivateKey.privateKeyPem())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Generate a certificate-key pair\n  examplePrivateKey:\n    type: tls:PrivateKey\n    properties:\n      algorithm: ECDSA\n      ecdsaCurve: P384\n  exampleSelfSignedCert:\n    type: tls:SelfSignedCert\n    properties:\n      keyAlgorithm: ECDSA\n      privateKeyPem: ${examplePrivateKey.privateKeyPem}\n      subject:\n        commonName: example.com\n        organization: ACME Examples, Inc\n      validityPeriodHours: 12\n      allowedUses:\n        - key_encipherment\n        - digital_signature\n        - server_auth\n  name:\n    type: authentik:CertificateKeyPair\n    properties:\n      certificateData: ${exampleSelfSignedCert.certPem}\n      keyData: ${examplePrivateKey.privateKeyPem}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "certificateData": {
                    "type": "string"
                },
                "keyData": {
                    "type": "string",
                    "secret": true
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "certificateData",
                "name"
            ],
            "inputProperties": {
                "certificateData": {
                    "type": "string"
                },
                "keyData": {
                    "type": "string",
                    "secret": true
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "certificateData"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CertificateKeyPair resources.\n",
                "properties": {
                    "certificateData": {
                        "type": "string"
                    },
                    "keyData": {
                        "type": "string",
                        "secret": true
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/enterpriseLicense:EnterpriseLicense": {
            "properties": {
                "expiry": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "externalUsers": {
                    "type": "integer",
                    "description": "Generated.\n"
                },
                "internalUsers": {
                    "type": "integer",
                    "description": "Generated.\n"
                },
                "key": {
                    "type": "string",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "required": [
                "expiry",
                "externalUsers",
                "internalUsers",
                "key",
                "name"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "secret": true
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EnterpriseLicense resources.\n",
                "properties": {
                    "expiry": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "externalUsers": {
                        "type": "integer",
                        "description": "Generated.\n"
                    },
                    "internalUsers": {
                        "type": "integer",
                        "description": "Generated.\n"
                    },
                    "key": {
                        "type": "string",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/eventRule:EventRule": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "severity": {
                    "type": "string",
                    "description": "Defaults to `warning`.\n"
                },
                "transports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "webhookMapping": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "transports"
            ],
            "inputProperties": {
                "group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "severity": {
                    "type": "string",
                    "description": "Defaults to `warning`.\n"
                },
                "transports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "webhookMapping": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "transports"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EventRule resources.\n",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string",
                        "description": "Defaults to `warning`.\n"
                    },
                    "transports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webhookMapping": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/eventTransport:EventTransport": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a notification transport to slack/discord\nconst transport = new authentik.EventTransport(\"transport\", {\n    mode: \"webhook_slack\",\n    sendOnce: true,\n    webhookUrl: \"https://discord.com/....\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a notification transport to slack/discord\ntransport = authentik.EventTransport(\"transport\",\n    mode=\"webhook_slack\",\n    send_once=True,\n    webhook_url=\"https://discord.com/....\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a notification transport to slack/discord\n    var transport = new Authentik.EventTransport(\"transport\", new()\n    {\n        Mode = \"webhook_slack\",\n        SendOnce = true,\n        WebhookUrl = \"https://discord.com/....\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewEventTransport(ctx, \"transport\", \u0026authentik.EventTransportArgs{\n\t\t\tMode:       pulumi.String(\"webhook_slack\"),\n\t\t\tSendOnce:   pulumi.Bool(true),\n\t\t\tWebhookUrl: pulumi.String(\"https://discord.com/....\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.EventTransport;\nimport com.pulumi.authentik.EventTransportArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var transport = new EventTransport(\"transport\", EventTransportArgs.builder()        \n            .mode(\"webhook_slack\")\n            .sendOnce(true)\n            .webhookUrl(\"https://discord.com/....\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a notification transport to slack/discord\n  transport:\n    type: authentik:EventTransport\n    properties:\n      mode: webhook_slack\n      sendOnce: true\n      webhookUrl: https://discord.com/....\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sendOnce": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "webhookMapping": {
                    "type": "string"
                },
                "webhookUrl": {
                    "type": "string"
                }
            },
            "required": [
                "mode",
                "name"
            ],
            "inputProperties": {
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sendOnce": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "webhookMapping": {
                    "type": "string"
                },
                "webhookUrl": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "mode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EventTransport resources.\n",
                "properties": {
                    "mode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sendOnce": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "webhookMapping": {
                        "type": "string"
                    },
                    "webhookUrl": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/flow:Flow": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a flow with a stage attached\nconst name = new authentik.StageDummy(\"name\", {});\nconst flow = new authentik.Flow(\"flow\", {\n    title: \"Test flow\",\n    slug: \"test-flow\",\n    designation: \"authorization\",\n});\nconst dummy_flow = new authentik.FlowStageBinding(\"dummy-flow\", {\n    target: flow.uuid,\n    stage: name.id,\n    order: 0,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a flow with a stage attached\nname = authentik.StageDummy(\"name\")\nflow = authentik.Flow(\"flow\",\n    title=\"Test flow\",\n    slug=\"test-flow\",\n    designation=\"authorization\")\ndummy_flow = authentik.FlowStageBinding(\"dummy-flow\",\n    target=flow.uuid,\n    stage=name.id,\n    order=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a flow with a stage attached\n    var name = new Authentik.StageDummy(\"name\");\n\n    var flow = new Authentik.Flow(\"flow\", new()\n    {\n        Title = \"Test flow\",\n        Slug = \"test-flow\",\n        Designation = \"authorization\",\n    });\n\n    var dummy_flow = new Authentik.FlowStageBinding(\"dummy-flow\", new()\n    {\n        Target = flow.Uuid,\n        Stage = name.Id,\n        Order = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tname, err := authentik.NewStageDummy(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tflow, err := authentik.NewFlow(ctx, \"flow\", \u0026authentik.FlowArgs{\n\t\t\tTitle:       pulumi.String(\"Test flow\"),\n\t\t\tSlug:        pulumi.String(\"test-flow\"),\n\t\t\tDesignation: pulumi.String(\"authorization\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewFlowStageBinding(ctx, \"dummy-flow\", \u0026authentik.FlowStageBindingArgs{\n\t\t\tTarget: flow.Uuid,\n\t\t\tStage:  name.ID(),\n\t\t\tOrder:  pulumi.Int(0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageDummy;\nimport com.pulumi.authentik.Flow;\nimport com.pulumi.authentik.FlowArgs;\nimport com.pulumi.authentik.FlowStageBinding;\nimport com.pulumi.authentik.FlowStageBindingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageDummy(\"name\");\n\n        var flow = new Flow(\"flow\", FlowArgs.builder()        \n            .title(\"Test flow\")\n            .slug(\"test-flow\")\n            .designation(\"authorization\")\n            .build());\n\n        var dummy_flow = new FlowStageBinding(\"dummy-flow\", FlowStageBindingArgs.builder()        \n            .target(flow.uuid())\n            .stage(name.id())\n            .order(0)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a flow with a stage attached\n  name:\n    type: authentik:StageDummy\n  flow:\n    type: authentik:Flow\n    properties:\n      title: Test flow\n      slug: test-flow\n      designation: authorization\n  dummy-flow:\n    type: authentik:FlowStageBinding\n    properties:\n      target: ${flow.uuid}\n      stage: ${name.id}\n      order: 0\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "authentication": {
                    "type": "string",
                    "description": "Defaults to `none`.\n"
                },
                "background": {
                    "type": "string",
                    "description": "Optional URL to an image which will be used as the background during the flow.\n"
                },
                "compatibilityMode": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "deniedAction": {
                    "type": "string",
                    "description": "Defaults to `message_continue`.\n"
                },
                "designation": {
                    "type": "string"
                },
                "layout": {
                    "type": "string",
                    "description": "Defaults to `stacked`.\n"
                },
                "name": {
                    "type": "string"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Defaults to `any`.\n"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "required": [
                "designation",
                "name",
                "slug",
                "title",
                "uuid"
            ],
            "inputProperties": {
                "authentication": {
                    "type": "string",
                    "description": "Defaults to `none`.\n"
                },
                "background": {
                    "type": "string",
                    "description": "Optional URL to an image which will be used as the background during the flow.\n"
                },
                "compatibilityMode": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "deniedAction": {
                    "type": "string",
                    "description": "Defaults to `message_continue`.\n"
                },
                "designation": {
                    "type": "string"
                },
                "layout": {
                    "type": "string",
                    "description": "Defaults to `stacked`.\n"
                },
                "name": {
                    "type": "string"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Defaults to `any`.\n"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "designation",
                "slug",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Flow resources.\n",
                "properties": {
                    "authentication": {
                        "type": "string",
                        "description": "Defaults to `none`.\n"
                    },
                    "background": {
                        "type": "string",
                        "description": "Optional URL to an image which will be used as the background during the flow.\n"
                    },
                    "compatibilityMode": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "deniedAction": {
                        "type": "string",
                        "description": "Defaults to `message_continue`.\n"
                    },
                    "designation": {
                        "type": "string"
                    },
                    "layout": {
                        "type": "string",
                        "description": "Defaults to `stacked`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Defaults to `any`.\n"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/flowStageBinding:FlowStageBinding": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a flow with a stage attached\nconst name = new authentik.StageDummy(\"name\", {});\nconst flow = new authentik.Flow(\"flow\", {\n    title: \"Test flow\",\n    slug: \"test-flow\",\n    designation: \"authorization\",\n});\nconst dummy_flow = new authentik.FlowStageBinding(\"dummy-flow\", {\n    target: flow.uuid,\n    stage: name.id,\n    order: 0,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a flow with a stage attached\nname = authentik.StageDummy(\"name\")\nflow = authentik.Flow(\"flow\",\n    title=\"Test flow\",\n    slug=\"test-flow\",\n    designation=\"authorization\")\ndummy_flow = authentik.FlowStageBinding(\"dummy-flow\",\n    target=flow.uuid,\n    stage=name.id,\n    order=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a flow with a stage attached\n    var name = new Authentik.StageDummy(\"name\");\n\n    var flow = new Authentik.Flow(\"flow\", new()\n    {\n        Title = \"Test flow\",\n        Slug = \"test-flow\",\n        Designation = \"authorization\",\n    });\n\n    var dummy_flow = new Authentik.FlowStageBinding(\"dummy-flow\", new()\n    {\n        Target = flow.Uuid,\n        Stage = name.Id,\n        Order = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tname, err := authentik.NewStageDummy(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tflow, err := authentik.NewFlow(ctx, \"flow\", \u0026authentik.FlowArgs{\n\t\t\tTitle:       pulumi.String(\"Test flow\"),\n\t\t\tSlug:        pulumi.String(\"test-flow\"),\n\t\t\tDesignation: pulumi.String(\"authorization\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewFlowStageBinding(ctx, \"dummy-flow\", \u0026authentik.FlowStageBindingArgs{\n\t\t\tTarget: flow.Uuid,\n\t\t\tStage:  name.ID(),\n\t\t\tOrder:  pulumi.Int(0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageDummy;\nimport com.pulumi.authentik.Flow;\nimport com.pulumi.authentik.FlowArgs;\nimport com.pulumi.authentik.FlowStageBinding;\nimport com.pulumi.authentik.FlowStageBindingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageDummy(\"name\");\n\n        var flow = new Flow(\"flow\", FlowArgs.builder()        \n            .title(\"Test flow\")\n            .slug(\"test-flow\")\n            .designation(\"authorization\")\n            .build());\n\n        var dummy_flow = new FlowStageBinding(\"dummy-flow\", FlowStageBindingArgs.builder()        \n            .target(flow.uuid())\n            .stage(name.id())\n            .order(0)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a flow with a stage attached\n  name:\n    type: authentik:StageDummy\n  flow:\n    type: authentik:Flow\n    properties:\n      title: Test flow\n      slug: test-flow\n      designation: authorization\n  dummy-flow:\n    type: authentik:FlowStageBinding\n    properties:\n      target: ${flow.uuid}\n      stage: ${name.id}\n      order: 0\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "evaluateOnPlan": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "invalidResponseAction": {
                    "type": "string",
                    "description": "Defaults to `retry`.\n"
                },
                "order": {
                    "type": "integer"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Defaults to `any`.\n"
                },
                "reEvaluatePolicies": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "stage": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "required": [
                "order",
                "stage",
                "target"
            ],
            "inputProperties": {
                "evaluateOnPlan": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "invalidResponseAction": {
                    "type": "string",
                    "description": "Defaults to `retry`.\n"
                },
                "order": {
                    "type": "integer"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Defaults to `any`.\n"
                },
                "reEvaluatePolicies": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "stage": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "order",
                "stage",
                "target"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FlowStageBinding resources.\n",
                "properties": {
                    "evaluateOnPlan": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "invalidResponseAction": {
                        "type": "string",
                        "description": "Defaults to `retry`.\n"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Defaults to `any`.\n"
                    },
                    "reEvaluatePolicies": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "stage": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/group:Group": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a super-user group with a user\nconst name = new authentik.User(\"name\", {username: \"user\"});\nconst group = new authentik.Group(\"group\", {\n    users: [name.id],\n    isSuperuser: true,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a super-user group with a user\nname = authentik.User(\"name\", username=\"user\")\ngroup = authentik.Group(\"group\",\n    users=[name.id],\n    is_superuser=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a super-user group with a user\n    var name = new Authentik.User(\"name\", new()\n    {\n        Username = \"user\",\n    });\n\n    var @group = new Authentik.Group(\"group\", new()\n    {\n        Users = new[]\n        {\n            name.Id,\n        },\n        IsSuperuser = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tname, err := authentik.NewUser(ctx, \"name\", \u0026authentik.UserArgs{\n\t\t\tUsername: pulumi.String(\"user\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewGroup(ctx, \"group\", \u0026authentik.GroupArgs{\n\t\t\tUsers: pulumi.IntArray{\n\t\t\t\tname.ID(),\n\t\t\t},\n\t\t\tIsSuperuser: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.User;\nimport com.pulumi.authentik.UserArgs;\nimport com.pulumi.authentik.Group;\nimport com.pulumi.authentik.GroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new User(\"name\", UserArgs.builder()        \n            .username(\"user\")\n            .build());\n\n        var group = new Group(\"group\", GroupArgs.builder()        \n            .users(name.id())\n            .isSuperuser(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a super-user group with a user\n  name:\n    type: authentik:User\n    properties:\n      username: user\n  group:\n    type: authentik:Group\n    properties:\n      users:\n        - ${name.id}\n      isSuperuser: true\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "attributes": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "isSuperuser": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Generated.\n"
                }
            },
            "required": [
                "name",
                "users"
            ],
            "inputProperties": {
                "attributes": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "isSuperuser": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Generated.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "attributes": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                    },
                    "isSuperuser": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parent": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/outpost:Outpost": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst proxy = new authentik.ProviderProxy(\"proxy\", {\n    authorizationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    externalHost: \"http://foo.bar.baz\",\n    internalHost: \"http://internal.local\",\n});\nconst outpost = new authentik.Outpost(\"outpost\", {protocolProviders: [proxy.id]});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nproxy = authentik.ProviderProxy(\"proxy\",\n    authorization_flow=default_authorization_flow.id,\n    external_host=\"http://foo.bar.baz\",\n    internal_host=\"http://internal.local\")\noutpost = authentik.Outpost(\"outpost\", protocol_providers=[proxy.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var proxy = new Authentik.ProviderProxy(\"proxy\", new()\n    {\n        AuthorizationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        ExternalHost = \"http://foo.bar.baz\",\n        InternalHost = \"http://internal.local\",\n    });\n\n    var outpost = new Authentik.Outpost(\"outpost\", new()\n    {\n        ProtocolProviders = new[]\n        {\n            proxy.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproxy, err := authentik.NewProviderProxy(ctx, \"proxy\", \u0026authentik.ProviderProxyArgs{\n\t\t\tAuthorizationFlow: *pulumi.String(default_authorization_flow.Id),\n\t\t\tExternalHost:      pulumi.String(\"http://foo.bar.baz\"),\n\t\t\tInternalHost:      pulumi.String(\"http://internal.local\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewOutpost(ctx, \"outpost\", \u0026authentik.OutpostArgs{\n\t\t\tProtocolProviders: pulumi.IntArray{\n\t\t\t\tproxy.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.ProviderProxy;\nimport com.pulumi.authentik.ProviderProxyArgs;\nimport com.pulumi.authentik.Outpost;\nimport com.pulumi.authentik.OutpostArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var proxy = new ProviderProxy(\"proxy\", ProviderProxyArgs.builder()        \n            .authorizationFlow(default_authorization_flow.id())\n            .externalHost(\"http://foo.bar.baz\")\n            .internalHost(\"http://internal.local\")\n            .build());\n\n        var outpost = new Outpost(\"outpost\", OutpostArgs.builder()        \n            .protocolProviders(proxy.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  proxy:\n    type: authentik:ProviderProxy\n    properties:\n      authorizationFlow: ${[\"default-authorization-flow\"].id}\n      externalHost: http://foo.bar.baz\n      internalHost: http://internal.local\n  outpost:\n    type: authentik:Outpost\n    properties:\n      protocolProviders:\n        - ${proxy.id}\nvariables:\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "config": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Generated.\n"
                },
                "name": {
                    "type": "string"
                },
                "protocolProviders": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serviceConnection": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Defaults to `proxy`.\n"
                }
            },
            "required": [
                "config",
                "name",
                "protocolProviders"
            ],
            "inputProperties": {
                "config": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Generated.\n"
                },
                "name": {
                    "type": "string"
                },
                "protocolProviders": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serviceConnection": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Defaults to `proxy`.\n"
                }
            },
            "requiredInputs": [
                "protocolProviders"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Outpost resources.\n",
                "properties": {
                    "config": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Generated.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocolProviders": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "serviceConnection": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Defaults to `proxy`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyBinding:PolicyBinding": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// Create a policy binding for a resource\nconst policy = new authentik.PolicyExpression(\"policy\", {expression: \"return True\"});\nconst nameApplication = new authentik.Application(\"nameApplication\", {slug: \"test-app\"});\nconst app_accessPolicyBinding = new authentik.PolicyBinding(\"app-accessPolicyBinding\", {\n    target: nameApplication.uuid,\n    policy: policy.id,\n    order: 0,\n});\n// Create a binding to a group\nconst admins = authentik.getGroup({\n    name: \"authentik Admins\",\n});\nconst nameIndex_applicationApplication = new authentik.Application(\"nameIndex/applicationApplication\", {slug: \"test-app\"});\nconst app_accessIndex_policyBindingPolicyBinding = new authentik.PolicyBinding(\"app-accessIndex/policyBindingPolicyBinding\", {\n    target: nameApplication.uuid,\n    group: admins.then(admins =\u003e admins.id),\n    order: 0,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\n# Create a policy binding for a resource\npolicy = authentik.PolicyExpression(\"policy\", expression=\"return True\")\nname_application = authentik.Application(\"nameApplication\", slug=\"test-app\")\napp_access_policy_binding = authentik.PolicyBinding(\"app-accessPolicyBinding\",\n    target=name_application.uuid,\n    policy=policy.id,\n    order=0)\n# Create a binding to a group\nadmins = authentik.get_group(name=\"authentik Admins\")\nname_index_application_application = authentik.Application(\"nameIndex/applicationApplication\", slug=\"test-app\")\napp_access_index_policy_binding_policy_binding = authentik.PolicyBinding(\"app-accessIndex/policyBindingPolicyBinding\",\n    target=name_application.uuid,\n    group=admins.id,\n    order=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a policy binding for a resource\n    var policy = new Authentik.PolicyExpression(\"policy\", new()\n    {\n        Expression = \"return True\",\n    });\n\n    var nameApplication = new Authentik.Application(\"nameApplication\", new()\n    {\n        Slug = \"test-app\",\n    });\n\n    var app_accessPolicyBinding = new Authentik.PolicyBinding(\"app-accessPolicyBinding\", new()\n    {\n        Target = nameApplication.Uuid,\n        Policy = policy.Id,\n        Order = 0,\n    });\n\n    // Create a binding to a group\n    var admins = Authentik.GetGroup.Invoke(new()\n    {\n        Name = \"authentik Admins\",\n    });\n\n    var nameIndex_applicationApplication = new Authentik.Application(\"nameIndex/applicationApplication\", new()\n    {\n        Slug = \"test-app\",\n    });\n\n    var app_accessIndex_policyBindingPolicyBinding = new Authentik.PolicyBinding(\"app-accessIndex/policyBindingPolicyBinding\", new()\n    {\n        Target = nameApplication.Uuid,\n        Group = admins.Apply(getGroupResult =\u003e getGroupResult.Id),\n        Order = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpolicy, err := authentik.NewPolicyExpression(ctx, \"policy\", \u0026authentik.PolicyExpressionArgs{\n\t\t\tExpression: pulumi.String(\"return True\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnameApplication, err := authentik.NewApplication(ctx, \"nameApplication\", \u0026authentik.ApplicationArgs{\n\t\t\tSlug: pulumi.String(\"test-app\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewPolicyBinding(ctx, \"app-accessPolicyBinding\", \u0026authentik.PolicyBindingArgs{\n\t\t\tTarget: nameApplication.Uuid,\n\t\t\tPolicy: policy.ID(),\n\t\t\tOrder:  pulumi.Int(0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tadmins, err := authentik.LookupGroup(ctx, \u0026authentik.LookupGroupArgs{\n\t\t\tName: pulumi.StringRef(\"authentik Admins\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewApplication(ctx, \"nameIndex/applicationApplication\", \u0026authentik.ApplicationArgs{\n\t\t\tSlug: pulumi.String(\"test-app\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewPolicyBinding(ctx, \"app-accessIndex/policyBindingPolicyBinding\", \u0026authentik.PolicyBindingArgs{\n\t\t\tTarget: nameApplication.Uuid,\n\t\t\tGroup:  *pulumi.String(admins.Id),\n\t\t\tOrder:  pulumi.Int(0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyExpression;\nimport com.pulumi.authentik.PolicyExpressionArgs;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport com.pulumi.authentik.PolicyBinding;\nimport com.pulumi.authentik.PolicyBindingArgs;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var policy = new PolicyExpression(\"policy\", PolicyExpressionArgs.builder()        \n            .expression(\"return True\")\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()        \n            .slug(\"test-app\")\n            .build());\n\n        var app_accessPolicyBinding = new PolicyBinding(\"app-accessPolicyBinding\", PolicyBindingArgs.builder()        \n            .target(nameApplication.uuid())\n            .policy(policy.id())\n            .order(0)\n            .build());\n\n        final var admins = AuthentikFunctions.getGroup(GetGroupArgs.builder()\n            .name(\"authentik Admins\")\n            .build());\n\n        var nameIndex_applicationApplication = new Application(\"nameIndex/applicationApplication\", ApplicationArgs.builder()        \n            .slug(\"test-app\")\n            .build());\n\n        var app_accessIndex_policyBindingPolicyBinding = new PolicyBinding(\"app-accessIndex/policyBindingPolicyBinding\", PolicyBindingArgs.builder()        \n            .target(nameApplication.uuid())\n            .group(admins.applyValue(getGroupResult -\u003e getGroupResult.id()))\n            .order(0)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a policy binding for a resource\n  policy:\n    type: authentik:PolicyExpression\n    properties:\n      expression: return True\n  nameApplication:\n    type: authentik:Application\n    properties:\n      slug: test-app\n  app-accessPolicyBinding: # Create a binding to a group\n    type: authentik:PolicyBinding\n    properties:\n      target: ${nameApplication.uuid}\n      policy: ${policy.id}\n      order: 0\n  nameIndex/applicationApplication:\n    type: authentik:Application\n    properties:\n      slug: test-app\n  app-accessIndex/policyBindingPolicyBinding:\n    type: authentik:PolicyBinding\n    properties:\n      target: ${nameApplication.uuid}\n      group: ${admins.id}\n      order: 0\nvariables:\n  admins:\n    fn::invoke:\n      Function: authentik:getGroup\n      Arguments:\n        name: authentik Admins\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "group": {
                    "type": "string",
                    "description": "UUID of the group\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "order": {
                    "type": "integer"
                },
                "policy": {
                    "type": "string",
                    "description": "UUID of the policy\n"
                },
                "target": {
                    "type": "string",
                    "description": "ID of the object this binding should apply to\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "user": {
                    "type": "integer",
                    "description": "PK of the user\n"
                }
            },
            "required": [
                "order",
                "target"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "group": {
                    "type": "string",
                    "description": "UUID of the group\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "order": {
                    "type": "integer"
                },
                "policy": {
                    "type": "string",
                    "description": "UUID of the policy\n"
                },
                "target": {
                    "type": "string",
                    "description": "ID of the object this binding should apply to\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "user": {
                    "type": "integer",
                    "description": "PK of the user\n"
                }
            },
            "requiredInputs": [
                "order",
                "target"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyBinding resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "UUID of the group\n"
                    },
                    "negate": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "policy": {
                        "type": "string",
                        "description": "UUID of the policy\n"
                    },
                    "target": {
                        "type": "string",
                        "description": "ID of the object this binding should apply to\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Defaults to `30`.\n"
                    },
                    "user": {
                        "type": "integer",
                        "description": "PK of the user\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyDummy:PolicyDummy": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.PolicyDummy(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.PolicyDummy(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.PolicyDummy(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewPolicyDummy(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyDummy;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new PolicyDummy(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:PolicyDummy\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "waitMax": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "waitMin": {
                    "type": "integer",
                    "description": "Defaults to `5`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "waitMax": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "waitMin": {
                    "type": "integer",
                    "description": "Defaults to `5`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyDummy resources.\n",
                "properties": {
                    "executionLogging": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "waitMax": {
                        "type": "integer",
                        "description": "Defaults to `30`.\n"
                    },
                    "waitMin": {
                        "type": "integer",
                        "description": "Defaults to `5`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyEventMatcher:PolicyEventMatcher": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.PolicyEventMatcher(\"name\", {\n    action: \"login\",\n    app: \"authentik.events\",\n    clientIp: \"1.2.3.4\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.PolicyEventMatcher(\"name\",\n    action=\"login\",\n    app=\"authentik.events\",\n    client_ip=\"1.2.3.4\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.PolicyEventMatcher(\"name\", new()\n    {\n        Action = \"login\",\n        App = \"authentik.events\",\n        ClientIp = \"1.2.3.4\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewPolicyEventMatcher(ctx, \"name\", \u0026authentik.PolicyEventMatcherArgs{\n\t\t\tAction:   pulumi.String(\"login\"),\n\t\t\tApp:      pulumi.String(\"authentik.events\"),\n\t\t\tClientIp: pulumi.String(\"1.2.3.4\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyEventMatcher;\nimport com.pulumi.authentik.PolicyEventMatcherArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new PolicyEventMatcher(\"name\", PolicyEventMatcherArgs.builder()        \n            .action(\"login\")\n            .app(\"authentik.events\")\n            .clientIp(\"1.2.3.4\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:PolicyEventMatcher\n    properties:\n      action: login\n      app: authentik.events\n      clientIp: 1.2.3.4\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "action": {
                    "type": "string"
                },
                "app": {
                    "type": "string"
                },
                "clientIp": {
                    "type": "string"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "action": {
                    "type": "string"
                },
                "app": {
                    "type": "string"
                },
                "clientIp": {
                    "type": "string"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyEventMatcher resources.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "app": {
                        "type": "string"
                    },
                    "clientIp": {
                        "type": "string"
                    },
                    "executionLogging": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "model": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyExpiry:PolicyExpiry": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.PolicyExpiry(\"name\", {days: 3});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.PolicyExpiry(\"name\", days=3)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.PolicyExpiry(\"name\", new()\n    {\n        Days = 3,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewPolicyExpiry(ctx, \"name\", \u0026authentik.PolicyExpiryArgs{\n\t\t\tDays: pulumi.Int(3),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyExpiry;\nimport com.pulumi.authentik.PolicyExpiryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new PolicyExpiry(\"name\", PolicyExpiryArgs.builder()        \n            .days(3)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:PolicyExpiry\n    properties:\n      days: 3\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "days": {
                    "type": "integer"
                },
                "denyOnly": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "days",
                "name"
            ],
            "inputProperties": {
                "days": {
                    "type": "integer"
                },
                "denyOnly": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "days"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyExpiry resources.\n",
                "properties": {
                    "days": {
                        "type": "integer"
                    },
                    "denyOnly": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "executionLogging": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyExpression:PolicyExpression": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.PolicyExpression(\"name\", {expression: \"return True\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.PolicyExpression(\"name\", expression=\"return True\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.PolicyExpression(\"name\", new()\n    {\n        Expression = \"return True\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewPolicyExpression(ctx, \"name\", \u0026authentik.PolicyExpressionArgs{\n\t\t\tExpression: pulumi.String(\"return True\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyExpression;\nimport com.pulumi.authentik.PolicyExpressionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new PolicyExpression(\"name\", PolicyExpressionArgs.builder()        \n            .expression(\"return True\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:PolicyExpression\n    properties:\n      expression: return True\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyExpression resources.\n",
                "properties": {
                    "executionLogging": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyPassword:PolicyPassword": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.PolicyPassword(\"name\", {\n    errorMessage: \"foo\",\n    lengthMin: 8,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.PolicyPassword(\"name\",\n    error_message=\"foo\",\n    length_min=8)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.PolicyPassword(\"name\", new()\n    {\n        ErrorMessage = \"foo\",\n        LengthMin = 8,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewPolicyPassword(ctx, \"name\", \u0026authentik.PolicyPasswordArgs{\n\t\t\tErrorMessage: pulumi.String(\"foo\"),\n\t\t\tLengthMin:    pulumi.Int(8),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyPassword;\nimport com.pulumi.authentik.PolicyPasswordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new PolicyPassword(\"name\", PolicyPasswordArgs.builder()        \n            .errorMessage(\"foo\")\n            .lengthMin(8)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:PolicyPassword\n    properties:\n      errorMessage: foo\n      lengthMin: 8\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "amountDigits": {
                    "type": "integer"
                },
                "amountLowercase": {
                    "type": "integer"
                },
                "amountSymbols": {
                    "type": "integer"
                },
                "amountUppercase": {
                    "type": "integer"
                },
                "checkHaveIBeenPwned": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "checkStaticRules": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "checkZxcvbn": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "errorMessage": {
                    "type": "string"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "hibpAllowedCount": {
                    "type": "integer",
                    "description": "Defaults to `1`.\n"
                },
                "lengthMin": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Defaults to `password`.\n"
                },
                "symbolCharset": {
                    "type": "string",
                    "description": "Defaults to `!\\\"#$%\u0026'()*+,-./:;\u003c=\u003e?@[\\]^_`{|}~`.\n"
                },
                "zxcvbnScoreThreshold": {
                    "type": "integer",
                    "description": "Defaults to `2`.\n"
                }
            },
            "required": [
                "errorMessage",
                "name"
            ],
            "inputProperties": {
                "amountDigits": {
                    "type": "integer"
                },
                "amountLowercase": {
                    "type": "integer"
                },
                "amountSymbols": {
                    "type": "integer"
                },
                "amountUppercase": {
                    "type": "integer"
                },
                "checkHaveIBeenPwned": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "checkStaticRules": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "checkZxcvbn": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "errorMessage": {
                    "type": "string"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "hibpAllowedCount": {
                    "type": "integer",
                    "description": "Defaults to `1`.\n"
                },
                "lengthMin": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Defaults to `password`.\n"
                },
                "symbolCharset": {
                    "type": "string",
                    "description": "Defaults to `!\\\"#$%\u0026'()*+,-./:;\u003c=\u003e?@[\\]^_`{|}~`.\n"
                },
                "zxcvbnScoreThreshold": {
                    "type": "integer",
                    "description": "Defaults to `2`.\n"
                }
            },
            "requiredInputs": [
                "errorMessage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyPassword resources.\n",
                "properties": {
                    "amountDigits": {
                        "type": "integer"
                    },
                    "amountLowercase": {
                        "type": "integer"
                    },
                    "amountSymbols": {
                        "type": "integer"
                    },
                    "amountUppercase": {
                        "type": "integer"
                    },
                    "checkHaveIBeenPwned": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "checkStaticRules": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "checkZxcvbn": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "executionLogging": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "hibpAllowedCount": {
                        "type": "integer",
                        "description": "Defaults to `1`.\n"
                    },
                    "lengthMin": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "Defaults to `password`.\n"
                    },
                    "symbolCharset": {
                        "type": "string",
                        "description": "Defaults to `!\\\"#$%\u0026'()*+,-./:;\u003c=\u003e?@[\\]^_`{|}~`.\n"
                    },
                    "zxcvbnScoreThreshold": {
                        "type": "integer",
                        "description": "Defaults to `2`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyReputation:PolicyReputation": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.PolicyReputation(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.PolicyReputation(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.PolicyReputation(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewPolicyReputation(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyReputation;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new PolicyReputation(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:PolicyReputation\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "checkIp": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "checkUsername": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "threshold": {
                    "type": "integer",
                    "description": "Defaults to `10`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "checkIp": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "checkUsername": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "threshold": {
                    "type": "integer",
                    "description": "Defaults to `10`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyReputation resources.\n",
                "properties": {
                    "checkIp": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "checkUsername": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "executionLogging": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "threshold": {
                        "type": "integer",
                        "description": "Defaults to `10`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingLdap:PropertyMappingLdap": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.PropertyMappingLdap(\"name\", {\n    expression: \"return ldap.get('sAMAccountName')\",\n    objectField: \"username\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.PropertyMappingLdap(\"name\",\n    expression=\"return ldap.get('sAMAccountName')\",\n    object_field=\"username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.PropertyMappingLdap(\"name\", new()\n    {\n        Expression = \"return ldap.get('sAMAccountName')\",\n        ObjectField = \"username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewPropertyMappingLdap(ctx, \"name\", \u0026authentik.PropertyMappingLdapArgs{\n\t\t\tExpression:  pulumi.String(\"return ldap.get('sAMAccountName')\"),\n\t\t\tObjectField: pulumi.String(\"username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PropertyMappingLdap;\nimport com.pulumi.authentik.PropertyMappingLdapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new PropertyMappingLdap(\"name\", PropertyMappingLdapArgs.builder()        \n            .expression(\"return ldap.get('sAMAccountName')\")\n            .objectField(\"username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:PropertyMappingLdap\n    properties:\n      expression: return ldap.get('sAMAccountName')\n      objectField: username\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "objectField": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name",
                "objectField"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "objectField": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression",
                "objectField"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingLdap resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectField": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingNotification:PropertyMappingNotification": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.PropertyMappingNotification(\"name\", {expression: \"return {\\\"foo\\\": context['foo']}\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.PropertyMappingNotification(\"name\", expression=\"return {\\\"foo\\\": context['foo']}\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.PropertyMappingNotification(\"name\", new()\n    {\n        Expression = \"return {\\\"foo\\\": context['foo']}\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewPropertyMappingNotification(ctx, \"name\", \u0026authentik.PropertyMappingNotificationArgs{\n\t\t\tExpression: pulumi.String(\"return {\\\"foo\\\": context['foo']}\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PropertyMappingNotification;\nimport com.pulumi.authentik.PropertyMappingNotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new PropertyMappingNotification(\"name\", PropertyMappingNotificationArgs.builder()        \n            .expression(\"return {\\\"foo\\\": context['foo']}\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:PropertyMappingNotification\n    properties:\n      expression: 'return {\"foo\": context[''foo'']}'\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingNotification resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingSaml:PropertyMappingSaml": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst saml_aws_rolessessionname = new authentik.PropertyMappingSaml(\"saml-aws-rolessessionname\", {\n    expression: \"return user.email\",\n    samlName: \"https://aws.amazon.com/SAML/Attributes/RoleSessionName\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nsaml_aws_rolessessionname = authentik.PropertyMappingSaml(\"saml-aws-rolessessionname\",\n    expression=\"return user.email\",\n    saml_name=\"https://aws.amazon.com/SAML/Attributes/RoleSessionName\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var saml_aws_rolessessionname = new Authentik.PropertyMappingSaml(\"saml-aws-rolessessionname\", new()\n    {\n        Expression = \"return user.email\",\n        SamlName = \"https://aws.amazon.com/SAML/Attributes/RoleSessionName\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewPropertyMappingSaml(ctx, \"saml-aws-rolessessionname\", \u0026authentik.PropertyMappingSamlArgs{\n\t\t\tExpression: pulumi.String(\"return user.email\"),\n\t\t\tSamlName:   pulumi.String(\"https://aws.amazon.com/SAML/Attributes/RoleSessionName\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PropertyMappingSaml;\nimport com.pulumi.authentik.PropertyMappingSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var saml_aws_rolessessionname = new PropertyMappingSaml(\"saml-aws-rolessessionname\", PropertyMappingSamlArgs.builder()        \n            .expression(\"return user.email\")\n            .samlName(\"https://aws.amazon.com/SAML/Attributes/RoleSessionName\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  saml-aws-rolessessionname:\n    type: authentik:PropertyMappingSaml\n    properties:\n      expression: return user.email\n      samlName: https://aws.amazon.com/SAML/Attributes/RoleSessionName\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "samlName": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name",
                "samlName"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "samlName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression",
                "samlName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingSaml resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "samlName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingScim:PropertyMappingScim": {
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingScim resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerLdap:ProviderLdap": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst default-authentication-flow = authentik.getFlow({\n    slug: \"default-authentication-flow\",\n});\nconst nameProviderLdap = new authentik.ProviderLdap(\"nameProviderLdap\", {\n    baseDn: \"dc=ldap,dc=goauthentik,dc=io\",\n    bindFlow: default_authentication_flow.then(default_authentication_flow =\u003e default_authentication_flow.id),\n});\nconst nameApplication = new authentik.Application(\"nameApplication\", {\n    slug: \"ldap-app\",\n    protocolProvider: nameProviderLdap.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\ndefault_authentication_flow = authentik.get_flow(slug=\"default-authentication-flow\")\nname_provider_ldap = authentik.ProviderLdap(\"nameProviderLdap\",\n    base_dn=\"dc=ldap,dc=goauthentik,dc=io\",\n    bind_flow=default_authentication_flow.id)\nname_application = authentik.Application(\"nameApplication\",\n    slug=\"ldap-app\",\n    protocol_provider=name_provider_ldap.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var default_authentication_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-authentication-flow\",\n    });\n\n    var nameProviderLdap = new Authentik.ProviderLdap(\"nameProviderLdap\", new()\n    {\n        BaseDn = \"dc=ldap,dc=goauthentik,dc=io\",\n        BindFlow = default_authentication_flow.Apply(default_authentication_flow =\u003e default_authentication_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n    });\n\n    var nameApplication = new Authentik.Application(\"nameApplication\", new()\n    {\n        Slug = \"ldap-app\",\n        ProtocolProvider = nameProviderLdap.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdefault_authentication_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-authentication-flow\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnameProviderLdap, err := authentik.NewProviderLdap(ctx, \"nameProviderLdap\", \u0026authentik.ProviderLdapArgs{\n\t\t\tBaseDn:   pulumi.String(\"dc=ldap,dc=goauthentik,dc=io\"),\n\t\t\tBindFlow: *pulumi.String(default_authentication_flow.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewApplication(ctx, \"nameApplication\", \u0026authentik.ApplicationArgs{\n\t\t\tSlug:             pulumi.String(\"ldap-app\"),\n\t\t\tProtocolProvider: nameProviderLdap.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.ProviderLdap;\nimport com.pulumi.authentik.ProviderLdapArgs;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default-authentication-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-authentication-flow\")\n            .build());\n\n        var nameProviderLdap = new ProviderLdap(\"nameProviderLdap\", ProviderLdapArgs.builder()        \n            .baseDn(\"dc=ldap,dc=goauthentik,dc=io\")\n            .bindFlow(default_authentication_flow.id())\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()        \n            .slug(\"ldap-app\")\n            .protocolProvider(nameProviderLdap.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  nameProviderLdap:\n    type: authentik:ProviderLdap\n    properties:\n      baseDn: dc=ldap,dc=goauthentik,dc=io\n      bindFlow: ${[\"default-authentication-flow\"].id}\n  nameApplication:\n    type: authentik:Application\n    properties:\n      slug: ldap-app\n      protocolProvider: ${nameProviderLdap.id}\nvariables:\n  default-authentication-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-authentication-flow\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "baseDn": {
                    "type": "string"
                },
                "bindFlow": {
                    "type": "string"
                },
                "bindMode": {
                    "type": "string",
                    "description": "Defaults to `direct`.\n"
                },
                "certificate": {
                    "type": "string"
                },
                "gidStartNumber": {
                    "type": "integer",
                    "description": "Defaults to `4000`.\n"
                },
                "mfaSupport": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string"
                },
                "searchGroup": {
                    "type": "string"
                },
                "searchMode": {
                    "type": "string",
                    "description": "Defaults to `direct`.\n"
                },
                "tlsServerName": {
                    "type": "string"
                },
                "uidStartNumber": {
                    "type": "integer",
                    "description": "Defaults to `2000`.\n"
                }
            },
            "required": [
                "baseDn",
                "bindFlow",
                "name"
            ],
            "inputProperties": {
                "baseDn": {
                    "type": "string"
                },
                "bindFlow": {
                    "type": "string"
                },
                "bindMode": {
                    "type": "string",
                    "description": "Defaults to `direct`.\n"
                },
                "certificate": {
                    "type": "string"
                },
                "gidStartNumber": {
                    "type": "integer",
                    "description": "Defaults to `4000`.\n"
                },
                "mfaSupport": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string"
                },
                "searchGroup": {
                    "type": "string"
                },
                "searchMode": {
                    "type": "string",
                    "description": "Defaults to `direct`.\n"
                },
                "tlsServerName": {
                    "type": "string"
                },
                "uidStartNumber": {
                    "type": "integer",
                    "description": "Defaults to `2000`.\n"
                }
            },
            "requiredInputs": [
                "baseDn",
                "bindFlow"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderLdap resources.\n",
                "properties": {
                    "baseDn": {
                        "type": "string"
                    },
                    "bindFlow": {
                        "type": "string"
                    },
                    "bindMode": {
                        "type": "string",
                        "description": "Defaults to `direct`.\n"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "gidStartNumber": {
                        "type": "integer",
                        "description": "Defaults to `4000`.\n"
                    },
                    "mfaSupport": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "searchGroup": {
                        "type": "string"
                    },
                    "searchMode": {
                        "type": "string",
                        "description": "Defaults to `direct`.\n"
                    },
                    "tlsServerName": {
                        "type": "string"
                    },
                    "uidStartNumber": {
                        "type": "integer",
                        "description": "Defaults to `2000`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerOauth2:ProviderOauth2": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create an OAuth2 Provider\nconst nameProviderOauth2 = new authentik.ProviderOauth2(\"nameProviderOauth2\", {clientId: \"grafana\"});\nconst nameApplication = new authentik.Application(\"nameApplication\", {\n    slug: \"test-app\",\n    protocolProvider: nameProviderOauth2.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create an OAuth2 Provider\nname_provider_oauth2 = authentik.ProviderOauth2(\"nameProviderOauth2\", client_id=\"grafana\")\nname_application = authentik.Application(\"nameApplication\",\n    slug=\"test-app\",\n    protocol_provider=name_provider_oauth2.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create an OAuth2 Provider\n    var nameProviderOauth2 = new Authentik.ProviderOauth2(\"nameProviderOauth2\", new()\n    {\n        ClientId = \"grafana\",\n    });\n\n    var nameApplication = new Authentik.Application(\"nameApplication\", new()\n    {\n        Slug = \"test-app\",\n        ProtocolProvider = nameProviderOauth2.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnameProviderOauth2, err := authentik.NewProviderOauth2(ctx, \"nameProviderOauth2\", \u0026authentik.ProviderOauth2Args{\n\t\t\tClientId: pulumi.String(\"grafana\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewApplication(ctx, \"nameApplication\", \u0026authentik.ApplicationArgs{\n\t\t\tSlug:             pulumi.String(\"test-app\"),\n\t\t\tProtocolProvider: nameProviderOauth2.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.ProviderOauth2;\nimport com.pulumi.authentik.ProviderOauth2Args;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var nameProviderOauth2 = new ProviderOauth2(\"nameProviderOauth2\", ProviderOauth2Args.builder()        \n            .clientId(\"grafana\")\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()        \n            .slug(\"test-app\")\n            .protocolProvider(nameProviderOauth2.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create an OAuth2 Provider\n  nameProviderOauth2:\n    type: authentik:ProviderOauth2\n    properties:\n      clientId: grafana\n  nameApplication:\n    type: authentik:Application\n    properties:\n      slug: test-app\n      protocolProvider: ${nameProviderOauth2.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessCodeValidity": {
                    "type": "string",
                    "description": "Defaults to `minutes=1`.\n"
                },
                "accessTokenValidity": {
                    "type": "string",
                    "description": "Defaults to `minutes=10`.\n"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Generated.\n",
                    "secret": true
                },
                "clientType": {
                    "type": "string",
                    "description": "Defaults to `confidential`.\n"
                },
                "includeClaimsInIdToken": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Defaults to `per_provider`.\n"
                },
                "jwksSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refreshTokenValidity": {
                    "type": "string",
                    "description": "Defaults to `days=30`.\n"
                },
                "signingKey": {
                    "type": "string"
                },
                "subMode": {
                    "type": "string",
                    "description": "Defaults to `hashed_user_id`.\n"
                }
            },
            "required": [
                "authorizationFlow",
                "clientId",
                "clientSecret",
                "name"
            ],
            "inputProperties": {
                "accessCodeValidity": {
                    "type": "string",
                    "description": "Defaults to `minutes=1`.\n"
                },
                "accessTokenValidity": {
                    "type": "string",
                    "description": "Defaults to `minutes=10`.\n"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Generated.\n",
                    "secret": true
                },
                "clientType": {
                    "type": "string",
                    "description": "Defaults to `confidential`.\n"
                },
                "includeClaimsInIdToken": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Defaults to `per_provider`.\n"
                },
                "jwksSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refreshTokenValidity": {
                    "type": "string",
                    "description": "Defaults to `days=30`.\n"
                },
                "signingKey": {
                    "type": "string"
                },
                "subMode": {
                    "type": "string",
                    "description": "Defaults to `hashed_user_id`.\n"
                }
            },
            "requiredInputs": [
                "authorizationFlow",
                "clientId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderOauth2 resources.\n",
                "properties": {
                    "accessCodeValidity": {
                        "type": "string",
                        "description": "Defaults to `minutes=1`.\n"
                    },
                    "accessTokenValidity": {
                        "type": "string",
                        "description": "Defaults to `minutes=10`.\n"
                    },
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "authorizationFlow": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Generated.\n",
                        "secret": true
                    },
                    "clientType": {
                        "type": "string",
                        "description": "Defaults to `confidential`.\n"
                    },
                    "includeClaimsInIdToken": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Defaults to `per_provider`.\n"
                    },
                    "jwksSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "refreshTokenValidity": {
                        "type": "string",
                        "description": "Defaults to `days=30`.\n"
                    },
                    "signingKey": {
                        "type": "string"
                    },
                    "subMode": {
                        "type": "string",
                        "description": "Defaults to `hashed_user_id`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerProxy:ProviderProxy": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst nameProviderProxy = new authentik.ProviderProxy(\"nameProviderProxy\", {\n    internalHost: \"http://foo.bar.baz\",\n    externalHost: \"http://internal.service\",\n    authorizationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n});\nconst nameApplication = new authentik.Application(\"nameApplication\", {\n    slug: \"test-app\",\n    protocolProvider: nameProviderProxy.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nname_provider_proxy = authentik.ProviderProxy(\"nameProviderProxy\",\n    internal_host=\"http://foo.bar.baz\",\n    external_host=\"http://internal.service\",\n    authorization_flow=default_authorization_flow.id)\nname_application = authentik.Application(\"nameApplication\",\n    slug=\"test-app\",\n    protocol_provider=name_provider_proxy.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var nameProviderProxy = new Authentik.ProviderProxy(\"nameProviderProxy\", new()\n    {\n        InternalHost = \"http://foo.bar.baz\",\n        ExternalHost = \"http://internal.service\",\n        AuthorizationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n    });\n\n    var nameApplication = new Authentik.Application(\"nameApplication\", new()\n    {\n        Slug = \"test-app\",\n        ProtocolProvider = nameProviderProxy.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnameProviderProxy, err := authentik.NewProviderProxy(ctx, \"nameProviderProxy\", \u0026authentik.ProviderProxyArgs{\n\t\t\tInternalHost:      pulumi.String(\"http://foo.bar.baz\"),\n\t\t\tExternalHost:      pulumi.String(\"http://internal.service\"),\n\t\t\tAuthorizationFlow: *pulumi.String(default_authorization_flow.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewApplication(ctx, \"nameApplication\", \u0026authentik.ApplicationArgs{\n\t\t\tSlug:             pulumi.String(\"test-app\"),\n\t\t\tProtocolProvider: nameProviderProxy.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.ProviderProxy;\nimport com.pulumi.authentik.ProviderProxyArgs;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var nameProviderProxy = new ProviderProxy(\"nameProviderProxy\", ProviderProxyArgs.builder()        \n            .internalHost(\"http://foo.bar.baz\")\n            .externalHost(\"http://internal.service\")\n            .authorizationFlow(default_authorization_flow.id())\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()        \n            .slug(\"test-app\")\n            .protocolProvider(nameProviderProxy.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  nameProviderProxy:\n    type: authentik:ProviderProxy\n    properties:\n      internalHost: http://foo.bar.baz\n      externalHost: http://internal.service\n      authorizationFlow: ${[\"default-authorization-flow\"].id}\n  nameApplication:\n    type: authentik:Application\n    properties:\n      slug: test-app\n      protocolProvider: ${nameProviderProxy.id}\nvariables:\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessTokenValidity": {
                    "type": "string",
                    "description": "Defaults to `minutes=10`.\n"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "basicAuthEnabled": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "basicAuthPasswordAttribute": {
                    "type": "string"
                },
                "basicAuthUsernameAttribute": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "cookieDomain": {
                    "type": "string"
                },
                "externalHost": {
                    "type": "string"
                },
                "interceptHeaderAuth": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "internalHost": {
                    "type": "string"
                },
                "internalHostSslValidation": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "jwksSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Defaults to `proxy`.\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refreshTokenValidity": {
                    "type": "string",
                    "description": "Defaults to `days=30`.\n"
                },
                "skipPathRegex": {
                    "type": "string"
                }
            },
            "required": [
                "authorizationFlow",
                "clientId",
                "externalHost",
                "name"
            ],
            "inputProperties": {
                "accessTokenValidity": {
                    "type": "string",
                    "description": "Defaults to `minutes=10`.\n"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "basicAuthEnabled": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "basicAuthPasswordAttribute": {
                    "type": "string"
                },
                "basicAuthUsernameAttribute": {
                    "type": "string"
                },
                "cookieDomain": {
                    "type": "string"
                },
                "externalHost": {
                    "type": "string"
                },
                "interceptHeaderAuth": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "internalHost": {
                    "type": "string"
                },
                "internalHostSslValidation": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "jwksSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Defaults to `proxy`.\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refreshTokenValidity": {
                    "type": "string",
                    "description": "Defaults to `days=30`.\n"
                },
                "skipPathRegex": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "authorizationFlow",
                "externalHost"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderProxy resources.\n",
                "properties": {
                    "accessTokenValidity": {
                        "type": "string",
                        "description": "Defaults to `minutes=10`.\n"
                    },
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "authorizationFlow": {
                        "type": "string"
                    },
                    "basicAuthEnabled": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "basicAuthPasswordAttribute": {
                        "type": "string"
                    },
                    "basicAuthUsernameAttribute": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "cookieDomain": {
                        "type": "string"
                    },
                    "externalHost": {
                        "type": "string"
                    },
                    "interceptHeaderAuth": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "internalHost": {
                        "type": "string"
                    },
                    "internalHostSslValidation": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "jwksSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Defaults to `proxy`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "refreshTokenValidity": {
                        "type": "string",
                        "description": "Defaults to `days=30`.\n"
                    },
                    "skipPathRegex": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerRadius:ProviderRadius": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst default-authentication-flow = authentik.getFlow({\n    slug: \"default-authentication-flow\",\n});\nconst nameProviderRadius = new authentik.ProviderRadius(\"nameProviderRadius\", {\n    authorizationFlow: default_authentication_flow.then(default_authentication_flow =\u003e default_authentication_flow.id),\n    clientNetworks: \"10.10.0.0/24\",\n    sharedSecret: \"my-shared-secret\",\n});\nconst nameApplication = new authentik.Application(\"nameApplication\", {\n    slug: \"radius-app\",\n    protocolProvider: nameProviderRadius.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\ndefault_authentication_flow = authentik.get_flow(slug=\"default-authentication-flow\")\nname_provider_radius = authentik.ProviderRadius(\"nameProviderRadius\",\n    authorization_flow=default_authentication_flow.id,\n    client_networks=\"10.10.0.0/24\",\n    shared_secret=\"my-shared-secret\")\nname_application = authentik.Application(\"nameApplication\",\n    slug=\"radius-app\",\n    protocol_provider=name_provider_radius.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var default_authentication_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-authentication-flow\",\n    });\n\n    var nameProviderRadius = new Authentik.ProviderRadius(\"nameProviderRadius\", new()\n    {\n        AuthorizationFlow = default_authentication_flow.Apply(default_authentication_flow =\u003e default_authentication_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        ClientNetworks = \"10.10.0.0/24\",\n        SharedSecret = \"my-shared-secret\",\n    });\n\n    var nameApplication = new Authentik.Application(\"nameApplication\", new()\n    {\n        Slug = \"radius-app\",\n        ProtocolProvider = nameProviderRadius.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdefault_authentication_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-authentication-flow\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnameProviderRadius, err := authentik.NewProviderRadius(ctx, \"nameProviderRadius\", \u0026authentik.ProviderRadiusArgs{\n\t\t\tAuthorizationFlow: *pulumi.String(default_authentication_flow.Id),\n\t\t\tClientNetworks:    pulumi.String(\"10.10.0.0/24\"),\n\t\t\tSharedSecret:      pulumi.String(\"my-shared-secret\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewApplication(ctx, \"nameApplication\", \u0026authentik.ApplicationArgs{\n\t\t\tSlug:             pulumi.String(\"radius-app\"),\n\t\t\tProtocolProvider: nameProviderRadius.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.ProviderRadius;\nimport com.pulumi.authentik.ProviderRadiusArgs;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default-authentication-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-authentication-flow\")\n            .build());\n\n        var nameProviderRadius = new ProviderRadius(\"nameProviderRadius\", ProviderRadiusArgs.builder()        \n            .authorizationFlow(default_authentication_flow.id())\n            .clientNetworks(\"10.10.0.0/24\")\n            .sharedSecret(\"my-shared-secret\")\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()        \n            .slug(\"radius-app\")\n            .protocolProvider(nameProviderRadius.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  nameProviderRadius:\n    type: authentik:ProviderRadius\n    properties:\n      authorizationFlow: ${[\"default-authentication-flow\"].id}\n      clientNetworks: 10.10.0.0/24\n      sharedSecret: my-shared-secret\n  nameApplication:\n    type: authentik:Application\n    properties:\n      slug: radius-app\n      protocolProvider: ${nameProviderRadius.id}\nvariables:\n  default-authentication-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-authentication-flow\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "authorizationFlow": {
                    "type": "string"
                },
                "clientNetworks": {
                    "type": "string",
                    "description": "Defaults to `0.0.0.0/0, ::/0`.\n"
                },
                "name": {
                    "type": "string"
                },
                "sharedSecret": {
                    "type": "string",
                    "secret": true
                }
            },
            "required": [
                "authorizationFlow",
                "name",
                "sharedSecret"
            ],
            "inputProperties": {
                "authorizationFlow": {
                    "type": "string"
                },
                "clientNetworks": {
                    "type": "string",
                    "description": "Defaults to `0.0.0.0/0, ::/0`.\n"
                },
                "name": {
                    "type": "string"
                },
                "sharedSecret": {
                    "type": "string",
                    "secret": true
                }
            },
            "requiredInputs": [
                "authorizationFlow",
                "sharedSecret"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderRadius resources.\n",
                "properties": {
                    "authorizationFlow": {
                        "type": "string"
                    },
                    "clientNetworks": {
                        "type": "string",
                        "description": "Defaults to `0.0.0.0/0, ::/0`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sharedSecret": {
                        "type": "string",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerSaml:ProviderSaml": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst nameProviderSaml = new authentik.ProviderSaml(\"nameProviderSaml\", {\n    authorizationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    acsUrl: \"http://localhost\",\n});\nconst nameApplication = new authentik.Application(\"nameApplication\", {\n    slug: \"test-app\",\n    protocolProvider: nameProviderSaml.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nname_provider_saml = authentik.ProviderSaml(\"nameProviderSaml\",\n    authorization_flow=default_authorization_flow.id,\n    acs_url=\"http://localhost\")\nname_application = authentik.Application(\"nameApplication\",\n    slug=\"test-app\",\n    protocol_provider=name_provider_saml.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var nameProviderSaml = new Authentik.ProviderSaml(\"nameProviderSaml\", new()\n    {\n        AuthorizationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        AcsUrl = \"http://localhost\",\n    });\n\n    var nameApplication = new Authentik.Application(\"nameApplication\", new()\n    {\n        Slug = \"test-app\",\n        ProtocolProvider = nameProviderSaml.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnameProviderSaml, err := authentik.NewProviderSaml(ctx, \"nameProviderSaml\", \u0026authentik.ProviderSamlArgs{\n\t\t\tAuthorizationFlow: *pulumi.String(default_authorization_flow.Id),\n\t\t\tAcsUrl:            pulumi.String(\"http://localhost\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewApplication(ctx, \"nameApplication\", \u0026authentik.ApplicationArgs{\n\t\t\tSlug:             pulumi.String(\"test-app\"),\n\t\t\tProtocolProvider: nameProviderSaml.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.ProviderSaml;\nimport com.pulumi.authentik.ProviderSamlArgs;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var nameProviderSaml = new ProviderSaml(\"nameProviderSaml\", ProviderSamlArgs.builder()        \n            .authorizationFlow(default_authorization_flow.id())\n            .acsUrl(\"http://localhost\")\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()        \n            .slug(\"test-app\")\n            .protocolProvider(nameProviderSaml.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  nameProviderSaml:\n    type: authentik:ProviderSaml\n    properties:\n      authorizationFlow: ${[\"default-authorization-flow\"].id}\n      acsUrl: http://localhost\n  nameApplication:\n    type: authentik:Application\n    properties:\n      slug: test-app\n      protocolProvider: ${nameProviderSaml.id}\nvariables:\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "acsUrl": {
                    "type": "string"
                },
                "assertionValidNotBefore": {
                    "type": "string",
                    "description": "Defaults to `minutes=-5`.\n"
                },
                "assertionValidNotOnOrAfter": {
                    "type": "string",
                    "description": "Defaults to `minutes=5`.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Defaults to `http://www.w3.org/2001/04/xmlenc#sha256`.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "Defaults to `authentik`.\n"
                },
                "name": {
                    "type": "string"
                },
                "nameIdMapping": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sessionValidNotOnOrAfter": {
                    "type": "string",
                    "description": "Defaults to `minutes=86400`.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.\n"
                },
                "signingKp": {
                    "type": "string"
                },
                "spBinding": {
                    "type": "string",
                    "description": "Defaults to `redirect`.\n"
                },
                "urlSloPost": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "urlSloRedirect": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "urlSsoInit": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "urlSsoPost": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "urlSsoRedirect": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "verificationKp": {
                    "type": "string"
                }
            },
            "required": [
                "acsUrl",
                "authorizationFlow",
                "name",
                "urlSloPost",
                "urlSloRedirect",
                "urlSsoInit",
                "urlSsoPost",
                "urlSsoRedirect"
            ],
            "inputProperties": {
                "acsUrl": {
                    "type": "string"
                },
                "assertionValidNotBefore": {
                    "type": "string",
                    "description": "Defaults to `minutes=-5`.\n"
                },
                "assertionValidNotOnOrAfter": {
                    "type": "string",
                    "description": "Defaults to `minutes=5`.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Defaults to `http://www.w3.org/2001/04/xmlenc#sha256`.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "Defaults to `authentik`.\n"
                },
                "name": {
                    "type": "string"
                },
                "nameIdMapping": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sessionValidNotOnOrAfter": {
                    "type": "string",
                    "description": "Defaults to `minutes=86400`.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.\n"
                },
                "signingKp": {
                    "type": "string"
                },
                "spBinding": {
                    "type": "string",
                    "description": "Defaults to `redirect`.\n"
                },
                "urlSloPost": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "urlSloRedirect": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "urlSsoInit": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "urlSsoPost": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "urlSsoRedirect": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "verificationKp": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "acsUrl",
                "authorizationFlow"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderSaml resources.\n",
                "properties": {
                    "acsUrl": {
                        "type": "string"
                    },
                    "assertionValidNotBefore": {
                        "type": "string",
                        "description": "Defaults to `minutes=-5`.\n"
                    },
                    "assertionValidNotOnOrAfter": {
                        "type": "string",
                        "description": "Defaults to `minutes=5`.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "Defaults to ``.\n"
                    },
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "authorizationFlow": {
                        "type": "string"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Defaults to `http://www.w3.org/2001/04/xmlenc#sha256`.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "Defaults to `authentik`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameIdMapping": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sessionValidNotOnOrAfter": {
                        "type": "string",
                        "description": "Defaults to `minutes=86400`.\n"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.\n"
                    },
                    "signingKp": {
                        "type": "string"
                    },
                    "spBinding": {
                        "type": "string",
                        "description": "Defaults to `redirect`.\n"
                    },
                    "urlSloPost": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "urlSloRedirect": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "urlSsoInit": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "urlSsoPost": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "urlSsoRedirect": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "verificationKp": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerScim:ProviderScim": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst user = authentik.getPropertyMappingScim({\n    managed: \"goauthentik.io/providers/scim/user\",\n});\nconst group = authentik.getPropertyMappingScim({\n    managed: \"goauthentik.io/providers/scim/group\",\n});\nconst name = new authentik.ProviderScim(\"name\", {\n    url: \"http://localhost\",\n    token: \"foo\",\n    propertyMappings: [user.then(user =\u003e user.id)],\n    propertyMappingsGroups: [group.then(group =\u003e group.id)],\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\nuser = authentik.get_property_mapping_scim(managed=\"goauthentik.io/providers/scim/user\")\ngroup = authentik.get_property_mapping_scim(managed=\"goauthentik.io/providers/scim/group\")\nname = authentik.ProviderScim(\"name\",\n    url=\"http://localhost\",\n    token=\"foo\",\n    property_mappings=[user.id],\n    property_mappings_groups=[group.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Authentik.GetPropertyMappingScim.Invoke(new()\n    {\n        Managed = \"goauthentik.io/providers/scim/user\",\n    });\n\n    var @group = Authentik.GetPropertyMappingScim.Invoke(new()\n    {\n        Managed = \"goauthentik.io/providers/scim/group\",\n    });\n\n    var name = new Authentik.ProviderScim(\"name\", new()\n    {\n        Url = \"http://localhost\",\n        Token = \"foo\",\n        PropertyMappings = new[]\n        {\n            user.Apply(getPropertyMappingScimResult =\u003e getPropertyMappingScimResult.Id),\n        },\n        PropertyMappingsGroups = new[]\n        {\n            @group.Apply(@group =\u003e @group.Apply(getPropertyMappingScimResult =\u003e getPropertyMappingScimResult.Id)),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tuser, err := authentik.LookupPropertyMappingScim(ctx, \u0026authentik.LookupPropertyMappingScimArgs{\n\t\t\tManaged: pulumi.StringRef(\"goauthentik.io/providers/scim/user\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tgroup, err := authentik.LookupPropertyMappingScim(ctx, \u0026authentik.LookupPropertyMappingScimArgs{\n\t\t\tManaged: pulumi.StringRef(\"goauthentik.io/providers/scim/group\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewProviderScim(ctx, \"name\", \u0026authentik.ProviderScimArgs{\n\t\t\tUrl:   pulumi.String(\"http://localhost\"),\n\t\t\tToken: pulumi.String(\"foo\"),\n\t\t\tPropertyMappings: pulumi.StringArray{\n\t\t\t\t*pulumi.String(user.Id),\n\t\t\t},\n\t\t\tPropertyMappingsGroups: pulumi.StringArray{\n\t\t\t\t*pulumi.String(group.Id),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetPropertyMappingScimArgs;\nimport com.pulumi.authentik.ProviderScim;\nimport com.pulumi.authentik.ProviderScimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = AuthentikFunctions.getPropertyMappingScim(GetPropertyMappingScimArgs.builder()\n            .managed(\"goauthentik.io/providers/scim/user\")\n            .build());\n\n        final var group = AuthentikFunctions.getPropertyMappingScim(GetPropertyMappingScimArgs.builder()\n            .managed(\"goauthentik.io/providers/scim/group\")\n            .build());\n\n        var name = new ProviderScim(\"name\", ProviderScimArgs.builder()        \n            .url(\"http://localhost\")\n            .token(\"foo\")\n            .propertyMappings(user.applyValue(getPropertyMappingScimResult -\u003e getPropertyMappingScimResult.id()))\n            .propertyMappingsGroups(group.applyValue(getPropertyMappingScimResult -\u003e getPropertyMappingScimResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:ProviderScim\n    properties:\n      url: http://localhost\n      token: foo\n      propertyMappings:\n        - ${user.id}\n      propertyMappingsGroups:\n        - ${group.id}\nvariables:\n  user:\n    fn::invoke:\n      Function: authentik:getPropertyMappingScim\n      Arguments:\n        managed: goauthentik.io/providers/scim/user\n  group:\n    fn::invoke:\n      Function: authentik:getPropertyMappingScim\n      Arguments:\n        managed: goauthentik.io/providers/scim/group\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyMappingsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token": {
                    "type": "string",
                    "secret": true
                },
                "url": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "token",
                "url"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyMappingsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token": {
                    "type": "string",
                    "secret": true
                },
                "url": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "token",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderScim resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "propertyMappingsGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "token": {
                        "type": "string",
                        "secret": true
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/scopeMapping:ScopeMapping": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.ScopeMapping(\"name\", {\n    expression: `return {\n  \"policy\": \"readwrite\",\n}\n\n`,\n    scopeName: \"minio\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.ScopeMapping(\"name\",\n    expression=\"\"\"return {\n  \"policy\": \"readwrite\",\n}\n\n\"\"\",\n    scope_name=\"minio\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.ScopeMapping(\"name\", new()\n    {\n        Expression = @\"return {\n  \"\"policy\"\": \"\"readwrite\"\",\n}\n\n\",\n        ScopeName = \"minio\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewScopeMapping(ctx, \"name\", \u0026authentik.ScopeMappingArgs{\n\t\t\tExpression: pulumi.String(\"return {\\n  \\\"policy\\\": \\\"readwrite\\\",\\n}\\n\\n\"),\n\t\t\tScopeName:  pulumi.String(\"minio\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.ScopeMapping;\nimport com.pulumi.authentik.ScopeMappingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new ScopeMapping(\"name\", ScopeMappingArgs.builder()        \n            .expression(\"\"\"\nreturn {\n  \"policy\": \"readwrite\",\n}\n\n            \"\"\")\n            .scopeName(\"minio\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:ScopeMapping\n    properties:\n      expression: |+\n        return {\n          \"policy\": \"readwrite\",\n        }\n\n      scopeName: minio\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scopeName": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name",
                "scopeName"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scopeName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression",
                "scopeName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScopeMapping resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scopeName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/serviceConnectionDocker:ServiceConnectionDocker": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a local docker connection\nconst local = new authentik.ServiceConnectionDocker(\"local\", {local: true});\n// Create a remote docker connection\nconst tls_auth = new authentik.CertificateKeyPair(\"tls-auth\", {\n    certificateData: \"...\",\n    keyData: \"...\",\n});\nconst tls_verification = new authentik.CertificateKeyPair(\"tls-verification\", {certificateData: \"...\"});\nconst remote_host = new authentik.ServiceConnectionDocker(\"remote-host\", {\n    url: \"http://1.2.3.4:2368\",\n    tlsVerification: tls_auth.id,\n    tlsAuthentication: tls_verification.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a local docker connection\nlocal = authentik.ServiceConnectionDocker(\"local\", local=True)\n# Create a remote docker connection\ntls_auth = authentik.CertificateKeyPair(\"tls-auth\",\n    certificate_data=\"...\",\n    key_data=\"...\")\ntls_verification = authentik.CertificateKeyPair(\"tls-verification\", certificate_data=\"...\")\nremote_host = authentik.ServiceConnectionDocker(\"remote-host\",\n    url=\"http://1.2.3.4:2368\",\n    tls_verification=tls_auth.id,\n    tls_authentication=tls_verification.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a local docker connection\n    var local = new Authentik.ServiceConnectionDocker(\"local\", new()\n    {\n        Local = true,\n    });\n\n    // Create a remote docker connection\n    var tls_auth = new Authentik.CertificateKeyPair(\"tls-auth\", new()\n    {\n        CertificateData = \"...\",\n        KeyData = \"...\",\n    });\n\n    var tls_verification = new Authentik.CertificateKeyPair(\"tls-verification\", new()\n    {\n        CertificateData = \"...\",\n    });\n\n    var remote_host = new Authentik.ServiceConnectionDocker(\"remote-host\", new()\n    {\n        Url = \"http://1.2.3.4:2368\",\n        TlsVerification = tls_auth.Id,\n        TlsAuthentication = tls_verification.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewServiceConnectionDocker(ctx, \"local\", \u0026authentik.ServiceConnectionDockerArgs{\n\t\t\tLocal: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewCertificateKeyPair(ctx, \"tls-auth\", \u0026authentik.CertificateKeyPairArgs{\n\t\t\tCertificateData: pulumi.String(\"...\"),\n\t\t\tKeyData:         pulumi.String(\"...\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewCertificateKeyPair(ctx, \"tls-verification\", \u0026authentik.CertificateKeyPairArgs{\n\t\t\tCertificateData: pulumi.String(\"...\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewServiceConnectionDocker(ctx, \"remote-host\", \u0026authentik.ServiceConnectionDockerArgs{\n\t\t\tUrl:               pulumi.String(\"http://1.2.3.4:2368\"),\n\t\t\tTlsVerification:   tls_auth.ID(),\n\t\t\tTlsAuthentication: tls_verification.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.ServiceConnectionDocker;\nimport com.pulumi.authentik.ServiceConnectionDockerArgs;\nimport com.pulumi.authentik.CertificateKeyPair;\nimport com.pulumi.authentik.CertificateKeyPairArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var local = new ServiceConnectionDocker(\"local\", ServiceConnectionDockerArgs.builder()        \n            .local(true)\n            .build());\n\n        var tls_auth = new CertificateKeyPair(\"tls-auth\", CertificateKeyPairArgs.builder()        \n            .certificateData(\"...\")\n            .keyData(\"...\")\n            .build());\n\n        var tls_verification = new CertificateKeyPair(\"tls-verification\", CertificateKeyPairArgs.builder()        \n            .certificateData(\"...\")\n            .build());\n\n        var remote_host = new ServiceConnectionDocker(\"remote-host\", ServiceConnectionDockerArgs.builder()        \n            .url(\"http://1.2.3.4:2368\")\n            .tlsVerification(tls_auth.id())\n            .tlsAuthentication(tls_verification.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a local docker connection\n  local: # Create a remote docker connection\n    type: authentik:ServiceConnectionDocker\n    properties:\n      local: true\n  tls-auth:\n    type: authentik:CertificateKeyPair\n    properties:\n      certificateData: '...'\n      keyData: '...'\n  tls-verification:\n    type: authentik:CertificateKeyPair\n    properties:\n      certificateData: '...'\n  remote-host:\n    type: authentik:ServiceConnectionDocker\n    properties:\n      url: http://1.2.3.4:2368\n      tlsVerification: ${[\"tls-auth\"].id}\n      tlsAuthentication: ${[\"tls-verification\"].id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "local": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "tlsAuthentication": {
                    "type": "string"
                },
                "tlsVerification": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "description": "Defaults to `http+unix:///var/run/docker.sock`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "local": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "tlsAuthentication": {
                    "type": "string"
                },
                "tlsVerification": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "description": "Defaults to `http+unix:///var/run/docker.sock`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceConnectionDocker resources.\n",
                "properties": {
                    "local": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tlsAuthentication": {
                        "type": "string"
                    },
                    "tlsVerification": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "description": "Defaults to `http+unix:///var/run/docker.sock`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/serviceConnectionKubernetes:ServiceConnectionKubernetes": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst local = new authentik.ServiceConnectionKubernetes(\"local\", {local: true});\nconst remote_test_cluster = new authentik.ServiceConnectionKubernetes(\"remote-test-cluster\", {kubeconfig: `kind: Config\nusers: [...]\n\n`});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nlocal = authentik.ServiceConnectionKubernetes(\"local\", local=True)\nremote_test_cluster = authentik.ServiceConnectionKubernetes(\"remote-test-cluster\", kubeconfig=\"\"\"kind: Config\nusers: [...]\n\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var local = new Authentik.ServiceConnectionKubernetes(\"local\", new()\n    {\n        Local = true,\n    });\n\n    var remote_test_cluster = new Authentik.ServiceConnectionKubernetes(\"remote-test-cluster\", new()\n    {\n        Kubeconfig = @\"kind: Config\nusers: [...]\n\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewServiceConnectionKubernetes(ctx, \"local\", \u0026authentik.ServiceConnectionKubernetesArgs{\n\t\t\tLocal: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewServiceConnectionKubernetes(ctx, \"remote-test-cluster\", \u0026authentik.ServiceConnectionKubernetesArgs{\n\t\t\tKubeconfig: pulumi.String(\"kind: Config\\nusers: [...]\\n\\n\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.ServiceConnectionKubernetes;\nimport com.pulumi.authentik.ServiceConnectionKubernetesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var local = new ServiceConnectionKubernetes(\"local\", ServiceConnectionKubernetesArgs.builder()        \n            .local(true)\n            .build());\n\n        var remote_test_cluster = new ServiceConnectionKubernetes(\"remote-test-cluster\", ServiceConnectionKubernetesArgs.builder()        \n            .kubeconfig(\"\"\"\nkind: Config\nusers: [...]\n\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  local:\n    type: authentik:ServiceConnectionKubernetes\n    properties:\n      local: true\n  remote-test-cluster:\n    type: authentik:ServiceConnectionKubernetes\n    properties:\n      kubeconfig: |+\n        kind: Config\n        users: [...]\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "kubeconfig": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n",
                    "secret": true
                },
                "local": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "kubeconfig": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n",
                    "secret": true
                },
                "local": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceConnectionKubernetes resources.\n",
                "properties": {
                    "kubeconfig": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n",
                        "secret": true
                    },
                    "local": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/sourceLdap:SourceLdap": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.SourceLdap(\"name\", {\n    baseDn: \"dn=foo\",\n    bindCn: \"foo\",\n    bindPassword: \"bar\",\n    serverUri: \"ldaps://1.2.3.4\",\n    slug: \"ldap-test\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.SourceLdap(\"name\",\n    base_dn=\"dn=foo\",\n    bind_cn=\"foo\",\n    bind_password=\"bar\",\n    server_uri=\"ldaps://1.2.3.4\",\n    slug=\"ldap-test\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.SourceLdap(\"name\", new()\n    {\n        BaseDn = \"dn=foo\",\n        BindCn = \"foo\",\n        BindPassword = \"bar\",\n        ServerUri = \"ldaps://1.2.3.4\",\n        Slug = \"ldap-test\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewSourceLdap(ctx, \"name\", \u0026authentik.SourceLdapArgs{\n\t\t\tBaseDn:       pulumi.String(\"dn=foo\"),\n\t\t\tBindCn:       pulumi.String(\"foo\"),\n\t\t\tBindPassword: pulumi.String(\"bar\"),\n\t\t\tServerUri:    pulumi.String(\"ldaps://1.2.3.4\"),\n\t\t\tSlug:         pulumi.String(\"ldap-test\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.SourceLdap;\nimport com.pulumi.authentik.SourceLdapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new SourceLdap(\"name\", SourceLdapArgs.builder()        \n            .baseDn(\"dn=foo\")\n            .bindCn(\"foo\")\n            .bindPassword(\"bar\")\n            .serverUri(\"ldaps://1.2.3.4\")\n            .slug(\"ldap-test\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:SourceLdap\n    properties:\n      baseDn: dn=foo\n      bindCn: foo\n      bindPassword: bar\n      serverUri: ldaps://1.2.3.4\n      slug: ldap-test\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "additionalGroupDn": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "additionalUserDn": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "baseDn": {
                    "type": "string"
                },
                "bindCn": {
                    "type": "string"
                },
                "bindPassword": {
                    "type": "string",
                    "secret": true
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "groupMembershipField": {
                    "type": "string",
                    "description": "Defaults to `member`.\n"
                },
                "groupObjectFilter": {
                    "type": "string",
                    "description": "Defaults to `(objectClass=group)`.\n"
                },
                "name": {
                    "type": "string"
                },
                "objectUniquenessField": {
                    "type": "string",
                    "description": "Defaults to `objectSid`.\n"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyMappingsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serverUri": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "startTls": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "syncGroups": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "syncParentGroup": {
                    "type": "string"
                },
                "syncUsers": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "syncUsersPassword": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "userObjectFilter": {
                    "type": "string",
                    "description": "Defaults to `(objectClass=person)`.\n"
                },
                "userPathTemplate": {
                    "type": "string",
                    "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "required": [
                "baseDn",
                "bindCn",
                "bindPassword",
                "name",
                "serverUri",
                "slug",
                "uuid"
            ],
            "inputProperties": {
                "additionalGroupDn": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "additionalUserDn": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "baseDn": {
                    "type": "string"
                },
                "bindCn": {
                    "type": "string"
                },
                "bindPassword": {
                    "type": "string",
                    "secret": true
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "groupMembershipField": {
                    "type": "string",
                    "description": "Defaults to `member`.\n"
                },
                "groupObjectFilter": {
                    "type": "string",
                    "description": "Defaults to `(objectClass=group)`.\n"
                },
                "name": {
                    "type": "string"
                },
                "objectUniquenessField": {
                    "type": "string",
                    "description": "Defaults to `objectSid`.\n"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyMappingsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serverUri": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "startTls": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "syncGroups": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "syncParentGroup": {
                    "type": "string"
                },
                "syncUsers": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "syncUsersPassword": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "userObjectFilter": {
                    "type": "string",
                    "description": "Defaults to `(objectClass=person)`.\n"
                },
                "userPathTemplate": {
                    "type": "string",
                    "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "requiredInputs": [
                "baseDn",
                "bindCn",
                "bindPassword",
                "serverUri",
                "slug"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLdap resources.\n",
                "properties": {
                    "additionalGroupDn": {
                        "type": "string",
                        "description": "Defaults to ``.\n"
                    },
                    "additionalUserDn": {
                        "type": "string",
                        "description": "Defaults to ``.\n"
                    },
                    "baseDn": {
                        "type": "string"
                    },
                    "bindCn": {
                        "type": "string"
                    },
                    "bindPassword": {
                        "type": "string",
                        "secret": true
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "groupMembershipField": {
                        "type": "string",
                        "description": "Defaults to `member`.\n"
                    },
                    "groupObjectFilter": {
                        "type": "string",
                        "description": "Defaults to `(objectClass=group)`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectUniquenessField": {
                        "type": "string",
                        "description": "Defaults to `objectSid`.\n"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "propertyMappingsGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serverUri": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "startTls": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "syncGroups": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "syncParentGroup": {
                        "type": "string"
                    },
                    "syncUsers": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "syncUsersPassword": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "userObjectFilter": {
                        "type": "string",
                        "description": "Defaults to `(objectClass=person)`.\n"
                    },
                    "userPathTemplate": {
                        "type": "string",
                        "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/sourceOauth:SourceOauth": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst name = new authentik.SourceOauth(\"name\", {\n    slug: \"discord\",\n    authenticationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    enrollmentFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    providerType: \"discord\",\n    consumerKey: \"foo\",\n    consumerSecret: \"bar\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nname = authentik.SourceOauth(\"name\",\n    slug=\"discord\",\n    authentication_flow=default_authorization_flow.id,\n    enrollment_flow=default_authorization_flow.id,\n    provider_type=\"discord\",\n    consumer_key=\"foo\",\n    consumer_secret=\"bar\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var name = new Authentik.SourceOauth(\"name\", new()\n    {\n        Slug = \"discord\",\n        AuthenticationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        EnrollmentFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        ProviderType = \"discord\",\n        ConsumerKey = \"foo\",\n        ConsumerSecret = \"bar\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewSourceOauth(ctx, \"name\", \u0026authentik.SourceOauthArgs{\n\t\t\tSlug:               pulumi.String(\"discord\"),\n\t\t\tAuthenticationFlow: *pulumi.String(default_authorization_flow.Id),\n\t\t\tEnrollmentFlow:     *pulumi.String(default_authorization_flow.Id),\n\t\t\tProviderType:       pulumi.String(\"discord\"),\n\t\t\tConsumerKey:        pulumi.String(\"foo\"),\n\t\t\tConsumerSecret:     pulumi.String(\"bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.SourceOauth;\nimport com.pulumi.authentik.SourceOauthArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var name = new SourceOauth(\"name\", SourceOauthArgs.builder()        \n            .slug(\"discord\")\n            .authenticationFlow(default_authorization_flow.id())\n            .enrollmentFlow(default_authorization_flow.id())\n            .providerType(\"discord\")\n            .consumerKey(\"foo\")\n            .consumerSecret(\"bar\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:SourceOauth\n    properties:\n      slug: discord\n      authenticationFlow: ${[\"default-authorization-flow\"].id}\n      enrollmentFlow: ${[\"default-authorization-flow\"].id}\n      providerType: discord\n      consumerKey: foo\n      consumerSecret: bar\nvariables:\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessTokenUrl": {
                    "type": "string",
                    "description": "Only required for OAuth1.\n"
                },
                "additionalScopes": {
                    "type": "string"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                },
                "callbackUri": {
                    "type": "string",
                    "description": "Generated.\n"
                },
                "consumerKey": {
                    "type": "string"
                },
                "consumerSecret": {
                    "type": "string",
                    "secret": true
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "oidcJwks": {
                    "type": "string",
                    "description": "Manually configure JWKS keys for use with machine-to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.\n"
                },
                "oidcJwksUrl": {
                    "type": "string",
                    "description": "Automatically configure JWKS if not specified by `oidc_well_known_url`.\n"
                },
                "oidcWellKnownUrl": {
                    "type": "string",
                    "description": "Automatically configure source from OIDC well-known endpoint. URL is taken as is, and should end with `.well-known/openid-configuration`.\n"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Defaults to `any`.\n"
                },
                "profileUrl": {
                    "type": "string",
                    "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                },
                "providerType": {
                    "type": "string"
                },
                "requestTokenUrl": {
                    "type": "string",
                    "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                },
                "slug": {
                    "type": "string"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Defaults to `identifier`.\n"
                },
                "userPathTemplate": {
                    "type": "string",
                    "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "required": [
                "authenticationFlow",
                "callbackUri",
                "consumerKey",
                "consumerSecret",
                "enrollmentFlow",
                "name",
                "oidcJwks",
                "providerType",
                "slug",
                "uuid"
            ],
            "inputProperties": {
                "accessTokenUrl": {
                    "type": "string",
                    "description": "Only required for OAuth1.\n"
                },
                "additionalScopes": {
                    "type": "string"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                },
                "consumerKey": {
                    "type": "string"
                },
                "consumerSecret": {
                    "type": "string",
                    "secret": true
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "oidcJwks": {
                    "type": "string",
                    "description": "Manually configure JWKS keys for use with machine-to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.\n"
                },
                "oidcJwksUrl": {
                    "type": "string",
                    "description": "Automatically configure JWKS if not specified by `oidc_well_known_url`.\n"
                },
                "oidcWellKnownUrl": {
                    "type": "string",
                    "description": "Automatically configure source from OIDC well-known endpoint. URL is taken as is, and should end with `.well-known/openid-configuration`.\n"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Defaults to `any`.\n"
                },
                "profileUrl": {
                    "type": "string",
                    "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                },
                "providerType": {
                    "type": "string"
                },
                "requestTokenUrl": {
                    "type": "string",
                    "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                },
                "slug": {
                    "type": "string"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Defaults to `identifier`.\n"
                },
                "userPathTemplate": {
                    "type": "string",
                    "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "requiredInputs": [
                "authenticationFlow",
                "consumerKey",
                "consumerSecret",
                "enrollmentFlow",
                "providerType",
                "slug"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOauth resources.\n",
                "properties": {
                    "accessTokenUrl": {
                        "type": "string",
                        "description": "Only required for OAuth1.\n"
                    },
                    "additionalScopes": {
                        "type": "string"
                    },
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "authorizationUrl": {
                        "type": "string",
                        "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                    },
                    "callbackUri": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "consumerKey": {
                        "type": "string"
                    },
                    "consumerSecret": {
                        "type": "string",
                        "secret": true
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "enrollmentFlow": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "oidcJwks": {
                        "type": "string",
                        "description": "Manually configure JWKS keys for use with machine-to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.\n"
                    },
                    "oidcJwksUrl": {
                        "type": "string",
                        "description": "Automatically configure JWKS if not specified by `oidc_well_known_url`.\n"
                    },
                    "oidcWellKnownUrl": {
                        "type": "string",
                        "description": "Automatically configure source from OIDC well-known endpoint. URL is taken as is, and should end with `.well-known/openid-configuration`.\n"
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Defaults to `any`.\n"
                    },
                    "profileUrl": {
                        "type": "string",
                        "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                    },
                    "providerType": {
                        "type": "string"
                    },
                    "requestTokenUrl": {
                        "type": "string",
                        "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "userMatchingMode": {
                        "type": "string",
                        "description": "Defaults to `identifier`.\n"
                    },
                    "userPathTemplate": {
                        "type": "string",
                        "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/sourcePlex:SourcePlex": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst name = new authentik.SourcePlex(\"name\", {\n    slug: \"plex\",\n    authenticationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    enrollmentFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    clientId: \"foo-bar-baz\",\n    plexToken: \"foo\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nname = authentik.SourcePlex(\"name\",\n    slug=\"plex\",\n    authentication_flow=default_authorization_flow.id,\n    enrollment_flow=default_authorization_flow.id,\n    client_id=\"foo-bar-baz\",\n    plex_token=\"foo\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var name = new Authentik.SourcePlex(\"name\", new()\n    {\n        Slug = \"plex\",\n        AuthenticationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        EnrollmentFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        ClientId = \"foo-bar-baz\",\n        PlexToken = \"foo\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewSourcePlex(ctx, \"name\", \u0026authentik.SourcePlexArgs{\n\t\t\tSlug:               pulumi.String(\"plex\"),\n\t\t\tAuthenticationFlow: *pulumi.String(default_authorization_flow.Id),\n\t\t\tEnrollmentFlow:     *pulumi.String(default_authorization_flow.Id),\n\t\t\tClientId:           pulumi.String(\"foo-bar-baz\"),\n\t\t\tPlexToken:          pulumi.String(\"foo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.SourcePlex;\nimport com.pulumi.authentik.SourcePlexArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var name = new SourcePlex(\"name\", SourcePlexArgs.builder()        \n            .slug(\"plex\")\n            .authenticationFlow(default_authorization_flow.id())\n            .enrollmentFlow(default_authorization_flow.id())\n            .clientId(\"foo-bar-baz\")\n            .plexToken(\"foo\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:SourcePlex\n    properties:\n      slug: plex\n      authenticationFlow: ${[\"default-authorization-flow\"].id}\n      enrollmentFlow: ${[\"default-authorization-flow\"].id}\n      clientId: foo-bar-baz\n      plexToken: foo\nvariables:\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowFriends": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "allowedServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plexToken": {
                    "type": "string",
                    "secret": true
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Defaults to `any`.\n"
                },
                "slug": {
                    "type": "string"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Defaults to `identifier`.\n"
                },
                "userPathTemplate": {
                    "type": "string",
                    "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "required": [
                "authenticationFlow",
                "clientId",
                "enrollmentFlow",
                "name",
                "plexToken",
                "slug",
                "uuid"
            ],
            "inputProperties": {
                "allowFriends": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "allowedServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plexToken": {
                    "type": "string",
                    "secret": true
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Defaults to `any`.\n"
                },
                "slug": {
                    "type": "string"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Defaults to `identifier`.\n"
                },
                "userPathTemplate": {
                    "type": "string",
                    "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "requiredInputs": [
                "authenticationFlow",
                "clientId",
                "enrollmentFlow",
                "plexToken",
                "slug"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePlex resources.\n",
                "properties": {
                    "allowFriends": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "allowedServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "enrollmentFlow": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "plexToken": {
                        "type": "string",
                        "secret": true
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Defaults to `any`.\n"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "userMatchingMode": {
                        "type": "string",
                        "description": "Defaults to `identifier`.\n"
                    },
                    "userPathTemplate": {
                        "type": "string",
                        "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/sourceSaml:SourceSaml": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst default-source-pre-authentication = authentik.getFlow({\n    slug: \"default-source-pre-authentication\",\n});\nconst default-source-authentication = authentik.getFlow({\n    slug: \"default-source-authentication\",\n});\nconst default-source-enrollment = authentik.getFlow({\n    slug: \"default-source-enrollment\",\n});\nconst name = new authentik.SourceSaml(\"name\", {\n    slug: \"test-source\",\n    authenticationFlow: default_source_authentication.then(default_source_authentication =\u003e default_source_authentication.id),\n    enrollmentFlow: default_source_enrollment.then(default_source_enrollment =\u003e default_source_enrollment.id),\n    preAuthenticationFlow: default_source_pre_authentication.then(default_source_pre_authentication =\u003e default_source_pre_authentication.id),\n    ssoUrl: \"http://localhost\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\ndefault_source_pre_authentication = authentik.get_flow(slug=\"default-source-pre-authentication\")\ndefault_source_authentication = authentik.get_flow(slug=\"default-source-authentication\")\ndefault_source_enrollment = authentik.get_flow(slug=\"default-source-enrollment\")\nname = authentik.SourceSaml(\"name\",\n    slug=\"test-source\",\n    authentication_flow=default_source_authentication.id,\n    enrollment_flow=default_source_enrollment.id,\n    pre_authentication_flow=default_source_pre_authentication.id,\n    sso_url=\"http://localhost\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var default_source_pre_authentication = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-source-pre-authentication\",\n    });\n\n    var default_source_authentication = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-source-authentication\",\n    });\n\n    var default_source_enrollment = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-source-enrollment\",\n    });\n\n    var name = new Authentik.SourceSaml(\"name\", new()\n    {\n        Slug = \"test-source\",\n        AuthenticationFlow = default_source_authentication.Apply(default_source_authentication =\u003e default_source_authentication.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        EnrollmentFlow = default_source_enrollment.Apply(default_source_enrollment =\u003e default_source_enrollment.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        PreAuthenticationFlow = default_source_pre_authentication.Apply(default_source_pre_authentication =\u003e default_source_pre_authentication.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        SsoUrl = \"http://localhost\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdefault_source_pre_authentication, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-source-pre-authentication\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdefault_source_authentication, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-source-authentication\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdefault_source_enrollment, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-source-enrollment\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewSourceSaml(ctx, \"name\", \u0026authentik.SourceSamlArgs{\n\t\t\tSlug:                  pulumi.String(\"test-source\"),\n\t\t\tAuthenticationFlow:    *pulumi.String(default_source_authentication.Id),\n\t\t\tEnrollmentFlow:        *pulumi.String(default_source_enrollment.Id),\n\t\t\tPreAuthenticationFlow: *pulumi.String(default_source_pre_authentication.Id),\n\t\t\tSsoUrl:                pulumi.String(\"http://localhost\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.SourceSaml;\nimport com.pulumi.authentik.SourceSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default-source-pre-authentication = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-source-pre-authentication\")\n            .build());\n\n        final var default-source-authentication = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-source-authentication\")\n            .build());\n\n        final var default-source-enrollment = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-source-enrollment\")\n            .build());\n\n        var name = new SourceSaml(\"name\", SourceSamlArgs.builder()        \n            .slug(\"test-source\")\n            .authenticationFlow(default_source_authentication.id())\n            .enrollmentFlow(default_source_enrollment.id())\n            .preAuthenticationFlow(default_source_pre_authentication.id())\n            .ssoUrl(\"http://localhost\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:SourceSaml\n    properties:\n      slug: test-source\n      authenticationFlow: ${[\"default-source-authentication\"].id}\n      enrollmentFlow: ${[\"default-source-enrollment\"].id}\n      preAuthenticationFlow: ${[\"default-source-pre-authentication\"].id}\n      ssoUrl: http://localhost\nvariables:\n  default-source-pre-authentication:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-source-pre-authentication\n  default-source-authentication:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-source-authentication\n  default-source-enrollment:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-source-enrollment\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowIdpInitiated": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "bindingType": {
                    "type": "string",
                    "description": "Defaults to `REDIRECT`.\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Defaults to `http://www.w3.org/2001/04/xmlenc#sha256`.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string",
                    "description": "SAML Metadata Generated.\n"
                },
                "name": {
                    "type": "string"
                },
                "nameIdPolicy": {
                    "type": "string",
                    "description": "Defaults to `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`.\n"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Defaults to `any`.\n"
                },
                "preAuthenticationFlow": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.\n"
                },
                "signingKp": {
                    "type": "string"
                },
                "sloUrl": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "ssoUrl": {
                    "type": "string"
                },
                "temporaryUserDeleteAfter": {
                    "type": "string",
                    "description": "Defaults to `days=1`.\n"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Defaults to `identifier`.\n"
                },
                "userPathTemplate": {
                    "type": "string",
                    "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "required": [
                "authenticationFlow",
                "enrollmentFlow",
                "metadata",
                "name",
                "preAuthenticationFlow",
                "slug",
                "ssoUrl",
                "uuid"
            ],
            "inputProperties": {
                "allowIdpInitiated": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "bindingType": {
                    "type": "string",
                    "description": "Defaults to `REDIRECT`.\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Defaults to `http://www.w3.org/2001/04/xmlenc#sha256`.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nameIdPolicy": {
                    "type": "string",
                    "description": "Defaults to `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`.\n"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Defaults to `any`.\n"
                },
                "preAuthenticationFlow": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.\n"
                },
                "signingKp": {
                    "type": "string"
                },
                "sloUrl": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "ssoUrl": {
                    "type": "string"
                },
                "temporaryUserDeleteAfter": {
                    "type": "string",
                    "description": "Defaults to `days=1`.\n"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Defaults to `identifier`.\n"
                },
                "userPathTemplate": {
                    "type": "string",
                    "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "requiredInputs": [
                "authenticationFlow",
                "enrollmentFlow",
                "preAuthenticationFlow",
                "slug",
                "ssoUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSaml resources.\n",
                "properties": {
                    "allowIdpInitiated": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "bindingType": {
                        "type": "string",
                        "description": "Defaults to `REDIRECT`.\n"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Defaults to `http://www.w3.org/2001/04/xmlenc#sha256`.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "enrollmentFlow": {
                        "type": "string"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "string",
                        "description": "SAML Metadata Generated.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameIdPolicy": {
                        "type": "string",
                        "description": "Defaults to `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`.\n"
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Defaults to `any`.\n"
                    },
                    "preAuthenticationFlow": {
                        "type": "string"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.\n"
                    },
                    "signingKp": {
                        "type": "string"
                    },
                    "sloUrl": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "ssoUrl": {
                        "type": "string"
                    },
                    "temporaryUserDeleteAfter": {
                        "type": "string",
                        "description": "Defaults to `days=1`.\n"
                    },
                    "userMatchingMode": {
                        "type": "string",
                        "description": "Defaults to `identifier`.\n"
                    },
                    "userPathTemplate": {
                        "type": "string",
                        "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorDuo:StageAuthenticatorDuo": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageAuthenticatorDuo(\"name\", {\n    apiHostname: \"http://foo.bar.baz\",\n    clientId: \"foo\",\n    clientSecret: \"bar\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageAuthenticatorDuo(\"name\",\n    api_hostname=\"http://foo.bar.baz\",\n    client_id=\"foo\",\n    client_secret=\"bar\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageAuthenticatorDuo(\"name\", new()\n    {\n        ApiHostname = \"http://foo.bar.baz\",\n        ClientId = \"foo\",\n        ClientSecret = \"bar\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageAuthenticatorDuo(ctx, \"name\", \u0026authentik.StageAuthenticatorDuoArgs{\n\t\t\tApiHostname:  pulumi.String(\"http://foo.bar.baz\"),\n\t\t\tClientId:     pulumi.String(\"foo\"),\n\t\t\tClientSecret: pulumi.String(\"bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageAuthenticatorDuo;\nimport com.pulumi.authentik.StageAuthenticatorDuoArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageAuthenticatorDuo(\"name\", StageAuthenticatorDuoArgs.builder()        \n            .apiHostname(\"http://foo.bar.baz\")\n            .clientId(\"foo\")\n            .clientSecret(\"bar\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageAuthenticatorDuo\n    properties:\n      apiHostname: http://foo.bar.baz\n      clientId: foo\n      clientSecret: bar\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "adminIntegrationKey": {
                    "type": "string"
                },
                "adminSecretKey": {
                    "type": "string",
                    "secret": true
                },
                "apiHostname": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "apiHostname",
                "clientId",
                "clientSecret",
                "name"
            ],
            "inputProperties": {
                "adminIntegrationKey": {
                    "type": "string"
                },
                "adminSecretKey": {
                    "type": "string",
                    "secret": true
                },
                "apiHostname": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "apiHostname",
                "clientId",
                "clientSecret"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorDuo resources.\n",
                "properties": {
                    "adminIntegrationKey": {
                        "type": "string"
                    },
                    "adminSecretKey": {
                        "type": "string",
                        "secret": true
                    },
                    "apiHostname": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "clientSecret": {
                        "type": "string",
                        "secret": true
                    },
                    "configureFlow": {
                        "type": "string"
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorSms:StageAuthenticatorSms": {
            "properties": {
                "accountSid": {
                    "type": "string",
                    "secret": true
                },
                "auth": {
                    "type": "string",
                    "secret": true
                },
                "authPassword": {
                    "type": "string",
                    "secret": true
                },
                "authType": {
                    "type": "string",
                    "description": "Defaults to `basic`.\n"
                },
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "fromNumber": {
                    "type": "string"
                },
                "mapping": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "smsProvider": {
                    "type": "string",
                    "description": "Defaults to `twilio`.\n"
                },
                "verifyOnly": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                }
            },
            "required": [
                "accountSid",
                "auth",
                "fromNumber",
                "name"
            ],
            "inputProperties": {
                "accountSid": {
                    "type": "string",
                    "secret": true
                },
                "auth": {
                    "type": "string",
                    "secret": true
                },
                "authPassword": {
                    "type": "string",
                    "secret": true
                },
                "authType": {
                    "type": "string",
                    "description": "Defaults to `basic`.\n"
                },
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "fromNumber": {
                    "type": "string"
                },
                "mapping": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "smsProvider": {
                    "type": "string",
                    "description": "Defaults to `twilio`.\n"
                },
                "verifyOnly": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                }
            },
            "requiredInputs": [
                "accountSid",
                "auth",
                "fromNumber"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorSms resources.\n",
                "properties": {
                    "accountSid": {
                        "type": "string",
                        "secret": true
                    },
                    "auth": {
                        "type": "string",
                        "secret": true
                    },
                    "authPassword": {
                        "type": "string",
                        "secret": true
                    },
                    "authType": {
                        "type": "string",
                        "description": "Defaults to `basic`.\n"
                    },
                    "configureFlow": {
                        "type": "string"
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "fromNumber": {
                        "type": "string"
                    },
                    "mapping": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "smsProvider": {
                        "type": "string",
                        "description": "Defaults to `twilio`.\n"
                    },
                    "verifyOnly": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorStatic:StageAuthenticatorStatic": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageAuthenticatorStatic(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageAuthenticatorStatic(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageAuthenticatorStatic(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageAuthenticatorStatic(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageAuthenticatorStatic;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageAuthenticatorStatic(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageAuthenticatorStatic\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tokenCount": {
                    "type": "integer",
                    "description": "Defaults to `6`.\n"
                },
                "tokenLength": {
                    "type": "integer",
                    "description": "Defaults to `12`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tokenCount": {
                    "type": "integer",
                    "description": "Defaults to `6`.\n"
                },
                "tokenLength": {
                    "type": "integer",
                    "description": "Defaults to `12`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorStatic resources.\n",
                "properties": {
                    "configureFlow": {
                        "type": "string"
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tokenCount": {
                        "type": "integer",
                        "description": "Defaults to `6`.\n"
                    },
                    "tokenLength": {
                        "type": "integer",
                        "description": "Defaults to `12`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorTotp:StageAuthenticatorTotp": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageAuthenticatorTotp(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageAuthenticatorTotp(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageAuthenticatorTotp(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageAuthenticatorTotp(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageAuthenticatorTotp;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageAuthenticatorTotp(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageAuthenticatorTotp\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configureFlow": {
                    "type": "string"
                },
                "digits": {
                    "type": "integer",
                    "description": "Defaults to `6`.\n"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "configureFlow": {
                    "type": "string"
                },
                "digits": {
                    "type": "integer",
                    "description": "Defaults to `6`.\n"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorTotp resources.\n",
                "properties": {
                    "configureFlow": {
                        "type": "string"
                    },
                    "digits": {
                        "type": "integer",
                        "description": "Defaults to `6`.\n"
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorValidate:StageAuthenticatorValidate": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageAuthenticatorValidate(\"name\", {\n    deviceClasses: [\"static\"],\n    notConfiguredAction: \"skip\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageAuthenticatorValidate(\"name\",\n    device_classes=[\"static\"],\n    not_configured_action=\"skip\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageAuthenticatorValidate(\"name\", new()\n    {\n        DeviceClasses = new[]\n        {\n            \"static\",\n        },\n        NotConfiguredAction = \"skip\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageAuthenticatorValidate(ctx, \"name\", \u0026authentik.StageAuthenticatorValidateArgs{\n\t\t\tDeviceClasses: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"static\"),\n\t\t\t},\n\t\t\tNotConfiguredAction: pulumi.String(\"skip\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageAuthenticatorValidate;\nimport com.pulumi.authentik.StageAuthenticatorValidateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageAuthenticatorValidate(\"name\", StageAuthenticatorValidateArgs.builder()        \n            .deviceClasses(\"static\")\n            .notConfiguredAction(\"skip\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageAuthenticatorValidate\n    properties:\n      deviceClasses:\n        - static\n      notConfiguredAction: skip\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configurationStages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deviceClasses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lastAuthThreshold": {
                    "type": "string",
                    "description": "Defaults to `seconds=0`.\n"
                },
                "name": {
                    "type": "string"
                },
                "notConfiguredAction": {
                    "type": "string"
                },
                "webauthnUserVerification": {
                    "type": "string",
                    "description": "Defaults to `preferred`.\n"
                }
            },
            "required": [
                "name",
                "notConfiguredAction"
            ],
            "inputProperties": {
                "configurationStages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deviceClasses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lastAuthThreshold": {
                    "type": "string",
                    "description": "Defaults to `seconds=0`.\n"
                },
                "name": {
                    "type": "string"
                },
                "notConfiguredAction": {
                    "type": "string"
                },
                "webauthnUserVerification": {
                    "type": "string",
                    "description": "Defaults to `preferred`.\n"
                }
            },
            "requiredInputs": [
                "notConfiguredAction"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorValidate resources.\n",
                "properties": {
                    "configurationStages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deviceClasses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lastAuthThreshold": {
                        "type": "string",
                        "description": "Defaults to `seconds=0`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notConfiguredAction": {
                        "type": "string"
                    },
                    "webauthnUserVerification": {
                        "type": "string",
                        "description": "Defaults to `preferred`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorWebauthn:StageAuthenticatorWebauthn": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageAuthenticatorWebauthn(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageAuthenticatorWebauthn(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageAuthenticatorWebauthn(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageAuthenticatorWebauthn(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageAuthenticatorWebauthn;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageAuthenticatorWebauthn(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageAuthenticatorWebauthn\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "authenticatorAttachment": {
                    "type": "string"
                },
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "residentKeyRequirement": {
                    "type": "string",
                    "description": "Defaults to `preferred`.\n"
                },
                "userVerification": {
                    "type": "string",
                    "description": "Defaults to `preferred`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "authenticatorAttachment": {
                    "type": "string"
                },
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "residentKeyRequirement": {
                    "type": "string",
                    "description": "Defaults to `preferred`.\n"
                },
                "userVerification": {
                    "type": "string",
                    "description": "Defaults to `preferred`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorWebauthn resources.\n",
                "properties": {
                    "authenticatorAttachment": {
                        "type": "string"
                    },
                    "configureFlow": {
                        "type": "string"
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "residentKeyRequirement": {
                        "type": "string",
                        "description": "Defaults to `preferred`.\n"
                    },
                    "userVerification": {
                        "type": "string",
                        "description": "Defaults to `preferred`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageCaptcha:StageCaptcha": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageCaptcha(\"name\", {\n    privateKey: \"foo\",\n    publicKey: \"bar\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageCaptcha(\"name\",\n    private_key=\"foo\",\n    public_key=\"bar\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageCaptcha(\"name\", new()\n    {\n        PrivateKey = \"foo\",\n        PublicKey = \"bar\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageCaptcha(ctx, \"name\", \u0026authentik.StageCaptchaArgs{\n\t\t\tPrivateKey: pulumi.String(\"foo\"),\n\t\t\tPublicKey:  pulumi.String(\"bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageCaptcha;\nimport com.pulumi.authentik.StageCaptchaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageCaptcha(\"name\", StageCaptchaArgs.builder()        \n            .privateKey(\"foo\")\n            .publicKey(\"bar\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageCaptcha\n    properties:\n      privateKey: foo\n      publicKey: bar\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "apiUrl": {
                    "type": "string",
                    "description": "Defaults to `https://www.recaptcha.net/recaptcha/api/siteverify`.\n"
                },
                "jsUrl": {
                    "type": "string",
                    "description": "Defaults to `https://www.recaptcha.net/recaptcha/api.js`.\n"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicKey": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "privateKey",
                "publicKey"
            ],
            "inputProperties": {
                "apiUrl": {
                    "type": "string",
                    "description": "Defaults to `https://www.recaptcha.net/recaptcha/api/siteverify`.\n"
                },
                "jsUrl": {
                    "type": "string",
                    "description": "Defaults to `https://www.recaptcha.net/recaptcha/api.js`.\n"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicKey": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "privateKey",
                "publicKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageCaptcha resources.\n",
                "properties": {
                    "apiUrl": {
                        "type": "string",
                        "description": "Defaults to `https://www.recaptcha.net/recaptcha/api/siteverify`.\n"
                    },
                    "jsUrl": {
                        "type": "string",
                        "description": "Defaults to `https://www.recaptcha.net/recaptcha/api.js`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string",
                        "secret": true
                    },
                    "publicKey": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageConsent:StageConsent": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageConsent(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageConsent(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageConsent(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageConsent(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageConsent;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageConsent(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageConsent\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "consentExpireIn": {
                    "type": "string",
                    "description": "Defaults to `weeks=4`.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Defaults to `always_require`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "consentExpireIn": {
                    "type": "string",
                    "description": "Defaults to `weeks=4`.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Defaults to `always_require`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageConsent resources.\n",
                "properties": {
                    "consentExpireIn": {
                        "type": "string",
                        "description": "Defaults to `weeks=4`.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Defaults to `always_require`.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageDeny:StageDeny": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageDeny(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageDeny(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageDeny(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageDeny(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageDeny;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageDeny(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageDeny\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageDeny resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageDummy:StageDummy": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageDummy(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageDummy(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageDummy(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageDummy(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageDummy;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageDummy(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageDummy\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageDummy resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageEmail:StageEmail": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageEmail(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageEmail(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageEmail(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageEmail(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageEmail;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageEmail(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageEmail\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "activateUserOnSuccess": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "fromAddress": {
                    "type": "string",
                    "description": "Defaults to `system@authentik.local`.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Defaults to `localhost`.\n"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Defaults to `25`.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Defaults to `authentik`.\n"
                },
                "template": {
                    "type": "string",
                    "description": "Defaults to `email/password_reset.html`.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "tokenExpiry": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "useGlobalSettings": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "useSsl": {
                    "type": "boolean"
                },
                "useTls": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "activateUserOnSuccess": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "fromAddress": {
                    "type": "string",
                    "description": "Defaults to `system@authentik.local`.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Defaults to `localhost`.\n"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Defaults to `25`.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Defaults to `authentik`.\n"
                },
                "template": {
                    "type": "string",
                    "description": "Defaults to `email/password_reset.html`.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "tokenExpiry": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "useGlobalSettings": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "useSsl": {
                    "type": "boolean"
                },
                "useTls": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageEmail resources.\n",
                "properties": {
                    "activateUserOnSuccess": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "fromAddress": {
                        "type": "string",
                        "description": "Defaults to `system@authentik.local`.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "Defaults to `localhost`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Defaults to `25`.\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Defaults to `authentik`.\n"
                    },
                    "template": {
                        "type": "string",
                        "description": "Defaults to `email/password_reset.html`.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Defaults to `30`.\n"
                    },
                    "tokenExpiry": {
                        "type": "integer",
                        "description": "Defaults to `30`.\n"
                    },
                    "useGlobalSettings": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "useSsl": {
                        "type": "boolean"
                    },
                    "useTls": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageIdentification:StageIdentification": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst nameSourceOauth = new authentik.SourceOauth(\"nameSourceOauth\", {\n    slug: \"test\",\n    authenticationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    enrollmentFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    providerType: \"discord\",\n    consumerKey: \"foo\",\n    consumerSecret: \"bar\",\n});\nconst nameStagePassword = new authentik.StagePassword(\"nameStagePassword\", {backends: [\"authentik.core.auth.InbuiltBackend\"]});\nconst nameStageIdentification = new authentik.StageIdentification(\"nameStageIdentification\", {\n    userFields: [\"username\"],\n    sources: [nameSourceOauth.uuid],\n    passwordStage: nameStagePassword.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nname_source_oauth = authentik.SourceOauth(\"nameSourceOauth\",\n    slug=\"test\",\n    authentication_flow=default_authorization_flow.id,\n    enrollment_flow=default_authorization_flow.id,\n    provider_type=\"discord\",\n    consumer_key=\"foo\",\n    consumer_secret=\"bar\")\nname_stage_password = authentik.StagePassword(\"nameStagePassword\", backends=[\"authentik.core.auth.InbuiltBackend\"])\nname_stage_identification = authentik.StageIdentification(\"nameStageIdentification\",\n    user_fields=[\"username\"],\n    sources=[name_source_oauth.uuid],\n    password_stage=name_stage_password.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var nameSourceOauth = new Authentik.SourceOauth(\"nameSourceOauth\", new()\n    {\n        Slug = \"test\",\n        AuthenticationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        EnrollmentFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        ProviderType = \"discord\",\n        ConsumerKey = \"foo\",\n        ConsumerSecret = \"bar\",\n    });\n\n    var nameStagePassword = new Authentik.StagePassword(\"nameStagePassword\", new()\n    {\n        Backends = new[]\n        {\n            \"authentik.core.auth.InbuiltBackend\",\n        },\n    });\n\n    var nameStageIdentification = new Authentik.StageIdentification(\"nameStageIdentification\", new()\n    {\n        UserFields = new[]\n        {\n            \"username\",\n        },\n        Sources = new[]\n        {\n            nameSourceOauth.Uuid,\n        },\n        PasswordStage = nameStagePassword.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnameSourceOauth, err := authentik.NewSourceOauth(ctx, \"nameSourceOauth\", \u0026authentik.SourceOauthArgs{\n\t\t\tSlug:               pulumi.String(\"test\"),\n\t\t\tAuthenticationFlow: *pulumi.String(default_authorization_flow.Id),\n\t\t\tEnrollmentFlow:     *pulumi.String(default_authorization_flow.Id),\n\t\t\tProviderType:       pulumi.String(\"discord\"),\n\t\t\tConsumerKey:        pulumi.String(\"foo\"),\n\t\t\tConsumerSecret:     pulumi.String(\"bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnameStagePassword, err := authentik.NewStagePassword(ctx, \"nameStagePassword\", \u0026authentik.StagePasswordArgs{\n\t\t\tBackends: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"authentik.core.auth.InbuiltBackend\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewStageIdentification(ctx, \"nameStageIdentification\", \u0026authentik.StageIdentificationArgs{\n\t\t\tUserFields: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"username\"),\n\t\t\t},\n\t\t\tSources: pulumi.StringArray{\n\t\t\t\tnameSourceOauth.Uuid,\n\t\t\t},\n\t\t\tPasswordStage: nameStagePassword.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.SourceOauth;\nimport com.pulumi.authentik.SourceOauthArgs;\nimport com.pulumi.authentik.StagePassword;\nimport com.pulumi.authentik.StagePasswordArgs;\nimport com.pulumi.authentik.StageIdentification;\nimport com.pulumi.authentik.StageIdentificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var nameSourceOauth = new SourceOauth(\"nameSourceOauth\", SourceOauthArgs.builder()        \n            .slug(\"test\")\n            .authenticationFlow(default_authorization_flow.id())\n            .enrollmentFlow(default_authorization_flow.id())\n            .providerType(\"discord\")\n            .consumerKey(\"foo\")\n            .consumerSecret(\"bar\")\n            .build());\n\n        var nameStagePassword = new StagePassword(\"nameStagePassword\", StagePasswordArgs.builder()        \n            .backends(\"authentik.core.auth.InbuiltBackend\")\n            .build());\n\n        var nameStageIdentification = new StageIdentification(\"nameStageIdentification\", StageIdentificationArgs.builder()        \n            .userFields(\"username\")\n            .sources(nameSourceOauth.uuid())\n            .passwordStage(nameStagePassword.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  nameSourceOauth:\n    type: authentik:SourceOauth\n    properties:\n      slug: test\n      authenticationFlow: ${[\"default-authorization-flow\"].id}\n      enrollmentFlow: ${[\"default-authorization-flow\"].id}\n      providerType: discord\n      consumerKey: foo\n      consumerSecret: bar\n  nameStagePassword:\n    type: authentik:StagePassword\n    properties:\n      backends:\n        - authentik.core.auth.InbuiltBackend\n  nameStageIdentification:\n    type: authentik:StageIdentification\n    properties:\n      userFields:\n        - username\n      sources:\n        - ${nameSourceOauth.uuid}\n      passwordStage: ${nameStagePassword.id}\nvariables:\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "caseInsensitiveMatching": {
                    "type": "boolean"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passwordStage": {
                    "type": "string"
                },
                "passwordlessFlow": {
                    "type": "string"
                },
                "recoveryFlow": {
                    "type": "string"
                },
                "showMatchedUser": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "showSourceLabels": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "caseInsensitiveMatching": {
                    "type": "boolean"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passwordStage": {
                    "type": "string"
                },
                "passwordlessFlow": {
                    "type": "string"
                },
                "recoveryFlow": {
                    "type": "string"
                },
                "showMatchedUser": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "showSourceLabels": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageIdentification resources.\n",
                "properties": {
                    "caseInsensitiveMatching": {
                        "type": "boolean"
                    },
                    "enrollmentFlow": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passwordStage": {
                        "type": "string"
                    },
                    "passwordlessFlow": {
                        "type": "string"
                    },
                    "recoveryFlow": {
                        "type": "string"
                    },
                    "showMatchedUser": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "showSourceLabels": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageInvitation:StageInvitation": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageInvitation(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageInvitation(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageInvitation(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageInvitation(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageInvitation;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageInvitation(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageInvitation\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "continueFlowWithoutInvitation": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "continueFlowWithoutInvitation": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageInvitation resources.\n",
                "properties": {
                    "continueFlowWithoutInvitation": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stagePassword:StagePassword": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst test = new authentik.StagePassword(\"test\", {backends: [\"authentik.core.auth.InbuiltBackend\"]});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\ntest = authentik.StagePassword(\"test\", backends=[\"authentik.core.auth.InbuiltBackend\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Authentik.StagePassword(\"test\", new()\n    {\n        Backends = new[]\n        {\n            \"authentik.core.auth.InbuiltBackend\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStagePassword(ctx, \"test\", \u0026authentik.StagePasswordArgs{\n\t\t\tBackends: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"authentik.core.auth.InbuiltBackend\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StagePassword;\nimport com.pulumi.authentik.StagePasswordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new StagePassword(\"test\", StagePasswordArgs.builder()        \n            .backends(\"authentik.core.auth.InbuiltBackend\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: authentik:StagePassword\n    properties:\n      backends:\n        - authentik.core.auth.InbuiltBackend\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "backends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configureFlow": {
                    "type": "string"
                },
                "failedAttemptsBeforeCancel": {
                    "type": "integer",
                    "description": "Defaults to `5`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "backends",
                "name"
            ],
            "inputProperties": {
                "backends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configureFlow": {
                    "type": "string"
                },
                "failedAttemptsBeforeCancel": {
                    "type": "integer",
                    "description": "Defaults to `5`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "backends"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StagePassword resources.\n",
                "properties": {
                    "backends": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "configureFlow": {
                        "type": "string"
                    },
                    "failedAttemptsBeforeCancel": {
                        "type": "integer",
                        "description": "Defaults to `5`.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stagePrompt:StagePrompt": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a prompt stage with 1 field\nconst field = new authentik.StagePromptField(\"field\", {\n    fieldKey: \"username\",\n    label: \"Username\",\n    type: \"username\",\n});\nconst name = new authentik.StagePrompt(\"name\", {fields: [resource.authentik_stage_prompt_field.field.id]});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a prompt stage with 1 field\nfield = authentik.StagePromptField(\"field\",\n    field_key=\"username\",\n    label=\"Username\",\n    type=\"username\")\nname = authentik.StagePrompt(\"name\", fields=[resource[\"authentik_stage_prompt_field\"][\"field\"][\"id\"]])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a prompt stage with 1 field\n    var field = new Authentik.StagePromptField(\"field\", new()\n    {\n        FieldKey = \"username\",\n        Label = \"Username\",\n        Type = \"username\",\n    });\n\n    var name = new Authentik.StagePrompt(\"name\", new()\n    {\n        Fields = new[]\n        {\n            resource.Authentik_stage_prompt_field.Field.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStagePromptField(ctx, \"field\", \u0026authentik.StagePromptFieldArgs{\n\t\t\tFieldKey: pulumi.String(\"username\"),\n\t\t\tLabel:    pulumi.String(\"Username\"),\n\t\t\tType:     pulumi.String(\"username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewStagePrompt(ctx, \"name\", \u0026authentik.StagePromptArgs{\n\t\t\tFields: pulumi.StringArray{\n\t\t\t\tresource.Authentik_stage_prompt_field.Field.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StagePromptField;\nimport com.pulumi.authentik.StagePromptFieldArgs;\nimport com.pulumi.authentik.StagePrompt;\nimport com.pulumi.authentik.StagePromptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var field = new StagePromptField(\"field\", StagePromptFieldArgs.builder()        \n            .fieldKey(\"username\")\n            .label(\"Username\")\n            .type(\"username\")\n            .build());\n\n        var name = new StagePrompt(\"name\", StagePromptArgs.builder()        \n            .fields(resource.authentik_stage_prompt_field().field().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a prompt stage with 1 field\n  field:\n    type: authentik:StagePromptField\n    properties:\n      fieldKey: username\n      label: Username\n      type: username\n  name:\n    type: authentik:StagePrompt\n    properties:\n      fields:\n        - ${resource.authentik_stage_prompt_field.field.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "validationPolicies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "fields",
                "name"
            ],
            "inputProperties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "validationPolicies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "fields"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StagePrompt resources.\n",
                "properties": {
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "validationPolicies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stagePromptField:StagePromptField": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst field = new authentik.StagePromptField(\"field\", {\n    fieldKey: \"username\",\n    label: \"Username\",\n    type: \"username\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nfield = authentik.StagePromptField(\"field\",\n    field_key=\"username\",\n    label=\"Username\",\n    type=\"username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var field = new Authentik.StagePromptField(\"field\", new()\n    {\n        FieldKey = \"username\",\n        Label = \"Username\",\n        Type = \"username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStagePromptField(ctx, \"field\", \u0026authentik.StagePromptFieldArgs{\n\t\t\tFieldKey: pulumi.String(\"username\"),\n\t\t\tLabel:    pulumi.String(\"Username\"),\n\t\t\tType:     pulumi.String(\"username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StagePromptField;\nimport com.pulumi.authentik.StagePromptFieldArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var field = new StagePromptField(\"field\", StagePromptFieldArgs.builder()        \n            .fieldKey(\"username\")\n            .label(\"Username\")\n            .type(\"username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  field:\n    type: authentik:StagePromptField\n    properties:\n      fieldKey: username\n      label: Username\n      type: username\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "fieldKey": {
                    "type": "string"
                },
                "initialValue": {
                    "type": "string"
                },
                "initialValueExpression": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "placeholder": {
                    "type": "string"
                },
                "placeholderExpression": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "subText": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "fieldKey",
                "label",
                "name",
                "type"
            ],
            "inputProperties": {
                "fieldKey": {
                    "type": "string"
                },
                "initialValue": {
                    "type": "string"
                },
                "initialValueExpression": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "placeholder": {
                    "type": "string"
                },
                "placeholderExpression": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "subText": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "type": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "fieldKey",
                "label",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StagePromptField resources.\n",
                "properties": {
                    "fieldKey": {
                        "type": "string"
                    },
                    "initialValue": {
                        "type": "string"
                    },
                    "initialValueExpression": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "label": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "placeholder": {
                        "type": "string"
                    },
                    "placeholderExpression": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "subText": {
                        "type": "string",
                        "description": "Defaults to ``.\n"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageUserDelete:StageUserDelete": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageUserDelete(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageUserDelete(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageUserDelete(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageUserDelete(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageUserDelete;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageUserDelete(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageUserDelete\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageUserDelete resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageUserLogin:StageUserLogin": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageUserLogin(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageUserLogin(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageUserLogin(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageUserLogin(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageUserLogin;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageUserLogin(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageUserLogin\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string"
                },
                "rememberMeOffset": {
                    "type": "string",
                    "description": "Defaults to `seconds=0`.\n"
                },
                "sessionDuration": {
                    "type": "string",
                    "description": "Defaults to `seconds=0`.\n"
                },
                "terminateOtherSessions": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                },
                "rememberMeOffset": {
                    "type": "string",
                    "description": "Defaults to `seconds=0`.\n"
                },
                "sessionDuration": {
                    "type": "string",
                    "description": "Defaults to `seconds=0`.\n"
                },
                "terminateOtherSessions": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageUserLogin resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "rememberMeOffset": {
                        "type": "string",
                        "description": "Defaults to `seconds=0`.\n"
                    },
                    "sessionDuration": {
                        "type": "string",
                        "description": "Defaults to `seconds=0`.\n"
                    },
                    "terminateOtherSessions": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageUserLogout:StageUserLogout": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageUserLogout(\"name\", {});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageUserLogout(\"name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageUserLogout(\"name\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageUserLogout(ctx, \"name\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageUserLogout;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageUserLogout(\"name\");\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageUserLogout\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageUserLogout resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageUserWrite:StageUserWrite": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst name = new authentik.StageUserWrite(\"name\", {createUsersAsInactive: false});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\nname = authentik.StageUserWrite(\"name\", create_users_as_inactive=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var name = new Authentik.StageUserWrite(\"name\", new()\n    {\n        CreateUsersAsInactive = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewStageUserWrite(ctx, \"name\", \u0026authentik.StageUserWriteArgs{\n\t\t\tCreateUsersAsInactive: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageUserWrite;\nimport com.pulumi.authentik.StageUserWriteArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var name = new StageUserWrite(\"name\", StageUserWriteArgs.builder()        \n            .createUsersAsInactive(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:StageUserWrite\n    properties:\n      createUsersAsInactive: false\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "createUsersAsInactive": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "createUsersGroup": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userCreationMode": {
                    "type": "string",
                    "description": "Defaults to `create_when_required`.\n"
                },
                "userPathTemplate": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "createUsersAsInactive": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "createUsersGroup": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userCreationMode": {
                    "type": "string",
                    "description": "Defaults to `create_when_required`.\n"
                },
                "userPathTemplate": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageUserWrite resources.\n",
                "properties": {
                    "createUsersAsInactive": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "createUsersGroup": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "userCreationMode": {
                        "type": "string",
                        "description": "Defaults to `create_when_required`.\n"
                    },
                    "userPathTemplate": {
                        "type": "string",
                        "description": "Defaults to ``.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/tenant:Tenant": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst _default = new authentik.Tenant(\"default\", {\n    brandingTitle: \"test\",\n    \"default\": true,\n    domain: \".\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\ndefault = authentik.Tenant(\"default\",\n    branding_title=\"test\",\n    default=True,\n    domain=\".\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @default = new Authentik.Tenant(\"default\", new()\n    {\n        BrandingTitle = \"test\",\n        Default = true,\n        Domain = \".\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewTenant(ctx, \"default\", \u0026authentik.TenantArgs{\n\t\t\tBrandingTitle: pulumi.String(\"test\"),\n\t\t\tDefault:       pulumi.Bool(true),\n\t\t\tDomain:        pulumi.String(\".\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.Tenant;\nimport com.pulumi.authentik.TenantArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var default_ = new Tenant(\"default\", TenantArgs.builder()        \n            .brandingTitle(\"test\")\n            .default_(true)\n            .domain(\".\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  default:\n    type: authentik:Tenant\n    properties:\n      brandingTitle: test\n      default: true\n      domain: .\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "attributes": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "brandingFavicon": {
                    "type": "string"
                },
                "brandingLogo": {
                    "type": "string"
                },
                "brandingTitle": {
                    "type": "string",
                    "description": "Defaults to `authentik`.\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "domain": {
                    "type": "string"
                },
                "eventRetention": {
                    "type": "string",
                    "description": "Defaults to `days=365`.\n"
                },
                "flowAuthentication": {
                    "type": "string"
                },
                "flowDeviceCode": {
                    "type": "string"
                },
                "flowInvalidation": {
                    "type": "string"
                },
                "flowRecovery": {
                    "type": "string"
                },
                "flowUnenrollment": {
                    "type": "string"
                },
                "flowUserSettings": {
                    "type": "string"
                },
                "webCertificate": {
                    "type": "string"
                }
            },
            "required": [
                "domain"
            ],
            "inputProperties": {
                "attributes": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "brandingFavicon": {
                    "type": "string"
                },
                "brandingLogo": {
                    "type": "string"
                },
                "brandingTitle": {
                    "type": "string",
                    "description": "Defaults to `authentik`.\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "domain": {
                    "type": "string"
                },
                "eventRetention": {
                    "type": "string",
                    "description": "Defaults to `days=365`.\n"
                },
                "flowAuthentication": {
                    "type": "string"
                },
                "flowDeviceCode": {
                    "type": "string"
                },
                "flowInvalidation": {
                    "type": "string"
                },
                "flowRecovery": {
                    "type": "string"
                },
                "flowUnenrollment": {
                    "type": "string"
                },
                "flowUserSettings": {
                    "type": "string"
                },
                "webCertificate": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tenant resources.\n",
                "properties": {
                    "attributes": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                    },
                    "brandingFavicon": {
                        "type": "string"
                    },
                    "brandingLogo": {
                        "type": "string"
                    },
                    "brandingTitle": {
                        "type": "string",
                        "description": "Defaults to `authentik`.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "eventRetention": {
                        "type": "string",
                        "description": "Defaults to `days=365`.\n"
                    },
                    "flowAuthentication": {
                        "type": "string"
                    },
                    "flowDeviceCode": {
                        "type": "string"
                    },
                    "flowInvalidation": {
                        "type": "string"
                    },
                    "flowRecovery": {
                        "type": "string"
                    },
                    "flowUnenrollment": {
                        "type": "string"
                    },
                    "flowUserSettings": {
                        "type": "string"
                    },
                    "webCertificate": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/token:Token": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "expires": {
                    "type": "string"
                },
                "expiresIn": {
                    "type": "integer",
                    "description": "Generated.\n"
                },
                "expiring": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "identifier": {
                    "type": "string"
                },
                "intent": {
                    "type": "string",
                    "description": "Defaults to `api`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Generated.\n",
                    "secret": true
                },
                "retrieveKey": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "user": {
                    "type": "integer"
                }
            },
            "required": [
                "expiresIn",
                "identifier",
                "key",
                "user"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "expires": {
                    "type": "string"
                },
                "expiring": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "identifier": {
                    "type": "string"
                },
                "intent": {
                    "type": "string",
                    "description": "Defaults to `api`.\n"
                },
                "retrieveKey": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "user": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "identifier",
                "user"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Token resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "expires": {
                        "type": "string"
                    },
                    "expiresIn": {
                        "type": "integer",
                        "description": "Generated.\n"
                    },
                    "expiring": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "intent": {
                        "type": "string",
                        "description": "Defaults to `api`.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Generated.\n",
                        "secret": true
                    },
                    "retrieveKey": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "user": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/user:User": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a user\nconst nameUser = new authentik.User(\"nameUser\", {username: \"user\"});\n// Create a user that is member of a group\nconst group = new authentik.Group(\"group\", {});\nconst nameIndex_userUser = new authentik.User(\"nameIndex/userUser\", {\n    username: \"user\",\n    groups: [group.id],\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a user\nname_user = authentik.User(\"nameUser\", username=\"user\")\n# Create a user that is member of a group\ngroup = authentik.Group(\"group\")\nname_index_user_user = authentik.User(\"nameIndex/userUser\",\n    username=\"user\",\n    groups=[group.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a user\n    var nameUser = new Authentik.User(\"nameUser\", new()\n    {\n        Username = \"user\",\n    });\n\n    // Create a user that is member of a group\n    var @group = new Authentik.Group(\"group\");\n\n    var nameIndex_userUser = new Authentik.User(\"nameIndex/userUser\", new()\n    {\n        Username = \"user\",\n        Groups = new[]\n        {\n            @group.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.NewUser(ctx, \"nameUser\", \u0026authentik.UserArgs{\n\t\t\tUsername: pulumi.String(\"user\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tgroup, err := authentik.NewGroup(ctx, \"group\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewUser(ctx, \"nameIndex/userUser\", \u0026authentik.UserArgs{\n\t\t\tUsername: pulumi.String(\"user\"),\n\t\t\tGroups: pulumi.StringArray{\n\t\t\t\tgroup.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.User;\nimport com.pulumi.authentik.UserArgs;\nimport com.pulumi.authentik.Group;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var nameUser = new User(\"nameUser\", UserArgs.builder()        \n            .username(\"user\")\n            .build());\n\n        var group = new Group(\"group\");\n\n        var nameIndex_userUser = new User(\"nameIndex/userUser\", UserArgs.builder()        \n            .username(\"user\")\n            .groups(group.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a user\n  nameUser: # Create a user that is member of a group\n    type: authentik:User\n    properties:\n      username: user\n  group:\n    type: authentik:Group\n  nameIndex/userUser:\n    type: authentik:User\n    properties:\n      username: user\n      groups:\n        - ${group.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "attributes": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Generated.\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Defaults to `users`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Defaults to `internal`.\n"
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "groups",
                "name",
                "username"
            ],
            "inputProperties": {
                "attributes": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Generated.\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Defaults to `users`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Defaults to `internal`.\n"
                },
                "username": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "attributes": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                    },
                    "email": {
                        "type": "string"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Generated.\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Defaults to ``.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Defaults to `users`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Defaults to `internal`.\n"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "authentik:index/getCertificateKeyPair:getCertificateKeyPair": {
            "description": "Get certificate-key pairs by name\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst generated = authentik.getCertificateKeyPair({\n    name: \"authentik Self-signed Certificate\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\ngenerated = authentik.get_certificate_key_pair(name=\"authentik Self-signed Certificate\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var generated = Authentik.GetCertificateKeyPair.Invoke(new()\n    {\n        Name = \"authentik Self-signed Certificate\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.LookupCertificateKeyPair(ctx, \u0026authentik.LookupCertificateKeyPairArgs{\n\t\t\tName: \"authentik Self-signed Certificate\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetCertificateKeyPairArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var generated = AuthentikFunctions.getCertificateKeyPair(GetCertificateKeyPairArgs.builder()\n            .name(\"authentik Self-signed Certificate\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  generated:\n    fn::invoke:\n      Function: authentik:getCertificateKeyPair\n      Arguments:\n        name: authentik Self-signed Certificate\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCertificateKeyPair.\n",
                "properties": {
                    "fetchCertificate": {
                        "type": "boolean",
                        "description": "If set to true, certificate data will be fetched. Defaults to `true`.\n"
                    },
                    "fetchKey": {
                        "type": "boolean",
                        "description": "If set to true, private key data will be fetched. Defaults to `true`.\n"
                    },
                    "keyData": {
                        "type": "string",
                        "description": "Generated.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCertificateKeyPair.\n",
                "properties": {
                    "certificateData": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "expiry": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "fetchCertificate": {
                        "type": "boolean",
                        "description": "If set to true, certificate data will be fetched. Defaults to `true`.\n"
                    },
                    "fetchKey": {
                        "type": "boolean",
                        "description": "If set to true, private key data will be fetched. Defaults to `true`.\n"
                    },
                    "fingerprint1": {
                        "type": "string",
                        "description": "SHA1-hashed certificate fingerprint Generated.\n"
                    },
                    "fingerprint256": {
                        "type": "string",
                        "description": "SHA256-hashed certificate fingerprint Generated.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "keyData": {
                        "type": "string",
                        "description": "Generated.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "certificateData",
                    "expiry",
                    "fingerprint1",
                    "fingerprint256",
                    "id",
                    "keyData",
                    "name",
                    "subject"
                ]
            }
        },
        "authentik:index/getFlow:getFlow": {
            "description": "Get flows by Slug and/or designation\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFlow.\n",
                "properties": {
                    "authentication": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "designation": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFlow.\n",
                "properties": {
                    "authentication": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "designation": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authentication",
                    "designation",
                    "name",
                    "slug",
                    "title",
                    "id"
                ]
            }
        },
        "authentik:index/getGroup:getGroup": {
            "description": "Get groups by pk or name\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst admins = authentik.getGroup({\n    name: \"authentik Admins\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\nadmins = authentik.get_group(name=\"authentik Admins\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var admins = Authentik.GetGroup.Invoke(new()\n    {\n        Name = \"authentik Admins\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.LookupGroup(ctx, \u0026authentik.LookupGroupArgs{\n\t\t\tName: pulumi.StringRef(\"authentik Admins\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var admins = AuthentikFunctions.getGroup(GetGroupArgs.builder()\n            .name(\"authentik Admins\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  admins:\n    fn::invoke:\n      Function: authentik:getGroup\n      Arguments:\n        name: authentik Admins\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "pk": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "attributes": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isSuperuser": {
                        "type": "boolean",
                        "description": "Generated.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "numPk": {
                        "type": "integer",
                        "description": "Generated.\n"
                    },
                    "parent": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "parentName": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "pk": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Generated.\n"
                    },
                    "usersObjs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/authentik:index/getGroupUsersObj:getGroupUsersObj"
                        },
                        "description": "Generated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "attributes",
                    "isSuperuser",
                    "numPk",
                    "parent",
                    "parentName",
                    "users",
                    "usersObjs",
                    "id"
                ]
            }
        },
        "authentik:index/getGroups:getGroups": {
            "description": "Get groups list\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst all = authentik.getGroups({});\nconst admins = authentik.getGroups({\n    isSuperuser: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\nall = authentik.get_groups()\nadmins = authentik.get_groups(is_superuser=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Authentik.GetGroups.Invoke();\n\n    var admins = Authentik.GetGroups.Invoke(new()\n    {\n        IsSuperuser = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.GetGroups(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.GetGroups(ctx, \u0026authentik.GetGroupsArgs{\n\t\t\tIsSuperuser: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetGroupsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = AuthentikFunctions.getGroups();\n\n        final var admins = AuthentikFunctions.getGroups(GetGroupsArgs.builder()\n            .isSuperuser(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: authentik:getGroups\n      Arguments: {}\n  admins:\n    fn::invoke:\n      Function: authentik:getGroups\n      Arguments:\n        isSuperuser: true\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGroups.\n",
                "properties": {
                    "attributes": {
                        "type": "string"
                    },
                    "isSuperuser": {
                        "type": "boolean"
                    },
                    "membersByPks": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "membersByUsernames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "ordering": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroups.\n",
                "properties": {
                    "attributes": {
                        "type": "string"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/authentik:index/getGroupsGroup:getGroupsGroup"
                        },
                        "description": "Generated.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isSuperuser": {
                        "type": "boolean"
                    },
                    "membersByPks": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "membersByUsernames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "ordering": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "authentik:index/getPropertyMappingLdap:getPropertyMappingLdap": {
            "description": "Get LDAP Property mappings\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst test = authentik.getPropertyMappingLdap({\n    managedLists: [\n        \"goauthentik.io/sources/ldap/default-name\",\n        \"goauthentik.io/sources/ldap/default-mail\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\ntest = authentik.get_property_mapping_ldap(managed_lists=[\n    \"goauthentik.io/sources/ldap/default-name\",\n    \"goauthentik.io/sources/ldap/default-mail\",\n])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Authentik.GetPropertyMappingLdap.Invoke(new()\n    {\n        ManagedLists = new[]\n        {\n            \"goauthentik.io/sources/ldap/default-name\",\n            \"goauthentik.io/sources/ldap/default-mail\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.LookupPropertyMappingLdap(ctx, \u0026authentik.LookupPropertyMappingLdapArgs{\n\t\t\tManagedLists: []string{\n\t\t\t\t\"goauthentik.io/sources/ldap/default-name\",\n\t\t\t\t\"goauthentik.io/sources/ldap/default-mail\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetPropertyMappingLdapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = AuthentikFunctions.getPropertyMappingLdap(GetPropertyMappingLdapArgs.builder()\n            .managedLists(            \n                \"goauthentik.io/sources/ldap/default-name\",\n                \"goauthentik.io/sources/ldap/default-mail\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: authentik:getPropertyMappingLdap\n      Arguments:\n        managedLists:\n          - goauthentik.io/sources/ldap/default-name\n          - goauthentik.io/sources/ldap/default-mail\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyMappingLdap.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrive multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectField": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyMappingLdap.\n",
                "properties": {
                    "expression": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrive multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectField": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "expression",
                    "ids",
                    "objectField",
                    "id"
                ]
            }
        },
        "authentik:index/getPropertyMappingSaml:getPropertyMappingSaml": {
            "description": "Get SAML Property mappings\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst test = authentik.getPropertyMappingSaml({\n    managedLists: [\n        \"goauthentik.io/providers/saml/upn\",\n        \"goauthentik.io/providers/saml/name\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\ntest = authentik.get_property_mapping_saml(managed_lists=[\n    \"goauthentik.io/providers/saml/upn\",\n    \"goauthentik.io/providers/saml/name\",\n])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Authentik.GetPropertyMappingSaml.Invoke(new()\n    {\n        ManagedLists = new[]\n        {\n            \"goauthentik.io/providers/saml/upn\",\n            \"goauthentik.io/providers/saml/name\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.LookupPropertyMappingSaml(ctx, \u0026authentik.LookupPropertyMappingSamlArgs{\n\t\t\tManagedLists: []string{\n\t\t\t\t\"goauthentik.io/providers/saml/upn\",\n\t\t\t\t\"goauthentik.io/providers/saml/name\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetPropertyMappingSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = AuthentikFunctions.getPropertyMappingSaml(GetPropertyMappingSamlArgs.builder()\n            .managedLists(            \n                \"goauthentik.io/providers/saml/upn\",\n                \"goauthentik.io/providers/saml/name\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: authentik:getPropertyMappingSaml\n      Arguments:\n        managedLists:\n          - goauthentik.io/providers/saml/upn\n          - goauthentik.io/providers/saml/name\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyMappingSaml.\n",
                "properties": {
                    "expression": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "friendlyName": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrive multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "samlName": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyMappingSaml.\n",
                "properties": {
                    "expression": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "friendlyName": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrive multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "samlName": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "expression",
                    "friendlyName",
                    "ids",
                    "samlName",
                    "id"
                ]
            }
        },
        "authentik:index/getPropertyMappingScim:getPropertyMappingScim": {
            "description": "Get SCIM Property mappings\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst test = authentik.getPropertyMappingScim({\n    managedLists: [\n        \"goauthentik.io/providers/scim/user\",\n        \"goauthentik.io/providers/scim/group\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\ntest = authentik.get_property_mapping_scim(managed_lists=[\n    \"goauthentik.io/providers/scim/user\",\n    \"goauthentik.io/providers/scim/group\",\n])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Authentik.GetPropertyMappingScim.Invoke(new()\n    {\n        ManagedLists = new[]\n        {\n            \"goauthentik.io/providers/scim/user\",\n            \"goauthentik.io/providers/scim/group\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.LookupPropertyMappingScim(ctx, \u0026authentik.LookupPropertyMappingScimArgs{\n\t\t\tManagedLists: []string{\n\t\t\t\t\"goauthentik.io/providers/scim/user\",\n\t\t\t\t\"goauthentik.io/providers/scim/group\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetPropertyMappingScimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = AuthentikFunctions.getPropertyMappingScim(GetPropertyMappingScimArgs.builder()\n            .managedLists(            \n                \"goauthentik.io/providers/scim/user\",\n                \"goauthentik.io/providers/scim/group\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: authentik:getPropertyMappingScim\n      Arguments:\n        managedLists:\n          - goauthentik.io/providers/scim/user\n          - goauthentik.io/providers/scim/group\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyMappingScim.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrive multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyMappingScim.\n",
                "properties": {
                    "expression": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrive multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "expression",
                    "ids",
                    "id"
                ]
            }
        },
        "authentik:index/getProviderOauth2Config:getProviderOauth2Config": {
            "description": "Get OAuth2 provider config\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProviderOauth2Config.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Find provider by name\n"
                    },
                    "providerId": {
                        "type": "integer",
                        "description": "Find provider by ID\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProviderOauth2Config.\n",
                "properties": {
                    "authorizeUrl": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "jwksUrl": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "logoutUrl": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Find provider by name\n"
                    },
                    "providerId": {
                        "type": "integer",
                        "description": "Find provider by ID\n"
                    },
                    "providerInfoUrl": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "tokenUrl": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "userInfoUrl": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authorizeUrl",
                    "issuerUrl",
                    "jwksUrl",
                    "logoutUrl",
                    "providerInfoUrl",
                    "tokenUrl",
                    "userInfoUrl",
                    "id"
                ]
            }
        },
        "authentik:index/getProviderSamlMetadata:getProviderSamlMetadata": {
            "description": "Get SAML Provider metadata\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProviderSamlMetadata.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Find provider by name\n"
                    },
                    "providerId": {
                        "type": "integer",
                        "description": "Find provider by ID\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProviderSamlMetadata.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "metadata": {
                        "type": "string",
                        "description": "SAML Metadata Generated.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Find provider by name\n"
                    },
                    "providerId": {
                        "type": "integer",
                        "description": "Find provider by ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "metadata",
                    "id"
                ]
            }
        },
        "authentik:index/getScopeMapping:getScopeMapping": {
            "description": "Get OAuth Scope mappings\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst test = authentik.getScopeMapping({\n    managedLists: [\n        \"goauthentik.io/providers/oauth2/scope-email\",\n        \"goauthentik.io/providers/oauth2/scope-openid\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\ntest = authentik.get_scope_mapping(managed_lists=[\n    \"goauthentik.io/providers/oauth2/scope-email\",\n    \"goauthentik.io/providers/oauth2/scope-openid\",\n])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Authentik.GetScopeMapping.Invoke(new()\n    {\n        ManagedLists = new[]\n        {\n            \"goauthentik.io/providers/oauth2/scope-email\",\n            \"goauthentik.io/providers/oauth2/scope-openid\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.LookupScopeMapping(ctx, \u0026authentik.LookupScopeMappingArgs{\n\t\t\tManagedLists: []string{\n\t\t\t\t\"goauthentik.io/providers/oauth2/scope-email\",\n\t\t\t\t\"goauthentik.io/providers/oauth2/scope-openid\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetScopeMappingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = AuthentikFunctions.getScopeMapping(GetScopeMappingArgs.builder()\n            .managedLists(            \n                \"goauthentik.io/providers/oauth2/scope-email\",\n                \"goauthentik.io/providers/oauth2/scope-openid\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: authentik:getScopeMapping\n      Arguments:\n        managedLists:\n          - goauthentik.io/providers/oauth2/scope-email\n          - goauthentik.io/providers/oauth2/scope-openid\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getScopeMapping.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrive multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scopeName": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getScopeMapping.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "expression": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrive multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scopeName": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "expression",
                    "ids",
                    "scopeName",
                    "id"
                ]
            }
        },
        "authentik:index/getSource:getSource": {
            "description": "Get Source by name, slug or managed\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst inbuilt = authentik.getSource({\n    managed: \"goauthentik.io/sources/inbuilt\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\ninbuilt = authentik.get_source(managed=\"goauthentik.io/sources/inbuilt\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var inbuilt = Authentik.GetSource.Invoke(new()\n    {\n        Managed = \"goauthentik.io/sources/inbuilt\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.GetSource(ctx, \u0026authentik.GetSourceArgs{\n\t\t\tManaged: pulumi.StringRef(\"goauthentik.io/sources/inbuilt\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetSourceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var inbuilt = AuthentikFunctions.getSource(GetSourceArgs.builder()\n            .managed(\"goauthentik.io/sources/inbuilt\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  inbuilt:\n    fn::invoke:\n      Function: authentik:getSource\n      Arguments:\n        managed: goauthentik.io/sources/inbuilt\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSource.\n",
                "properties": {
                    "managed": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSource.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "managed": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "managed",
                    "name",
                    "slug",
                    "uuid",
                    "id"
                ]
            }
        },
        "authentik:index/getStage:getStage": {
            "description": "Get stages by name\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst default-authentication-identification = authentik.getStage({\n    name: \"default-authentication-identification\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\ndefault_authentication_identification = authentik.get_stage(name=\"default-authentication-identification\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var default_authentication_identification = Authentik.GetStage.Invoke(new()\n    {\n        Name = \"default-authentication-identification\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.GetStage(ctx, \u0026authentik.GetStageArgs{\n\t\t\tName: pulumi.StringRef(\"default-authentication-identification\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetStageArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default-authentication-identification = AuthentikFunctions.getStage(GetStageArgs.builder()\n            .name(\"default-authentication-identification\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  default-authentication-identification:\n    fn::invoke:\n      Function: authentik:getStage\n      Arguments:\n        name: default-authentication-identification\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getStage.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getStage.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "authentik:index/getTenant:getTenant": {
            "description": "Get tenants by domain\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst authentik-default = authentik.getTenant({\n    domain: \"authentik-default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\nauthentik_default = authentik.get_tenant(domain=\"authentik-default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var authentik_default = Authentik.GetTenant.Invoke(new()\n    {\n        Domain = \"authentik-default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.LookupTenant(ctx, \u0026authentik.LookupTenantArgs{\n\t\t\tDomain: pulumi.StringRef(\"authentik-default\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetTenantArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var authentik-default = AuthentikFunctions.getTenant(GetTenantArgs.builder()\n            .domain(\"authentik-default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  authentik-default:\n    fn::invoke:\n      Function: authentik:getTenant\n      Arguments:\n        domain: authentik-default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTenant.\n",
                "properties": {
                    "brandingFavicon": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "brandingLogo": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "brandingTitle": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Generated.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "eventRetention": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowAuthentication": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowDeviceCode": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowInvalidation": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowRecovery": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowUnenrollment": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowUserSettings": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "webCertificate": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTenant.\n",
                "properties": {
                    "brandingFavicon": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "brandingLogo": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "brandingTitle": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Generated.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "eventRetention": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowAuthentication": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowDeviceCode": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowInvalidation": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowRecovery": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowUnenrollment": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowUserSettings": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "webCertificate": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandingFavicon",
                    "brandingLogo",
                    "brandingTitle",
                    "default",
                    "domain",
                    "eventRetention",
                    "flowAuthentication",
                    "flowDeviceCode",
                    "flowInvalidation",
                    "flowRecovery",
                    "flowUnenrollment",
                    "flowUserSettings",
                    "webCertificate",
                    "id"
                ]
            }
        },
        "authentik:index/getUser:getUser": {
            "description": "Get users by pk or username\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst akadmin = authentik.getUser({\n    username: \"akadmin\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\nakadmin = authentik.get_user(username=\"akadmin\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var akadmin = Authentik.GetUser.Invoke(new()\n    {\n        Username = \"akadmin\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.LookupUser(ctx, \u0026authentik.LookupUserArgs{\n\t\t\tUsername: pulumi.StringRef(\"akadmin\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var akadmin = AuthentikFunctions.getUser(GetUserArgs.builder()\n            .username(\"akadmin\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  akadmin:\n    fn::invoke:\n      Function: authentik:getUser\n      Arguments:\n        username: akadmin\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "description": "Generated.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "attributes": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Generated.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Generated.\n"
                    },
                    "isSuperuser": {
                        "type": "boolean",
                        "description": "Generated.\n"
                    },
                    "lastLogin": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "pk": {
                        "type": "integer",
                        "description": "Generated.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "uid": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "attributes",
                    "avatar",
                    "email",
                    "groups",
                    "isActive",
                    "isSuperuser",
                    "lastLogin",
                    "name",
                    "path",
                    "pk",
                    "type",
                    "uid",
                    "username",
                    "id"
                ]
            }
        },
        "authentik:index/getUsers:getUsers": {
            "description": "Get users list\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst all = authentik.getUsers({});\nconst admins = authentik.getUsers({\n    isSuperuser: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\nall = authentik.get_users()\nadmins = authentik.get_users(is_superuser=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Authentik.GetUsers.Invoke();\n\n    var admins = Authentik.GetUsers.Invoke(new()\n    {\n        IsSuperuser = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.GetUsers(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.GetUsers(ctx, \u0026authentik.GetUsersArgs{\n\t\t\tIsSuperuser: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = AuthentikFunctions.getUsers();\n\n        final var admins = AuthentikFunctions.getUsers(GetUsersArgs.builder()\n            .isSuperuser(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: authentik:getUsers\n      Arguments: {}\n  admins:\n    fn::invoke:\n      Function: authentik:getUsers\n      Arguments:\n        isSuperuser: true\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "attributes": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "groupsByNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groupsByPks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isSuperuser": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ordering": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "pathStartswith": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "attributes": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "groupsByNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groupsByPks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isSuperuser": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ordering": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "pathStartswith": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/authentik:index/getUsersUser:getUsersUser"
                        },
                        "description": "Generated.\n"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "users",
                    "id"
                ]
            }
        }
    }
}