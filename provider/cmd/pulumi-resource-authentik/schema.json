{
    "name": "authentik",
    "displayName": "authentik",
    "description": "A Pulumi package for creating and managing authentik cloud resources.",
    "keywords": [
        "pulumi",
        "authentik",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "GPL-3.0-or-later",
    "attribution": "This Pulumi package is based on the [`authentik` Terraform Provider](https://github.com/OSMIT-GmbH/terraform-provider-authentik).",
    "repository": "https://github.com/OSMIT-GmbH/pulumi-authentik",
    "pluginDownloadURL": "https://github.com/OSMIT-GmbH/pulumi-authentik/releases/download/v${VERSION}",
    "publisher": "OSMIT-GmbH",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "OSMIT_GmbH",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/OSMIT-GmbH/pulumi-authentik/sdk/v2024/go/authentik",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageName": "@osmit-gmbh/pulumi-authentik",
            "packageDescription": "A Pulumi package for creating and managing authentik cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/OSMIT-GmbH/terraform-provider-authentik)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-authentik` repo](https://github.com/OSMIT-GmbH/pulumi-authentik/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-authentik` repo](https://github.com/OSMIT-GmbH/terraform-provider-authentik/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "packageName": "osmit_gmbh_pulumi_authentik",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/OSMIT-GmbH/terraform-provider-authentik)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-authentik` repo](https://github.com/OSMIT-GmbH/pulumi-authentik/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-authentik` repo](https://github.com/OSMIT-GmbH/terraform-provider-authentik/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "headers": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Optional HTTP headers sent with every request\n",
                "secret": true
            },
            "insecure": {
                "type": "boolean",
                "description": "Whether to skip TLS verification, can optionally be passed as `AUTHENTIK_INSECURE` environmental variable\n"
            },
            "token": {
                "type": "string",
                "description": "The authentik API token, can optionally be passed as `AUTHENTIK_TOKEN` environmental variable\n",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "The authentik API endpoint, can optionally be passed as `AUTHENTIK_URL` environmental variable\n"
            }
        },
        "defaults": [
            "token",
            "url"
        ]
    },
    "types": {
        "authentik:index/getGroupUsersObj:getGroupUsersObj": {
            "properties": {
                "attributes": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastLogin": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pk": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attributes",
                "email",
                "isActive",
                "lastLogin",
                "name",
                "pk",
                "uid",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "authentik:index/getGroupsGroup:getGroupsGroup": {
            "properties": {
                "attributes": {
                    "type": "string"
                },
                "isSuperuser": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "numPk": {
                    "type": "integer"
                },
                "parent": {
                    "type": "string"
                },
                "parentName": {
                    "type": "string"
                },
                "pk": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "usersObjs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/authentik:index/getGroupsGroupUsersObj:getGroupsGroupUsersObj"
                    }
                }
            },
            "type": "object",
            "required": [
                "attributes",
                "isSuperuser",
                "name",
                "numPk",
                "parent",
                "parentName",
                "pk",
                "users",
                "usersObjs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "authentik:index/getGroupsGroupUsersObj:getGroupsGroupUsersObj": {
            "properties": {
                "attributes": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastLogin": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pk": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attributes",
                "email",
                "isActive",
                "lastLogin",
                "name",
                "pk",
                "uid",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "authentik:index/getUsersUser:getUsersUser": {
            "properties": {
                "attributes": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isActive": {
                    "type": "boolean"
                },
                "isSuperuser": {
                    "type": "boolean"
                },
                "lastLogin": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "pk": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attributes",
                "avatar",
                "email",
                "groups",
                "isActive",
                "isSuperuser",
                "lastLogin",
                "name",
                "path",
                "pk",
                "type",
                "uid",
                "username",
                "uuid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the authentik package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "headers": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Optional HTTP headers sent with every request\n",
                "secret": true
            },
            "insecure": {
                "type": "boolean",
                "description": "Whether to skip TLS verification, can optionally be passed as `AUTHENTIK_INSECURE` environmental variable\n"
            },
            "token": {
                "type": "string",
                "description": "The authentik API token, can optionally be passed as `AUTHENTIK_TOKEN` environmental variable\n",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "The authentik API endpoint, can optionally be passed as `AUTHENTIK_URL` environmental variable\n"
            }
        },
        "required": [
            "token",
            "url"
        ],
        "inputProperties": {
            "headers": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Optional HTTP headers sent with every request\n",
                "secret": true
            },
            "insecure": {
                "type": "boolean",
                "description": "Whether to skip TLS verification, can optionally be passed as `AUTHENTIK_INSECURE` environmental variable\n"
            },
            "token": {
                "type": "string",
                "description": "The authentik API token, can optionally be passed as `AUTHENTIK_TOKEN` environmental variable\n",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "The authentik API endpoint, can optionally be passed as `AUTHENTIK_URL` environmental variable\n"
            }
        },
        "requiredInputs": [
            "token",
            "url"
        ]
    },
    "resources": {
        "authentik:index/application:Application": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// Create an application with a provider attached and policies applied\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst name = new authentik.ProviderOauth2(\"name\", {\n    name: \"example-app\",\n    clientId: \"example-app\",\n    clientSecret: \"test\",\n    authorizationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n});\nconst policy = new authentik.PolicyExpression(\"policy\", {\n    name: \"example\",\n    expression: \"return True\",\n});\nconst nameApplication = new authentik.Application(\"name\", {\n    name: \"example-app\",\n    slug: \"example-app\",\n    protocolProvider: name.id,\n});\nconst app_access = new authentik.PolicyBinding(\"app-access\", {\n    target: nameApplication.uuid,\n    policy: policy.id,\n    order: 0,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\n# Create an application with a provider attached and policies applied\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nname = authentik.ProviderOauth2(\"name\",\n    name=\"example-app\",\n    client_id=\"example-app\",\n    client_secret=\"test\",\n    authorization_flow=default_authorization_flow.id)\npolicy = authentik.PolicyExpression(\"policy\",\n    name=\"example\",\n    expression=\"return True\")\nname_application = authentik.Application(\"name\",\n    name=\"example-app\",\n    slug=\"example-app\",\n    protocol_provider=name.id)\napp_access = authentik.PolicyBinding(\"app-access\",\n    target=name_application.uuid,\n    policy=policy.id,\n    order=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create an application with a provider attached and policies applied\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var name = new Authentik.ProviderOauth2(\"name\", new()\n    {\n        Name = \"example-app\",\n        ClientId = \"example-app\",\n        ClientSecret = \"test\",\n        AuthorizationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n    });\n\n    var policy = new Authentik.PolicyExpression(\"policy\", new()\n    {\n        Name = \"example\",\n        Expression = \"return True\",\n    });\n\n    var nameApplication = new Authentik.Application(\"name\", new()\n    {\n        Name = \"example-app\",\n        Slug = \"example-app\",\n        ProtocolProvider = name.Id,\n    });\n\n    var app_access = new Authentik.PolicyBinding(\"app-access\", new()\n    {\n        Target = nameApplication.Uuid,\n        Policy = policy.Id,\n        Order = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create an application with a provider attached and policies applied\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tname, err := authentik.NewProviderOauth2(ctx, \"name\", \u0026authentik.ProviderOauth2Args{\n\t\t\tName:              pulumi.String(\"example-app\"),\n\t\t\tClientId:          pulumi.String(\"example-app\"),\n\t\t\tClientSecret:      pulumi.String(\"test\"),\n\t\t\tAuthorizationFlow: pulumi.String(default_authorization_flow.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tpolicy, err := authentik.NewPolicyExpression(ctx, \"policy\", \u0026authentik.PolicyExpressionArgs{\n\t\t\tName:       pulumi.String(\"example\"),\n\t\t\tExpression: pulumi.String(\"return True\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnameApplication, err := authentik.NewApplication(ctx, \"name\", \u0026authentik.ApplicationArgs{\n\t\t\tName:             pulumi.String(\"example-app\"),\n\t\t\tSlug:             pulumi.String(\"example-app\"),\n\t\t\tProtocolProvider: name.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewPolicyBinding(ctx, \"app-access\", \u0026authentik.PolicyBindingArgs{\n\t\t\tTarget: nameApplication.Uuid,\n\t\t\tPolicy: policy.ID(),\n\t\t\tOrder:  pulumi.Int(0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.ProviderOauth2;\nimport com.pulumi.authentik.ProviderOauth2Args;\nimport com.pulumi.authentik.PolicyExpression;\nimport com.pulumi.authentik.PolicyExpressionArgs;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport com.pulumi.authentik.PolicyBinding;\nimport com.pulumi.authentik.PolicyBindingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create an application with a provider attached and policies applied\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var name = new ProviderOauth2(\"name\", ProviderOauth2Args.builder()\n            .name(\"example-app\")\n            .clientId(\"example-app\")\n            .clientSecret(\"test\")\n            .authorizationFlow(default_authorization_flow.id())\n            .build());\n\n        var policy = new PolicyExpression(\"policy\", PolicyExpressionArgs.builder()\n            .name(\"example\")\n            .expression(\"return True\")\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()\n            .name(\"example-app\")\n            .slug(\"example-app\")\n            .protocolProvider(name.id())\n            .build());\n\n        var app_access = new PolicyBinding(\"app-access\", PolicyBindingArgs.builder()\n            .target(nameApplication.uuid())\n            .policy(policy.id())\n            .order(0)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:ProviderOauth2\n    properties:\n      name: example-app\n      clientId: example-app\n      clientSecret: test\n      authorizationFlow: ${[\"default-authorization-flow\"].id}\n  policy:\n    type: authentik:PolicyExpression\n    properties:\n      name: example\n      expression: return True\n  app-access:\n    type: authentik:PolicyBinding\n    properties:\n      target: ${nameApplication.uuid}\n      policy: ${policy.id}\n      order: 0\n  nameApplication:\n    type: authentik:Application\n    name: name\n    properties:\n      name: example-app\n      slug: example-app\n      protocolProvider: ${name.id}\nvariables:\n  # Create an application with a provider attached and policies applied\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "backchannelProviders": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "group": {
                    "type": "string"
                },
                "metaDescription": {
                    "type": "string"
                },
                "metaIcon": {
                    "type": "string"
                },
                "metaLaunchUrl": {
                    "type": "string"
                },
                "metaPublisher": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "openInNewTab": {
                    "type": "boolean"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "protocolProvider": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "slug",
                "uuid"
            ],
            "inputProperties": {
                "backchannelProviders": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "group": {
                    "type": "string"
                },
                "metaDescription": {
                    "type": "string"
                },
                "metaIcon": {
                    "type": "string"
                },
                "metaLaunchUrl": {
                    "type": "string"
                },
                "metaPublisher": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "openInNewTab": {
                    "type": "boolean"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "protocolProvider": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "slug"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Application resources.\n",
                "properties": {
                    "backchannelProviders": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "group": {
                        "type": "string"
                    },
                    "metaDescription": {
                        "type": "string"
                    },
                    "metaIcon": {
                        "type": "string"
                    },
                    "metaLaunchUrl": {
                        "type": "string"
                    },
                    "metaPublisher": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "openInNewTab": {
                        "type": "boolean"
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Allowed values: - `all` - `any`\n"
                    },
                    "protocolProvider": {
                        "type": "integer"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/blueprint:Blueprint": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\nconst instance = new authentik.Blueprint(\"instance\", {\n    name: \"blueprint-instance\",\n    path: \"default/flow-default-authentication-flow.yaml\",\n    context: JSON.stringify({\n        foo: \"bar\",\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport osmit_gmbh_pulumi_authentik as authentik\n\ninstance = authentik.Blueprint(\"instance\",\n    name=\"blueprint-instance\",\n    path=\"default/flow-default-authentication-flow.yaml\",\n    context=json.dumps({\n        \"foo\": \"bar\",\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance = new Authentik.Blueprint(\"instance\", new()\n    {\n        Name = \"blueprint-instance\",\n        Path = \"default/flow-default-authentication-flow.yaml\",\n        Context = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"foo\"] = \"bar\",\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"foo\": \"bar\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = authentik.NewBlueprint(ctx, \"instance\", \u0026authentik.BlueprintArgs{\n\t\t\tName:    pulumi.String(\"blueprint-instance\"),\n\t\t\tPath:    pulumi.String(\"default/flow-default-authentication-flow.yaml\"),\n\t\t\tContext: pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.Blueprint;\nimport com.pulumi.authentik.BlueprintArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var instance = new Blueprint(\"instance\", BlueprintArgs.builder()\n            .name(\"blueprint-instance\")\n            .path(\"default/flow-default-authentication-flow.yaml\")\n            .context(serializeJson(\n                jsonObject(\n                    jsonProperty(\"foo\", \"bar\")\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  instance:\n    type: authentik:Blueprint\n    properties:\n      name: blueprint-instance\n      path: default/flow-default-authentication-flow.yaml\n      context:\n        fn::toJSON:\n          foo: bar\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "content": {
                    "type": "string"
                },
                "context": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "content": {
                    "type": "string"
                },
                "context": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Blueprint resources.\n",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "context": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/brand:Brand": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create/manage a default brand\nconst _default = new authentik.Brand(\"default\", {\n    domain: \".\",\n    \"default\": true,\n    brandingTitle: \"test\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create/manage a default brand\ndefault = authentik.Brand(\"default\",\n    domain=\".\",\n    default=True,\n    branding_title=\"test\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create/manage a default brand\n    var @default = new Authentik.Brand(\"default\", new()\n    {\n        Domain = \".\",\n        Default = true,\n        BrandingTitle = \"test\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create/manage a default brand\n\t\t_, err := authentik.NewBrand(ctx, \"default\", \u0026authentik.BrandArgs{\n\t\t\tDomain:        pulumi.String(\".\"),\n\t\t\tDefault:       pulumi.Bool(true),\n\t\t\tBrandingTitle: pulumi.String(\"test\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.Brand;\nimport com.pulumi.authentik.BrandArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create/manage a default brand\n        var default_ = new Brand(\"default\", BrandArgs.builder()\n            .domain(\".\")\n            .default_(true)\n            .brandingTitle(\"test\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create/manage a default brand\n  default:\n    type: authentik:Brand\n    properties:\n      domain: .\n      default: true\n      brandingTitle: test\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "attributes": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "brandingFavicon": {
                    "type": "string"
                },
                "brandingLogo": {
                    "type": "string"
                },
                "brandingTitle": {
                    "type": "string",
                    "description": "Defaults to `authentik`.\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "defaultApplication": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "flowAuthentication": {
                    "type": "string"
                },
                "flowDeviceCode": {
                    "type": "string"
                },
                "flowInvalidation": {
                    "type": "string"
                },
                "flowRecovery": {
                    "type": "string"
                },
                "flowUnenrollment": {
                    "type": "string"
                },
                "flowUserSettings": {
                    "type": "string"
                },
                "webCertificate": {
                    "type": "string"
                }
            },
            "required": [
                "domain"
            ],
            "inputProperties": {
                "attributes": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "brandingFavicon": {
                    "type": "string"
                },
                "brandingLogo": {
                    "type": "string"
                },
                "brandingTitle": {
                    "type": "string",
                    "description": "Defaults to `authentik`.\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "defaultApplication": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "flowAuthentication": {
                    "type": "string"
                },
                "flowDeviceCode": {
                    "type": "string"
                },
                "flowInvalidation": {
                    "type": "string"
                },
                "flowRecovery": {
                    "type": "string"
                },
                "flowUnenrollment": {
                    "type": "string"
                },
                "flowUserSettings": {
                    "type": "string"
                },
                "webCertificate": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Brand resources.\n",
                "properties": {
                    "attributes": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                    },
                    "brandingFavicon": {
                        "type": "string"
                    },
                    "brandingLogo": {
                        "type": "string"
                    },
                    "brandingTitle": {
                        "type": "string",
                        "description": "Defaults to `authentik`.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "defaultApplication": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "flowAuthentication": {
                        "type": "string"
                    },
                    "flowDeviceCode": {
                        "type": "string"
                    },
                    "flowInvalidation": {
                        "type": "string"
                    },
                    "flowRecovery": {
                        "type": "string"
                    },
                    "flowUnenrollment": {
                        "type": "string"
                    },
                    "flowUserSettings": {
                        "type": "string"
                    },
                    "webCertificate": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/certificateKeyPair:CertificateKeyPair": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as tls from \"@pulumi/tls\";\n\n// Generate a certificate-key pair\nconst example = new tls.index.PrivateKey(\"example\", {\n    algorithm: \"ECDSA\",\n    ecdsaCurve: \"P384\",\n});\nconst exampleSelfSignedCert = new tls.index.SelfSignedCert(\"example\", {\n    keyAlgorithm: \"ECDSA\",\n    privateKeyPem: example.privateKeyPem,\n    subject: [{\n        commonName: \"example.com\",\n        organization: \"ACME Examples, Inc\",\n    }],\n    validityPeriodHours: 12,\n    allowedUses: [\n        \"key_encipherment\",\n        \"digital_signature\",\n        \"server_auth\",\n    ],\n});\nconst name = new authentik.CertificateKeyPair(\"name\", {\n    name: \"keypair\",\n    certificateData: exampleSelfSignedCert.certPem,\n    keyData: example.privateKeyPem,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_tls as tls\n\n# Generate a certificate-key pair\nexample = tls.index.PrivateKey(\"example\",\n    algorithm=ECDSA,\n    ecdsa_curve=P384)\nexample_self_signed_cert = tls.index.SelfSignedCert(\"example\",\n    key_algorithm=ECDSA,\n    private_key_pem=example.private_key_pem,\n    subject=[{\n        commonName: example.com,\n        organization: ACME Examples, Inc,\n    }],\n    validity_period_hours=12,\n    allowed_uses=[\n        key_encipherment,\n        digital_signature,\n        server_auth,\n    ])\nname = authentik.CertificateKeyPair(\"name\",\n    name=\"keypair\",\n    certificate_data=example_self_signed_cert[\"certPem\"],\n    key_data=example[\"privateKeyPem\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Tls = Pulumi.Tls;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Generate a certificate-key pair\n    var example = new Tls.Index.PrivateKey(\"example\", new()\n    {\n        Algorithm = \"ECDSA\",\n        EcdsaCurve = \"P384\",\n    });\n\n    var exampleSelfSignedCert = new Tls.Index.SelfSignedCert(\"example\", new()\n    {\n        KeyAlgorithm = \"ECDSA\",\n        PrivateKeyPem = example.PrivateKeyPem,\n        Subject = new[]\n        {\n            \n            {\n                { \"commonName\", \"example.com\" },\n                { \"organization\", \"ACME Examples, Inc\" },\n            },\n        },\n        ValidityPeriodHours = 12,\n        AllowedUses = new[]\n        {\n            \"key_encipherment\",\n            \"digital_signature\",\n            \"server_auth\",\n        },\n    });\n\n    var name = new Authentik.CertificateKeyPair(\"name\", new()\n    {\n        Name = \"keypair\",\n        CertificateData = exampleSelfSignedCert.CertPem,\n        KeyData = example.PrivateKeyPem,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi-tls/sdk/go/tls\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Generate a certificate-key pair\n\t\texample, err := tls.NewPrivateKey(ctx, \"example\", \u0026tls.PrivateKeyArgs{\n\t\t\tAlgorithm:  \"ECDSA\",\n\t\t\tEcdsaCurve: \"P384\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleSelfSignedCert, err := tls.NewSelfSignedCert(ctx, \"example\", \u0026tls.SelfSignedCertArgs{\n\t\t\tKeyAlgorithm:  \"ECDSA\",\n\t\t\tPrivateKeyPem: example.PrivateKeyPem,\n\t\t\tSubject: []map[string]interface{}{\n\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\"commonName\":   \"example.com\",\n\t\t\t\t\t\"organization\": \"ACME Examples, Inc\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tValidityPeriodHours: 12,\n\t\t\tAllowedUses: []string{\n\t\t\t\t\"key_encipherment\",\n\t\t\t\t\"digital_signature\",\n\t\t\t\t\"server_auth\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewCertificateKeyPair(ctx, \"name\", \u0026authentik.CertificateKeyPairArgs{\n\t\t\tName:            pulumi.String(\"keypair\"),\n\t\t\tCertificateData: exampleSelfSignedCert.CertPem,\n\t\t\tKeyData:         example.PrivateKeyPem,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.tls.privateKey;\nimport com.pulumi.tls.PrivateKeyArgs;\nimport com.pulumi.tls.selfSignedCert;\nimport com.pulumi.tls.SelfSignedCertArgs;\nimport com.pulumi.authentik.CertificateKeyPair;\nimport com.pulumi.authentik.CertificateKeyPairArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Generate a certificate-key pair\n        var example = new PrivateKey(\"example\", PrivateKeyArgs.builder()\n            .algorithm(\"ECDSA\")\n            .ecdsaCurve(\"P384\")\n            .build());\n\n        var exampleSelfSignedCert = new SelfSignedCert(\"exampleSelfSignedCert\", SelfSignedCertArgs.builder()\n            .keyAlgorithm(\"ECDSA\")\n            .privateKeyPem(example.privateKeyPem())\n            .subject(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .validityPeriodHours(12)\n            .allowedUses(            \n                \"key_encipherment\",\n                \"digital_signature\",\n                \"server_auth\")\n            .build());\n\n        var name = new CertificateKeyPair(\"name\", CertificateKeyPairArgs.builder()\n            .name(\"keypair\")\n            .certificateData(exampleSelfSignedCert.certPem())\n            .keyData(example.privateKeyPem())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Generate a certificate-key pair\n  example:\n    type: tls:privateKey\n    properties:\n      algorithm: ECDSA\n      ecdsaCurve: P384\n  exampleSelfSignedCert:\n    type: tls:selfSignedCert\n    name: example\n    properties:\n      keyAlgorithm: ECDSA\n      privateKeyPem: ${example.privateKeyPem}\n      subject:\n        - commonName: example.com\n          organization: ACME Examples, Inc\n      validityPeriodHours: 12\n      allowedUses:\n        - key_encipherment\n        - digital_signature\n        - server_auth\n  name:\n    type: authentik:CertificateKeyPair\n    properties:\n      name: keypair\n      certificateData: ${exampleSelfSignedCert.certPem}\n      keyData: ${example.privateKeyPem}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "certificateData": {
                    "type": "string"
                },
                "keyData": {
                    "type": "string",
                    "secret": true
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "certificateData",
                "name"
            ],
            "inputProperties": {
                "certificateData": {
                    "type": "string"
                },
                "keyData": {
                    "type": "string",
                    "secret": true
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "certificateData"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CertificateKeyPair resources.\n",
                "properties": {
                    "certificateData": {
                        "type": "string"
                    },
                    "keyData": {
                        "type": "string",
                        "secret": true
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/enterpriseLicense:EnterpriseLicense": {
            "properties": {
                "expiry": {
                    "type": "integer",
                    "description": "Generated.\n"
                },
                "externalUsers": {
                    "type": "integer",
                    "description": "Generated.\n"
                },
                "internalUsers": {
                    "type": "integer",
                    "description": "Generated.\n"
                },
                "key": {
                    "type": "string",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "required": [
                "expiry",
                "externalUsers",
                "internalUsers",
                "key",
                "name"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "secret": true
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EnterpriseLicense resources.\n",
                "properties": {
                    "expiry": {
                        "type": "integer",
                        "description": "Generated.\n"
                    },
                    "externalUsers": {
                        "type": "integer",
                        "description": "Generated.\n"
                    },
                    "internalUsers": {
                        "type": "integer",
                        "description": "Generated.\n"
                    },
                    "key": {
                        "type": "string",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/eventRule:EventRule": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "severity": {
                    "type": "string",
                    "description": "Allowed values: - `notice` - `warning` - `alert`\n"
                },
                "transports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "webhookMapping": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "transports"
            ],
            "inputProperties": {
                "group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "severity": {
                    "type": "string",
                    "description": "Allowed values: - `notice` - `warning` - `alert`\n"
                },
                "transports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "webhookMapping": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "transports"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EventRule resources.\n",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string",
                        "description": "Allowed values: - `notice` - `warning` - `alert`\n"
                    },
                    "transports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webhookMapping": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/eventTransport:EventTransport": {
            "description": "## Example Usage\n\n",
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "Allowed values: - `local` - `webhook` - `webhook_slack` - `email`\n"
                },
                "name": {
                    "type": "string"
                },
                "sendOnce": {
                    "type": "boolean"
                },
                "webhookMapping": {
                    "type": "string"
                },
                "webhookUrl": {
                    "type": "string"
                }
            },
            "required": [
                "mode",
                "name"
            ],
            "inputProperties": {
                "mode": {
                    "type": "string",
                    "description": "Allowed values: - `local` - `webhook` - `webhook_slack` - `email`\n"
                },
                "name": {
                    "type": "string"
                },
                "sendOnce": {
                    "type": "boolean"
                },
                "webhookMapping": {
                    "type": "string"
                },
                "webhookUrl": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "mode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EventTransport resources.\n",
                "properties": {
                    "mode": {
                        "type": "string",
                        "description": "Allowed values: - `local` - `webhook` - `webhook_slack` - `email`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sendOnce": {
                        "type": "boolean"
                    },
                    "webhookMapping": {
                        "type": "string"
                    },
                    "webhookUrl": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/flow:Flow": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a flow with a stage attached\nconst name = new authentik.StageDummy(\"name\", {name: \"test-stage\"});\nconst flow = new authentik.Flow(\"flow\", {\n    name: \"test-flow\",\n    title: \"Test flow\",\n    slug: \"test-flow\",\n    designation: \"authorization\",\n});\nconst dummy_flow = new authentik.FlowStageBinding(\"dummy-flow\", {\n    target: flow.uuid,\n    stage: name.id,\n    order: 0,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a flow with a stage attached\nname = authentik.StageDummy(\"name\", name=\"test-stage\")\nflow = authentik.Flow(\"flow\",\n    name=\"test-flow\",\n    title=\"Test flow\",\n    slug=\"test-flow\",\n    designation=\"authorization\")\ndummy_flow = authentik.FlowStageBinding(\"dummy-flow\",\n    target=flow.uuid,\n    stage=name.id,\n    order=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a flow with a stage attached\n    var name = new Authentik.StageDummy(\"name\", new()\n    {\n        Name = \"test-stage\",\n    });\n\n    var flow = new Authentik.Flow(\"flow\", new()\n    {\n        Name = \"test-flow\",\n        Title = \"Test flow\",\n        Slug = \"test-flow\",\n        Designation = \"authorization\",\n    });\n\n    var dummy_flow = new Authentik.FlowStageBinding(\"dummy-flow\", new()\n    {\n        Target = flow.Uuid,\n        Stage = name.Id,\n        Order = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a flow with a stage attached\n\t\tname, err := authentik.NewStageDummy(ctx, \"name\", \u0026authentik.StageDummyArgs{\n\t\t\tName: pulumi.String(\"test-stage\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tflow, err := authentik.NewFlow(ctx, \"flow\", \u0026authentik.FlowArgs{\n\t\t\tName:        pulumi.String(\"test-flow\"),\n\t\t\tTitle:       pulumi.String(\"Test flow\"),\n\t\t\tSlug:        pulumi.String(\"test-flow\"),\n\t\t\tDesignation: pulumi.String(\"authorization\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewFlowStageBinding(ctx, \"dummy-flow\", \u0026authentik.FlowStageBindingArgs{\n\t\t\tTarget: flow.Uuid,\n\t\t\tStage:  name.ID(),\n\t\t\tOrder:  pulumi.Int(0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageDummy;\nimport com.pulumi.authentik.StageDummyArgs;\nimport com.pulumi.authentik.Flow;\nimport com.pulumi.authentik.FlowArgs;\nimport com.pulumi.authentik.FlowStageBinding;\nimport com.pulumi.authentik.FlowStageBindingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a flow with a stage attached\n        var name = new StageDummy(\"name\", StageDummyArgs.builder()\n            .name(\"test-stage\")\n            .build());\n\n        var flow = new Flow(\"flow\", FlowArgs.builder()\n            .name(\"test-flow\")\n            .title(\"Test flow\")\n            .slug(\"test-flow\")\n            .designation(\"authorization\")\n            .build());\n\n        var dummy_flow = new FlowStageBinding(\"dummy-flow\", FlowStageBindingArgs.builder()\n            .target(flow.uuid())\n            .stage(name.id())\n            .order(0)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a flow with a stage attached\n  name:\n    type: authentik:StageDummy\n    properties:\n      name: test-stage\n  flow:\n    type: authentik:Flow\n    properties:\n      name: test-flow\n      title: Test flow\n      slug: test-flow\n      designation: authorization\n  dummy-flow:\n    type: authentik:FlowStageBinding\n    properties:\n      target: ${flow.uuid}\n      stage: ${name.id}\n      order: 0\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "authentication": {
                    "type": "string",
                    "description": "Allowed values: - `none` - `require_authenticated` - `require_unauthenticated` - `require_superuser` - `require_outpost`\n"
                },
                "background": {
                    "type": "string",
                    "description": "Optional URL to an image which will be used as the background during the flow.\n"
                },
                "compatibilityMode": {
                    "type": "boolean"
                },
                "deniedAction": {
                    "type": "string"
                },
                "designation": {
                    "type": "string",
                    "description": "Allowed values: - `authentication` - `authorization` - `invalidation` - `enrollment` - `unenrollment` - `recovery` -\n`stage_configuration`\n"
                },
                "layout": {
                    "type": "string",
                    "description": "Allowed values: - `stacked` - `content_left` - `content_right` - `sidebar_left` - `sidebar_right`\n"
                },
                "name": {
                    "type": "string"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "required": [
                "designation",
                "name",
                "slug",
                "title",
                "uuid"
            ],
            "inputProperties": {
                "authentication": {
                    "type": "string",
                    "description": "Allowed values: - `none` - `require_authenticated` - `require_unauthenticated` - `require_superuser` - `require_outpost`\n"
                },
                "background": {
                    "type": "string",
                    "description": "Optional URL to an image which will be used as the background during the flow.\n"
                },
                "compatibilityMode": {
                    "type": "boolean"
                },
                "deniedAction": {
                    "type": "string"
                },
                "designation": {
                    "type": "string",
                    "description": "Allowed values: - `authentication` - `authorization` - `invalidation` - `enrollment` - `unenrollment` - `recovery` -\n`stage_configuration`\n"
                },
                "layout": {
                    "type": "string",
                    "description": "Allowed values: - `stacked` - `content_left` - `content_right` - `sidebar_left` - `sidebar_right`\n"
                },
                "name": {
                    "type": "string"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "designation",
                "slug",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Flow resources.\n",
                "properties": {
                    "authentication": {
                        "type": "string",
                        "description": "Allowed values: - `none` - `require_authenticated` - `require_unauthenticated` - `require_superuser` - `require_outpost`\n"
                    },
                    "background": {
                        "type": "string",
                        "description": "Optional URL to an image which will be used as the background during the flow.\n"
                    },
                    "compatibilityMode": {
                        "type": "boolean"
                    },
                    "deniedAction": {
                        "type": "string"
                    },
                    "designation": {
                        "type": "string",
                        "description": "Allowed values: - `authentication` - `authorization` - `invalidation` - `enrollment` - `unenrollment` - `recovery` -\n`stage_configuration`\n"
                    },
                    "layout": {
                        "type": "string",
                        "description": "Allowed values: - `stacked` - `content_left` - `content_right` - `sidebar_left` - `sidebar_right`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Allowed values: - `all` - `any`\n"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/flowStageBinding:FlowStageBinding": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a flow with a stage attached\nconst name = new authentik.StageDummy(\"name\", {name: \"test-stage\"});\nconst flow = new authentik.Flow(\"flow\", {\n    name: \"test-flow\",\n    title: \"Test flow\",\n    slug: \"test-flow\",\n    designation: \"authorization\",\n});\nconst dummy_flow = new authentik.FlowStageBinding(\"dummy-flow\", {\n    target: flow.uuid,\n    stage: name.id,\n    order: 0,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a flow with a stage attached\nname = authentik.StageDummy(\"name\", name=\"test-stage\")\nflow = authentik.Flow(\"flow\",\n    name=\"test-flow\",\n    title=\"Test flow\",\n    slug=\"test-flow\",\n    designation=\"authorization\")\ndummy_flow = authentik.FlowStageBinding(\"dummy-flow\",\n    target=flow.uuid,\n    stage=name.id,\n    order=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a flow with a stage attached\n    var name = new Authentik.StageDummy(\"name\", new()\n    {\n        Name = \"test-stage\",\n    });\n\n    var flow = new Authentik.Flow(\"flow\", new()\n    {\n        Name = \"test-flow\",\n        Title = \"Test flow\",\n        Slug = \"test-flow\",\n        Designation = \"authorization\",\n    });\n\n    var dummy_flow = new Authentik.FlowStageBinding(\"dummy-flow\", new()\n    {\n        Target = flow.Uuid,\n        Stage = name.Id,\n        Order = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a flow with a stage attached\n\t\tname, err := authentik.NewStageDummy(ctx, \"name\", \u0026authentik.StageDummyArgs{\n\t\t\tName: pulumi.String(\"test-stage\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tflow, err := authentik.NewFlow(ctx, \"flow\", \u0026authentik.FlowArgs{\n\t\t\tName:        pulumi.String(\"test-flow\"),\n\t\t\tTitle:       pulumi.String(\"Test flow\"),\n\t\t\tSlug:        pulumi.String(\"test-flow\"),\n\t\t\tDesignation: pulumi.String(\"authorization\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewFlowStageBinding(ctx, \"dummy-flow\", \u0026authentik.FlowStageBindingArgs{\n\t\t\tTarget: flow.Uuid,\n\t\t\tStage:  name.ID(),\n\t\t\tOrder:  pulumi.Int(0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageDummy;\nimport com.pulumi.authentik.StageDummyArgs;\nimport com.pulumi.authentik.Flow;\nimport com.pulumi.authentik.FlowArgs;\nimport com.pulumi.authentik.FlowStageBinding;\nimport com.pulumi.authentik.FlowStageBindingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a flow with a stage attached\n        var name = new StageDummy(\"name\", StageDummyArgs.builder()\n            .name(\"test-stage\")\n            .build());\n\n        var flow = new Flow(\"flow\", FlowArgs.builder()\n            .name(\"test-flow\")\n            .title(\"Test flow\")\n            .slug(\"test-flow\")\n            .designation(\"authorization\")\n            .build());\n\n        var dummy_flow = new FlowStageBinding(\"dummy-flow\", FlowStageBindingArgs.builder()\n            .target(flow.uuid())\n            .stage(name.id())\n            .order(0)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a flow with a stage attached\n  name:\n    type: authentik:StageDummy\n    properties:\n      name: test-stage\n  flow:\n    type: authentik:Flow\n    properties:\n      name: test-flow\n      title: Test flow\n      slug: test-flow\n      designation: authorization\n  dummy-flow:\n    type: authentik:FlowStageBinding\n    properties:\n      target: ${flow.uuid}\n      stage: ${name.id}\n      order: 0\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "evaluateOnPlan": {
                    "type": "boolean"
                },
                "invalidResponseAction": {
                    "type": "string",
                    "description": "Allowed values: - `retry` - `restart` - `restart_with_context`\n"
                },
                "order": {
                    "type": "integer"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "reEvaluatePolicies": {
                    "type": "boolean"
                },
                "stage": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "required": [
                "order",
                "stage",
                "target"
            ],
            "inputProperties": {
                "evaluateOnPlan": {
                    "type": "boolean"
                },
                "invalidResponseAction": {
                    "type": "string",
                    "description": "Allowed values: - `retry` - `restart` - `restart_with_context`\n"
                },
                "order": {
                    "type": "integer"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "reEvaluatePolicies": {
                    "type": "boolean"
                },
                "stage": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "order",
                "stage",
                "target"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FlowStageBinding resources.\n",
                "properties": {
                    "evaluateOnPlan": {
                        "type": "boolean"
                    },
                    "invalidResponseAction": {
                        "type": "string",
                        "description": "Allowed values: - `retry` - `restart` - `restart_with_context`\n"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Allowed values: - `all` - `any`\n"
                    },
                    "reEvaluatePolicies": {
                        "type": "boolean"
                    },
                    "stage": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/group:Group": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a super-user group with a user\nconst name = new authentik.User(\"name\", {\n    username: \"user\",\n    name: \"User\",\n});\nconst group = new authentik.Group(\"group\", {\n    name: \"tf_admins\",\n    users: [name.id],\n    isSuperuser: true,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a super-user group with a user\nname = authentik.User(\"name\",\n    username=\"user\",\n    name=\"User\")\ngroup = authentik.Group(\"group\",\n    name=\"tf_admins\",\n    users=[name.id],\n    is_superuser=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a super-user group with a user\n    var name = new Authentik.User(\"name\", new()\n    {\n        Username = \"user\",\n        Name = \"User\",\n    });\n\n    var @group = new Authentik.Group(\"group\", new()\n    {\n        Name = \"tf_admins\",\n        Users = new[]\n        {\n            name.Id,\n        },\n        IsSuperuser = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a super-user group with a user\n\t\tname, err := authentik.NewUser(ctx, \"name\", \u0026authentik.UserArgs{\n\t\t\tUsername: pulumi.String(\"user\"),\n\t\t\tName:     pulumi.String(\"User\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewGroup(ctx, \"group\", \u0026authentik.GroupArgs{\n\t\t\tName: pulumi.String(\"tf_admins\"),\n\t\t\tUsers: pulumi.IntArray{\n\t\t\t\tname.ID(),\n\t\t\t},\n\t\t\tIsSuperuser: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.User;\nimport com.pulumi.authentik.UserArgs;\nimport com.pulumi.authentik.Group;\nimport com.pulumi.authentik.GroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a super-user group with a user\n        var name = new User(\"name\", UserArgs.builder()\n            .username(\"user\")\n            .name(\"User\")\n            .build());\n\n        var group = new Group(\"group\", GroupArgs.builder()\n            .name(\"tf_admins\")\n            .users(name.id())\n            .isSuperuser(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a super-user group with a user\n  name:\n    type: authentik:User\n    properties:\n      username: user\n      name: User\n  group:\n    type: authentik:Group\n    properties:\n      name: tf_admins\n      users:\n        - ${name.id}\n      isSuperuser: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "attributes": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "isSuperuser": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Generated.\n"
                }
            },
            "required": [
                "name",
                "users"
            ],
            "inputProperties": {
                "attributes": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                },
                "isSuperuser": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Generated.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "attributes": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                    },
                    "isSuperuser": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parent": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/outpost:Outpost": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// Create an outpost with a proxy provider\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst proxy = new authentik.ProviderProxy(\"proxy\", {\n    name: \"proxy\",\n    authorizationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    externalHost: \"http://foo.bar.baz\",\n    internalHost: \"http://internal.local\",\n});\nconst outpost = new authentik.Outpost(\"outpost\", {\n    name: \"test-outpost\",\n    protocolProviders: [proxy.id],\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\n# Create an outpost with a proxy provider\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nproxy = authentik.ProviderProxy(\"proxy\",\n    name=\"proxy\",\n    authorization_flow=default_authorization_flow.id,\n    external_host=\"http://foo.bar.baz\",\n    internal_host=\"http://internal.local\")\noutpost = authentik.Outpost(\"outpost\",\n    name=\"test-outpost\",\n    protocol_providers=[proxy.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create an outpost with a proxy provider\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var proxy = new Authentik.ProviderProxy(\"proxy\", new()\n    {\n        Name = \"proxy\",\n        AuthorizationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        ExternalHost = \"http://foo.bar.baz\",\n        InternalHost = \"http://internal.local\",\n    });\n\n    var outpost = new Authentik.Outpost(\"outpost\", new()\n    {\n        Name = \"test-outpost\",\n        ProtocolProviders = new[]\n        {\n            proxy.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create an outpost with a proxy provider\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproxy, err := authentik.NewProviderProxy(ctx, \"proxy\", \u0026authentik.ProviderProxyArgs{\n\t\t\tName:              pulumi.String(\"proxy\"),\n\t\t\tAuthorizationFlow: pulumi.String(default_authorization_flow.Id),\n\t\t\tExternalHost:      pulumi.String(\"http://foo.bar.baz\"),\n\t\t\tInternalHost:      pulumi.String(\"http://internal.local\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewOutpost(ctx, \"outpost\", \u0026authentik.OutpostArgs{\n\t\t\tName: pulumi.String(\"test-outpost\"),\n\t\t\tProtocolProviders: pulumi.IntArray{\n\t\t\t\tproxy.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.ProviderProxy;\nimport com.pulumi.authentik.ProviderProxyArgs;\nimport com.pulumi.authentik.Outpost;\nimport com.pulumi.authentik.OutpostArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create an outpost with a proxy provider\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var proxy = new ProviderProxy(\"proxy\", ProviderProxyArgs.builder()\n            .name(\"proxy\")\n            .authorizationFlow(default_authorization_flow.id())\n            .externalHost(\"http://foo.bar.baz\")\n            .internalHost(\"http://internal.local\")\n            .build());\n\n        var outpost = new Outpost(\"outpost\", OutpostArgs.builder()\n            .name(\"test-outpost\")\n            .protocolProviders(proxy.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  proxy:\n    type: authentik:ProviderProxy\n    properties:\n      name: proxy\n      authorizationFlow: ${[\"default-authorization-flow\"].id}\n      externalHost: http://foo.bar.baz\n      internalHost: http://internal.local\n  outpost:\n    type: authentik:Outpost\n    properties:\n      name: test-outpost\n      protocolProviders:\n        - ${proxy.id}\nvariables:\n  # Create an outpost with a proxy provider\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "config": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects.\n"
                },
                "name": {
                    "type": "string"
                },
                "protocolProviders": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serviceConnection": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Allowed values: - `proxy` - `ldap` - `radius` - `rac`\n"
                }
            },
            "required": [
                "config",
                "name",
                "protocolProviders"
            ],
            "inputProperties": {
                "config": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects.\n"
                },
                "name": {
                    "type": "string"
                },
                "protocolProviders": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serviceConnection": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Allowed values: - `proxy` - `ldap` - `radius` - `rac`\n"
                }
            },
            "requiredInputs": [
                "protocolProviders"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Outpost resources.\n",
                "properties": {
                    "config": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocolProviders": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "serviceConnection": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Allowed values: - `proxy` - `ldap` - `radius` - `rac`\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyBinding:PolicyBinding": {
            "description": "## Example Usage\n\n",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "failureResult": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "group": {
                    "type": "string",
                    "description": "UUID of the group\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "order": {
                    "type": "integer"
                },
                "policy": {
                    "type": "string",
                    "description": "UUID of the policy\n"
                },
                "target": {
                    "type": "string",
                    "description": "ID of the object this binding should apply to\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "user": {
                    "type": "integer",
                    "description": "PK of the user\n"
                }
            },
            "required": [
                "order",
                "target"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "failureResult": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "group": {
                    "type": "string",
                    "description": "UUID of the group\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "order": {
                    "type": "integer"
                },
                "policy": {
                    "type": "string",
                    "description": "UUID of the policy\n"
                },
                "target": {
                    "type": "string",
                    "description": "ID of the object this binding should apply to\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "user": {
                    "type": "integer",
                    "description": "PK of the user\n"
                }
            },
            "requiredInputs": [
                "order",
                "target"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyBinding resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "failureResult": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "UUID of the group\n"
                    },
                    "negate": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "policy": {
                        "type": "string",
                        "description": "UUID of the policy\n"
                    },
                    "target": {
                        "type": "string",
                        "description": "ID of the object this binding should apply to\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Defaults to `30`.\n"
                    },
                    "user": {
                        "type": "integer",
                        "description": "PK of the user\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyDummy:PolicyDummy": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a dummy policy for testing\nconst name = new authentik.PolicyDummy(\"name\", {name: \"dummy\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a dummy policy for testing\nname = authentik.PolicyDummy(\"name\", name=\"dummy\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a dummy policy for testing\n    var name = new Authentik.PolicyDummy(\"name\", new()\n    {\n        Name = \"dummy\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a dummy policy for testing\n\t\t_, err := authentik.NewPolicyDummy(ctx, \"name\", \u0026authentik.PolicyDummyArgs{\n\t\t\tName: pulumi.String(\"dummy\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyDummy;\nimport com.pulumi.authentik.PolicyDummyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a dummy policy for testing\n        var name = new PolicyDummy(\"name\", PolicyDummyArgs.builder()\n            .name(\"dummy\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a dummy policy for testing\n  name:\n    type: authentik:PolicyDummy\n    properties:\n      name: dummy\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "waitMax": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "waitMin": {
                    "type": "integer",
                    "description": "Defaults to `5`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "waitMax": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "waitMin": {
                    "type": "integer",
                    "description": "Defaults to `5`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyDummy resources.\n",
                "properties": {
                    "executionLogging": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "waitMax": {
                        "type": "integer",
                        "description": "Defaults to `30`.\n"
                    },
                    "waitMin": {
                        "type": "integer",
                        "description": "Defaults to `5`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyEventMatcher:PolicyEventMatcher": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create policy to match events\nconst name = new authentik.PolicyEventMatcher(\"name\", {\n    name: \"login-from-1.2.3.4\",\n    action: \"login\",\n    app: \"authentik.events\",\n    clientIp: \"1.2.3.4\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create policy to match events\nname = authentik.PolicyEventMatcher(\"name\",\n    name=\"login-from-1.2.3.4\",\n    action=\"login\",\n    app=\"authentik.events\",\n    client_ip=\"1.2.3.4\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create policy to match events\n    var name = new Authentik.PolicyEventMatcher(\"name\", new()\n    {\n        Name = \"login-from-1.2.3.4\",\n        Action = \"login\",\n        App = \"authentik.events\",\n        ClientIp = \"1.2.3.4\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create policy to match events\n\t\t_, err := authentik.NewPolicyEventMatcher(ctx, \"name\", \u0026authentik.PolicyEventMatcherArgs{\n\t\t\tName:     pulumi.String(\"login-from-1.2.3.4\"),\n\t\t\tAction:   pulumi.String(\"login\"),\n\t\t\tApp:      pulumi.String(\"authentik.events\"),\n\t\t\tClientIp: pulumi.String(\"1.2.3.4\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyEventMatcher;\nimport com.pulumi.authentik.PolicyEventMatcherArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create policy to match events\n        var name = new PolicyEventMatcher(\"name\", PolicyEventMatcherArgs.builder()\n            .name(\"login-from-1.2.3.4\")\n            .action(\"login\")\n            .app(\"authentik.events\")\n            .clientIp(\"1.2.3.4\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create policy to match events\n  name:\n    type: authentik:PolicyEventMatcher\n    properties:\n      name: login-from-1.2.3.4\n      action: login\n      app: authentik.events\n      clientIp: 1.2.3.4\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "action": {
                    "type": "string"
                },
                "app": {
                    "type": "string",
                    "description": "Allowed values: - `authentik.tenants` - `authentik.admin` - `authentik.api` - `authentik.crypto` - `authentik.flows` -\n`authentik.outposts` - `authentik.policies.dummy` - `authentik.policies.event_matcher` - `authentik.policies.expiry` -\n`authentik.policies.expression` - `authentik.policies.geoip` - `authentik.policies.password` -\n`authentik.policies.reputation` - `authentik.policies` - `authentik.providers.ldap` - `authentik.providers.oauth2` -\n`authentik.providers.proxy` - `authentik.providers.radius` - `authentik.providers.saml` - `authentik.providers.scim` -\n`authentik.rbac` - `authentik.recovery` - `authentik.sources.kerberos` - `authentik.sources.ldap` -\n`authentik.sources.oauth` - `authentik.sources.plex` - `authentik.sources.saml` - `authentik.sources.scim` -\n`authentik.stages.authenticator` - `authentik.stages.authenticator_duo` - `authentik.stages.authenticator_sms` -\n`authentik.stages.authenticator_static` - `authentik.stages.authenticator_totp` -\n`authentik.stages.authenticator_validate` - `authentik.stages.authenticator_webauthn` - `authentik.stages.captcha` -\n`authentik.stages.consent` - `authentik.stages.deny` - `authentik.stages.dummy` - `authentik.stages.email` -\n`authentik.stages.identification` - `authentik.stages.invitation` - `authentik.stages.password` -\n`authentik.stages.prompt` - `authentik.stages.user_delete` - `authentik.stages.user_login` -\n`authentik.stages.user_logout` - `authentik.stages.user_write` - `authentik.brands` - `authentik.blueprints` -\n`authentik.core` - `authentik.enterprise` - `authentik.enterprise.audit` -\n`authentik.enterprise.providers.google_workspace` - `authentik.enterprise.providers.microsoft_entra` -\n`authentik.enterprise.providers.rac` - `authentik.enterprise.stages.authenticator_endpoint_gdtc` -\n`authentik.enterprise.stages.source` - `authentik.events`\n"
                },
                "clientIp": {
                    "type": "string"
                },
                "executionLogging": {
                    "type": "boolean"
                },
                "model": {
                    "type": "string",
                    "description": "Allowed values: - `authentik_tenants.domain` - `authentik_crypto.certificatekeypair` - `authentik_flows.flow` -\n`authentik_flows.flowstagebinding` - `authentik_outposts.dockerserviceconnection` -\n`authentik_outposts.kubernetesserviceconnection` - `authentik_outposts.outpost` - `authentik_policies_dummy.dummypolicy`\n- `authentik_policies_event_matcher.eventmatcherpolicy` - `authentik_policies_expiry.passwordexpirypolicy` -\n`authentik_policies_expression.expressionpolicy` - `authentik_policies_geoip.geoippolicy` -\n`authentik_policies_password.passwordpolicy` - `authentik_policies_reputation.reputationpolicy` -\n`authentik_policies.policybinding` - `authentik_providers_ldap.ldapprovider` - `authentik_providers_oauth2.scopemapping`\n- `authentik_providers_oauth2.oauth2provider` - `authentik_providers_proxy.proxyprovider` -\n`authentik_providers_radius.radiusprovider` - `authentik_providers_radius.radiusproviderpropertymapping` -\n`authentik_providers_saml.samlprovider` - `authentik_providers_saml.samlpropertymapping` -\n`authentik_providers_scim.scimprovider` - `authentik_providers_scim.scimmapping` - `authentik_rbac.role` -\n`authentik_sources_kerberos.kerberossource` - `authentik_sources_kerberos.kerberossourcepropertymapping` -\n`authentik_sources_kerberos.userkerberossourceconnection` - `authentik_sources_kerberos.groupkerberossourceconnection` -\n`authentik_sources_ldap.ldapsource` - `authentik_sources_ldap.ldapsourcepropertymapping` -\n`authentik_sources_oauth.oauthsource` - `authentik_sources_oauth.oauthsourcepropertymapping` -\n`authentik_sources_oauth.useroauthsourceconnection` - `authentik_sources_oauth.groupoauthsourceconnection` -\n`authentik_sources_plex.plexsource` - `authentik_sources_plex.plexsourcepropertymapping` -\n`authentik_sources_plex.userplexsourceconnection` - `authentik_sources_plex.groupplexsourceconnection` -\n`authentik_sources_saml.samlsource` - `authentik_sources_saml.samlsourcepropertymapping` -\n`authentik_sources_saml.usersamlsourceconnection` - `authentik_sources_saml.groupsamlsourceconnection` -\n`authentik_sources_scim.scimsource` - `authentik_sources_scim.scimsourcepropertymapping` -\n`authentik_stages_authenticator_duo.authenticatorduostage` - `authentik_stages_authenticator_duo.duodevice` -\n`authentik_stages_authenticator_sms.authenticatorsmsstage` - `authentik_stages_authenticator_sms.smsdevice` -\n`authentik_stages_authenticator_static.authenticatorstaticstage` - `authentik_stages_authenticator_static.staticdevice`\n- `authentik_stages_authenticator_totp.authenticatortotpstage` - `authentik_stages_authenticator_totp.totpdevice` -\n`authentik_stages_authenticator_validate.authenticatorvalidatestage` -\n`authentik_stages_authenticator_webauthn.authenticatorwebauthnstage` -\n`authentik_stages_authenticator_webauthn.webauthndevice` - `authentik_stages_captcha.captchastage` -\n`authentik_stages_consent.consentstage` - `authentik_stages_consent.userconsent` - `authentik_stages_deny.denystage` -\n`authentik_stages_dummy.dummystage` - `authentik_stages_email.emailstage` -\n`authentik_stages_identification.identificationstage` - `authentik_stages_invitation.invitationstage` -\n`authentik_stages_invitation.invitation` - `authentik_stages_password.passwordstage` - `authentik_stages_prompt.prompt`\n- `authentik_stages_prompt.promptstage` - `authentik_stages_user_delete.userdeletestage` -\n`authentik_stages_user_login.userloginstage` - `authentik_stages_user_logout.userlogoutstage` -\n`authentik_stages_user_write.userwritestage` - `authentik_brands.brand` - `authentik_blueprints.blueprintinstance` -\n`authentik_core.group` - `authentik_core.user` - `authentik_core.application` - `authentik_core.token` -\n`authentik_enterprise.license` - `authentik_providers_google_workspace.googleworkspaceprovider` -\n`authentik_providers_google_workspace.googleworkspaceprovidermapping` -\n`authentik_providers_microsoft_entra.microsoftentraprovider` -\n`authentik_providers_microsoft_entra.microsoftentraprovidermapping` - `authentik_providers_rac.racprovider` -\n`authentik_providers_rac.endpoint` - `authentik_providers_rac.racpropertymapping` -\n`authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage` - `authentik_stages_source.sourcestage` -\n`authentik_events.event` - `authentik_events.notificationtransport` - `authentik_events.notification` -\n`authentik_events.notificationrule` - `authentik_events.notificationwebhookmapping`\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "action": {
                    "type": "string"
                },
                "app": {
                    "type": "string",
                    "description": "Allowed values: - `authentik.tenants` - `authentik.admin` - `authentik.api` - `authentik.crypto` - `authentik.flows` -\n`authentik.outposts` - `authentik.policies.dummy` - `authentik.policies.event_matcher` - `authentik.policies.expiry` -\n`authentik.policies.expression` - `authentik.policies.geoip` - `authentik.policies.password` -\n`authentik.policies.reputation` - `authentik.policies` - `authentik.providers.ldap` - `authentik.providers.oauth2` -\n`authentik.providers.proxy` - `authentik.providers.radius` - `authentik.providers.saml` - `authentik.providers.scim` -\n`authentik.rbac` - `authentik.recovery` - `authentik.sources.kerberos` - `authentik.sources.ldap` -\n`authentik.sources.oauth` - `authentik.sources.plex` - `authentik.sources.saml` - `authentik.sources.scim` -\n`authentik.stages.authenticator` - `authentik.stages.authenticator_duo` - `authentik.stages.authenticator_sms` -\n`authentik.stages.authenticator_static` - `authentik.stages.authenticator_totp` -\n`authentik.stages.authenticator_validate` - `authentik.stages.authenticator_webauthn` - `authentik.stages.captcha` -\n`authentik.stages.consent` - `authentik.stages.deny` - `authentik.stages.dummy` - `authentik.stages.email` -\n`authentik.stages.identification` - `authentik.stages.invitation` - `authentik.stages.password` -\n`authentik.stages.prompt` - `authentik.stages.user_delete` - `authentik.stages.user_login` -\n`authentik.stages.user_logout` - `authentik.stages.user_write` - `authentik.brands` - `authentik.blueprints` -\n`authentik.core` - `authentik.enterprise` - `authentik.enterprise.audit` -\n`authentik.enterprise.providers.google_workspace` - `authentik.enterprise.providers.microsoft_entra` -\n`authentik.enterprise.providers.rac` - `authentik.enterprise.stages.authenticator_endpoint_gdtc` -\n`authentik.enterprise.stages.source` - `authentik.events`\n"
                },
                "clientIp": {
                    "type": "string"
                },
                "executionLogging": {
                    "type": "boolean"
                },
                "model": {
                    "type": "string",
                    "description": "Allowed values: - `authentik_tenants.domain` - `authentik_crypto.certificatekeypair` - `authentik_flows.flow` -\n`authentik_flows.flowstagebinding` - `authentik_outposts.dockerserviceconnection` -\n`authentik_outposts.kubernetesserviceconnection` - `authentik_outposts.outpost` - `authentik_policies_dummy.dummypolicy`\n- `authentik_policies_event_matcher.eventmatcherpolicy` - `authentik_policies_expiry.passwordexpirypolicy` -\n`authentik_policies_expression.expressionpolicy` - `authentik_policies_geoip.geoippolicy` -\n`authentik_policies_password.passwordpolicy` - `authentik_policies_reputation.reputationpolicy` -\n`authentik_policies.policybinding` - `authentik_providers_ldap.ldapprovider` - `authentik_providers_oauth2.scopemapping`\n- `authentik_providers_oauth2.oauth2provider` - `authentik_providers_proxy.proxyprovider` -\n`authentik_providers_radius.radiusprovider` - `authentik_providers_radius.radiusproviderpropertymapping` -\n`authentik_providers_saml.samlprovider` - `authentik_providers_saml.samlpropertymapping` -\n`authentik_providers_scim.scimprovider` - `authentik_providers_scim.scimmapping` - `authentik_rbac.role` -\n`authentik_sources_kerberos.kerberossource` - `authentik_sources_kerberos.kerberossourcepropertymapping` -\n`authentik_sources_kerberos.userkerberossourceconnection` - `authentik_sources_kerberos.groupkerberossourceconnection` -\n`authentik_sources_ldap.ldapsource` - `authentik_sources_ldap.ldapsourcepropertymapping` -\n`authentik_sources_oauth.oauthsource` - `authentik_sources_oauth.oauthsourcepropertymapping` -\n`authentik_sources_oauth.useroauthsourceconnection` - `authentik_sources_oauth.groupoauthsourceconnection` -\n`authentik_sources_plex.plexsource` - `authentik_sources_plex.plexsourcepropertymapping` -\n`authentik_sources_plex.userplexsourceconnection` - `authentik_sources_plex.groupplexsourceconnection` -\n`authentik_sources_saml.samlsource` - `authentik_sources_saml.samlsourcepropertymapping` -\n`authentik_sources_saml.usersamlsourceconnection` - `authentik_sources_saml.groupsamlsourceconnection` -\n`authentik_sources_scim.scimsource` - `authentik_sources_scim.scimsourcepropertymapping` -\n`authentik_stages_authenticator_duo.authenticatorduostage` - `authentik_stages_authenticator_duo.duodevice` -\n`authentik_stages_authenticator_sms.authenticatorsmsstage` - `authentik_stages_authenticator_sms.smsdevice` -\n`authentik_stages_authenticator_static.authenticatorstaticstage` - `authentik_stages_authenticator_static.staticdevice`\n- `authentik_stages_authenticator_totp.authenticatortotpstage` - `authentik_stages_authenticator_totp.totpdevice` -\n`authentik_stages_authenticator_validate.authenticatorvalidatestage` -\n`authentik_stages_authenticator_webauthn.authenticatorwebauthnstage` -\n`authentik_stages_authenticator_webauthn.webauthndevice` - `authentik_stages_captcha.captchastage` -\n`authentik_stages_consent.consentstage` - `authentik_stages_consent.userconsent` - `authentik_stages_deny.denystage` -\n`authentik_stages_dummy.dummystage` - `authentik_stages_email.emailstage` -\n`authentik_stages_identification.identificationstage` - `authentik_stages_invitation.invitationstage` -\n`authentik_stages_invitation.invitation` - `authentik_stages_password.passwordstage` - `authentik_stages_prompt.prompt`\n- `authentik_stages_prompt.promptstage` - `authentik_stages_user_delete.userdeletestage` -\n`authentik_stages_user_login.userloginstage` - `authentik_stages_user_logout.userlogoutstage` -\n`authentik_stages_user_write.userwritestage` - `authentik_brands.brand` - `authentik_blueprints.blueprintinstance` -\n`authentik_core.group` - `authentik_core.user` - `authentik_core.application` - `authentik_core.token` -\n`authentik_enterprise.license` - `authentik_providers_google_workspace.googleworkspaceprovider` -\n`authentik_providers_google_workspace.googleworkspaceprovidermapping` -\n`authentik_providers_microsoft_entra.microsoftentraprovider` -\n`authentik_providers_microsoft_entra.microsoftentraprovidermapping` - `authentik_providers_rac.racprovider` -\n`authentik_providers_rac.endpoint` - `authentik_providers_rac.racpropertymapping` -\n`authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage` - `authentik_stages_source.sourcestage` -\n`authentik_events.event` - `authentik_events.notificationtransport` - `authentik_events.notification` -\n`authentik_events.notificationrule` - `authentik_events.notificationwebhookmapping`\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyEventMatcher resources.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "app": {
                        "type": "string",
                        "description": "Allowed values: - `authentik.tenants` - `authentik.admin` - `authentik.api` - `authentik.crypto` - `authentik.flows` -\n`authentik.outposts` - `authentik.policies.dummy` - `authentik.policies.event_matcher` - `authentik.policies.expiry` -\n`authentik.policies.expression` - `authentik.policies.geoip` - `authentik.policies.password` -\n`authentik.policies.reputation` - `authentik.policies` - `authentik.providers.ldap` - `authentik.providers.oauth2` -\n`authentik.providers.proxy` - `authentik.providers.radius` - `authentik.providers.saml` - `authentik.providers.scim` -\n`authentik.rbac` - `authentik.recovery` - `authentik.sources.kerberos` - `authentik.sources.ldap` -\n`authentik.sources.oauth` - `authentik.sources.plex` - `authentik.sources.saml` - `authentik.sources.scim` -\n`authentik.stages.authenticator` - `authentik.stages.authenticator_duo` - `authentik.stages.authenticator_sms` -\n`authentik.stages.authenticator_static` - `authentik.stages.authenticator_totp` -\n`authentik.stages.authenticator_validate` - `authentik.stages.authenticator_webauthn` - `authentik.stages.captcha` -\n`authentik.stages.consent` - `authentik.stages.deny` - `authentik.stages.dummy` - `authentik.stages.email` -\n`authentik.stages.identification` - `authentik.stages.invitation` - `authentik.stages.password` -\n`authentik.stages.prompt` - `authentik.stages.user_delete` - `authentik.stages.user_login` -\n`authentik.stages.user_logout` - `authentik.stages.user_write` - `authentik.brands` - `authentik.blueprints` -\n`authentik.core` - `authentik.enterprise` - `authentik.enterprise.audit` -\n`authentik.enterprise.providers.google_workspace` - `authentik.enterprise.providers.microsoft_entra` -\n`authentik.enterprise.providers.rac` - `authentik.enterprise.stages.authenticator_endpoint_gdtc` -\n`authentik.enterprise.stages.source` - `authentik.events`\n"
                    },
                    "clientIp": {
                        "type": "string"
                    },
                    "executionLogging": {
                        "type": "boolean"
                    },
                    "model": {
                        "type": "string",
                        "description": "Allowed values: - `authentik_tenants.domain` - `authentik_crypto.certificatekeypair` - `authentik_flows.flow` -\n`authentik_flows.flowstagebinding` - `authentik_outposts.dockerserviceconnection` -\n`authentik_outposts.kubernetesserviceconnection` - `authentik_outposts.outpost` - `authentik_policies_dummy.dummypolicy`\n- `authentik_policies_event_matcher.eventmatcherpolicy` - `authentik_policies_expiry.passwordexpirypolicy` -\n`authentik_policies_expression.expressionpolicy` - `authentik_policies_geoip.geoippolicy` -\n`authentik_policies_password.passwordpolicy` - `authentik_policies_reputation.reputationpolicy` -\n`authentik_policies.policybinding` - `authentik_providers_ldap.ldapprovider` - `authentik_providers_oauth2.scopemapping`\n- `authentik_providers_oauth2.oauth2provider` - `authentik_providers_proxy.proxyprovider` -\n`authentik_providers_radius.radiusprovider` - `authentik_providers_radius.radiusproviderpropertymapping` -\n`authentik_providers_saml.samlprovider` - `authentik_providers_saml.samlpropertymapping` -\n`authentik_providers_scim.scimprovider` - `authentik_providers_scim.scimmapping` - `authentik_rbac.role` -\n`authentik_sources_kerberos.kerberossource` - `authentik_sources_kerberos.kerberossourcepropertymapping` -\n`authentik_sources_kerberos.userkerberossourceconnection` - `authentik_sources_kerberos.groupkerberossourceconnection` -\n`authentik_sources_ldap.ldapsource` - `authentik_sources_ldap.ldapsourcepropertymapping` -\n`authentik_sources_oauth.oauthsource` - `authentik_sources_oauth.oauthsourcepropertymapping` -\n`authentik_sources_oauth.useroauthsourceconnection` - `authentik_sources_oauth.groupoauthsourceconnection` -\n`authentik_sources_plex.plexsource` - `authentik_sources_plex.plexsourcepropertymapping` -\n`authentik_sources_plex.userplexsourceconnection` - `authentik_sources_plex.groupplexsourceconnection` -\n`authentik_sources_saml.samlsource` - `authentik_sources_saml.samlsourcepropertymapping` -\n`authentik_sources_saml.usersamlsourceconnection` - `authentik_sources_saml.groupsamlsourceconnection` -\n`authentik_sources_scim.scimsource` - `authentik_sources_scim.scimsourcepropertymapping` -\n`authentik_stages_authenticator_duo.authenticatorduostage` - `authentik_stages_authenticator_duo.duodevice` -\n`authentik_stages_authenticator_sms.authenticatorsmsstage` - `authentik_stages_authenticator_sms.smsdevice` -\n`authentik_stages_authenticator_static.authenticatorstaticstage` - `authentik_stages_authenticator_static.staticdevice`\n- `authentik_stages_authenticator_totp.authenticatortotpstage` - `authentik_stages_authenticator_totp.totpdevice` -\n`authentik_stages_authenticator_validate.authenticatorvalidatestage` -\n`authentik_stages_authenticator_webauthn.authenticatorwebauthnstage` -\n`authentik_stages_authenticator_webauthn.webauthndevice` - `authentik_stages_captcha.captchastage` -\n`authentik_stages_consent.consentstage` - `authentik_stages_consent.userconsent` - `authentik_stages_deny.denystage` -\n`authentik_stages_dummy.dummystage` - `authentik_stages_email.emailstage` -\n`authentik_stages_identification.identificationstage` - `authentik_stages_invitation.invitationstage` -\n`authentik_stages_invitation.invitation` - `authentik_stages_password.passwordstage` - `authentik_stages_prompt.prompt`\n- `authentik_stages_prompt.promptstage` - `authentik_stages_user_delete.userdeletestage` -\n`authentik_stages_user_login.userloginstage` - `authentik_stages_user_logout.userlogoutstage` -\n`authentik_stages_user_write.userwritestage` - `authentik_brands.brand` - `authentik_blueprints.blueprintinstance` -\n`authentik_core.group` - `authentik_core.user` - `authentik_core.application` - `authentik_core.token` -\n`authentik_enterprise.license` - `authentik_providers_google_workspace.googleworkspaceprovider` -\n`authentik_providers_google_workspace.googleworkspaceprovidermapping` -\n`authentik_providers_microsoft_entra.microsoftentraprovider` -\n`authentik_providers_microsoft_entra.microsoftentraprovidermapping` - `authentik_providers_rac.racprovider` -\n`authentik_providers_rac.endpoint` - `authentik_providers_rac.racpropertymapping` -\n`authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage` - `authentik_stages_source.sourcestage` -\n`authentik_events.event` - `authentik_events.notificationtransport` - `authentik_events.notification` -\n`authentik_events.notificationrule` - `authentik_events.notificationwebhookmapping`\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyExpiry:PolicyExpiry": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create expiry policy\nconst name = new authentik.PolicyExpiry(\"name\", {\n    name: \"expiry\",\n    days: 3,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create expiry policy\nname = authentik.PolicyExpiry(\"name\",\n    name=\"expiry\",\n    days=3)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create expiry policy\n    var name = new Authentik.PolicyExpiry(\"name\", new()\n    {\n        Name = \"expiry\",\n        Days = 3,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create expiry policy\n\t\t_, err := authentik.NewPolicyExpiry(ctx, \"name\", \u0026authentik.PolicyExpiryArgs{\n\t\t\tName: pulumi.String(\"expiry\"),\n\t\t\tDays: pulumi.Int(3),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyExpiry;\nimport com.pulumi.authentik.PolicyExpiryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create expiry policy\n        var name = new PolicyExpiry(\"name\", PolicyExpiryArgs.builder()\n            .name(\"expiry\")\n            .days(3)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create expiry policy\n  name:\n    type: authentik:PolicyExpiry\n    properties:\n      name: expiry\n      days: 3\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "days": {
                    "type": "integer"
                },
                "denyOnly": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "days",
                "name"
            ],
            "inputProperties": {
                "days": {
                    "type": "integer"
                },
                "denyOnly": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "days"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyExpiry resources.\n",
                "properties": {
                    "days": {
                        "type": "integer"
                    },
                    "denyOnly": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "executionLogging": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyExpression:PolicyExpression": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create expression policys\nconst name = new authentik.PolicyExpression(\"name\", {\n    name: \"expression\",\n    expression: \"return True\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create expression policys\nname = authentik.PolicyExpression(\"name\",\n    name=\"expression\",\n    expression=\"return True\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create expression policys\n    var name = new Authentik.PolicyExpression(\"name\", new()\n    {\n        Name = \"expression\",\n        Expression = \"return True\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create expression policys\n\t\t_, err := authentik.NewPolicyExpression(ctx, \"name\", \u0026authentik.PolicyExpressionArgs{\n\t\t\tName:       pulumi.String(\"expression\"),\n\t\t\tExpression: pulumi.String(\"return True\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyExpression;\nimport com.pulumi.authentik.PolicyExpressionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create expression policys\n        var name = new PolicyExpression(\"name\", PolicyExpressionArgs.builder()\n            .name(\"expression\")\n            .expression(\"return True\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create expression policys\n  name:\n    type: authentik:PolicyExpression\n    properties:\n      name: expression\n      expression: return True\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyExpression resources.\n",
                "properties": {
                    "executionLogging": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyGeoip:PolicyGeoip": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "asns": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "clientIp": {
                    "type": "string"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed values: - `AF` - `AX` - `AL` - `DZ` - `AS` - `AD` - `AO` - `AI` - `AQ` - `AG` - `AR` - `AM` - `AW` - `AU` - `AT`\n- `AZ` - `BS` - `BH` - `BD` - `BB` - `BY` - `BE` - `BZ` - `BJ` - `BM` - `BT` - `BO` - `BQ` - `BA` - `BW` - `BV` - `BR` -\n`IO` - `BN` - `BG` - `BF` - `BI` - `CV` - `KH` - `CM` - `CA` - `KY` - `CF` - `TD` - `CL` - `CN` - `CX` - `CC` - `CO` -\n`KM` - `CG` - `CD` - `CK` - `CR` - `CI` - `HR` - `CU` - `CW` - `CY` - `CZ` - `DK` - `DJ` - `DM` - `DO` - `EC` - `EG` -\n`SV` - `GQ` - `ER` - `EE` - `SZ` - `ET` - `FK` - `FO` - `FJ` - `FI` - `FR` - `GF` - `PF` - `TF` - `GA` - `GM` - `GE` -\n`DE` - `GH` - `GI` - `GR` - `GL` - `GD` - `GP` - `GU` - `GT` - `GG` - `GN` - `GW` - `GY` - `HT` - `HM` - `VA` - `HN` -\n`HK` - `HU` - `IS` - `IN` - `ID` - `IR` - `IQ` - `IE` - `IM` - `IL` - `IT` - `JM` - `JP` - `JE` - `JO` - `KZ` - `KE` -\n`KI` - `KW` - `KG` - `LA` - `LV` - `LB` - `LS` - `LR` - `LY` - `LI` - `LT` - `LU` - `MO` - `MG` - `MW` - `MY` - `MV` -\n`ML` - `MT` - `MH` - `MQ` - `MR` - `MU` - `YT` - `MX` - `FM` - `MD` - `MC` - `MN` - `ME` - `MS` - `MA` - `MZ` - `MM` -\n`NA` - `NR` - `NP` - `NL` - `NC` - `NZ` - `NI` - `NE` - `NG` - `NU` - `NF` - `KP` - `MK` - `MP` - `NO` - `OM` - `PK` -\n`PW` - `PS` - `PA` - `PG` - `PY` - `PE` - `PH` - `PN` - `PL` - `PT` - `PR` - `QA` - `RE` - `RO` - `RU` - `RW` - `BL` -\n`SH` - `KN` - `LC` - `MF` - `PM` - `VC` - `WS` - `SM` - `ST` - `SA` - `SN` - `RS` - `SC` - `SL` - `SG` - `SX` - `SK` -\n`SI` - `SB` - `SO` - `ZA` - `GS` - `KR` - `SS` - `ES` - `LK` - `SD` - `SR` - `SJ` - `SE` - `CH` - `SY` - `TW` - `TJ` -\n`TZ` - `TH` - `TL` - `TG` - `TK` - `TO` - `TT` - `TN` - `TR` - `TM` - `TC` - `TV` - `UG` - `UA` - `AE` - `GB` - `UM` -\n`US` - `UY` - `UZ` - `VU` - `VE` - `VN` - `VG` - `VI` - `WF` - `EH` - `YE` - `ZM` - `ZW`\n"
                },
                "executionLogging": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "action": {
                    "type": "string"
                },
                "asns": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "clientIp": {
                    "type": "string"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed values: - `AF` - `AX` - `AL` - `DZ` - `AS` - `AD` - `AO` - `AI` - `AQ` - `AG` - `AR` - `AM` - `AW` - `AU` - `AT`\n- `AZ` - `BS` - `BH` - `BD` - `BB` - `BY` - `BE` - `BZ` - `BJ` - `BM` - `BT` - `BO` - `BQ` - `BA` - `BW` - `BV` - `BR` -\n`IO` - `BN` - `BG` - `BF` - `BI` - `CV` - `KH` - `CM` - `CA` - `KY` - `CF` - `TD` - `CL` - `CN` - `CX` - `CC` - `CO` -\n`KM` - `CG` - `CD` - `CK` - `CR` - `CI` - `HR` - `CU` - `CW` - `CY` - `CZ` - `DK` - `DJ` - `DM` - `DO` - `EC` - `EG` -\n`SV` - `GQ` - `ER` - `EE` - `SZ` - `ET` - `FK` - `FO` - `FJ` - `FI` - `FR` - `GF` - `PF` - `TF` - `GA` - `GM` - `GE` -\n`DE` - `GH` - `GI` - `GR` - `GL` - `GD` - `GP` - `GU` - `GT` - `GG` - `GN` - `GW` - `GY` - `HT` - `HM` - `VA` - `HN` -\n`HK` - `HU` - `IS` - `IN` - `ID` - `IR` - `IQ` - `IE` - `IM` - `IL` - `IT` - `JM` - `JP` - `JE` - `JO` - `KZ` - `KE` -\n`KI` - `KW` - `KG` - `LA` - `LV` - `LB` - `LS` - `LR` - `LY` - `LI` - `LT` - `LU` - `MO` - `MG` - `MW` - `MY` - `MV` -\n`ML` - `MT` - `MH` - `MQ` - `MR` - `MU` - `YT` - `MX` - `FM` - `MD` - `MC` - `MN` - `ME` - `MS` - `MA` - `MZ` - `MM` -\n`NA` - `NR` - `NP` - `NL` - `NC` - `NZ` - `NI` - `NE` - `NG` - `NU` - `NF` - `KP` - `MK` - `MP` - `NO` - `OM` - `PK` -\n`PW` - `PS` - `PA` - `PG` - `PY` - `PE` - `PH` - `PN` - `PL` - `PT` - `PR` - `QA` - `RE` - `RO` - `RU` - `RW` - `BL` -\n`SH` - `KN` - `LC` - `MF` - `PM` - `VC` - `WS` - `SM` - `ST` - `SA` - `SN` - `RS` - `SC` - `SL` - `SG` - `SX` - `SK` -\n`SI` - `SB` - `SO` - `ZA` - `GS` - `KR` - `SS` - `ES` - `LK` - `SD` - `SR` - `SJ` - `SE` - `CH` - `SY` - `TW` - `TJ` -\n`TZ` - `TH` - `TL` - `TG` - `TK` - `TO` - `TT` - `TN` - `TR` - `TM` - `TC` - `TV` - `UG` - `UA` - `AE` - `GB` - `UM` -\n`US` - `UY` - `UZ` - `VU` - `VE` - `VN` - `VG` - `VI` - `WF` - `EH` - `YE` - `ZM` - `ZW`\n"
                },
                "executionLogging": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyGeoip resources.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "asns": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "clientIp": {
                        "type": "string"
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Allowed values: - `AF` - `AX` - `AL` - `DZ` - `AS` - `AD` - `AO` - `AI` - `AQ` - `AG` - `AR` - `AM` - `AW` - `AU` - `AT`\n- `AZ` - `BS` - `BH` - `BD` - `BB` - `BY` - `BE` - `BZ` - `BJ` - `BM` - `BT` - `BO` - `BQ` - `BA` - `BW` - `BV` - `BR` -\n`IO` - `BN` - `BG` - `BF` - `BI` - `CV` - `KH` - `CM` - `CA` - `KY` - `CF` - `TD` - `CL` - `CN` - `CX` - `CC` - `CO` -\n`KM` - `CG` - `CD` - `CK` - `CR` - `CI` - `HR` - `CU` - `CW` - `CY` - `CZ` - `DK` - `DJ` - `DM` - `DO` - `EC` - `EG` -\n`SV` - `GQ` - `ER` - `EE` - `SZ` - `ET` - `FK` - `FO` - `FJ` - `FI` - `FR` - `GF` - `PF` - `TF` - `GA` - `GM` - `GE` -\n`DE` - `GH` - `GI` - `GR` - `GL` - `GD` - `GP` - `GU` - `GT` - `GG` - `GN` - `GW` - `GY` - `HT` - `HM` - `VA` - `HN` -\n`HK` - `HU` - `IS` - `IN` - `ID` - `IR` - `IQ` - `IE` - `IM` - `IL` - `IT` - `JM` - `JP` - `JE` - `JO` - `KZ` - `KE` -\n`KI` - `KW` - `KG` - `LA` - `LV` - `LB` - `LS` - `LR` - `LY` - `LI` - `LT` - `LU` - `MO` - `MG` - `MW` - `MY` - `MV` -\n`ML` - `MT` - `MH` - `MQ` - `MR` - `MU` - `YT` - `MX` - `FM` - `MD` - `MC` - `MN` - `ME` - `MS` - `MA` - `MZ` - `MM` -\n`NA` - `NR` - `NP` - `NL` - `NC` - `NZ` - `NI` - `NE` - `NG` - `NU` - `NF` - `KP` - `MK` - `MP` - `NO` - `OM` - `PK` -\n`PW` - `PS` - `PA` - `PG` - `PY` - `PE` - `PH` - `PN` - `PL` - `PT` - `PR` - `QA` - `RE` - `RO` - `RU` - `RW` - `BL` -\n`SH` - `KN` - `LC` - `MF` - `PM` - `VC` - `WS` - `SM` - `ST` - `SA` - `SN` - `RS` - `SC` - `SL` - `SG` - `SX` - `SK` -\n`SI` - `SB` - `SO` - `ZA` - `GS` - `KR` - `SS` - `ES` - `LK` - `SD` - `SR` - `SJ` - `SE` - `CH` - `SY` - `TW` - `TJ` -\n`TZ` - `TH` - `TL` - `TG` - `TK` - `TO` - `TT` - `TN` - `TR` - `TM` - `TC` - `TV` - `UG` - `UA` - `AE` - `GB` - `UM` -\n`US` - `UY` - `UZ` - `VU` - `VE` - `VN` - `VG` - `VI` - `WF` - `EH` - `YE` - `ZM` - `ZW`\n"
                    },
                    "executionLogging": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyPassword:PolicyPassword": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a password policy to require 8 chars\nconst name = new authentik.PolicyPassword(\"name\", {\n    name: \"password\",\n    lengthMin: 8,\n    errorMessage: \"foo\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a password policy to require 8 chars\nname = authentik.PolicyPassword(\"name\",\n    name=\"password\",\n    length_min=8,\n    error_message=\"foo\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a password policy to require 8 chars\n    var name = new Authentik.PolicyPassword(\"name\", new()\n    {\n        Name = \"password\",\n        LengthMin = 8,\n        ErrorMessage = \"foo\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a password policy to require 8 chars\n\t\t_, err := authentik.NewPolicyPassword(ctx, \"name\", \u0026authentik.PolicyPasswordArgs{\n\t\t\tName:         pulumi.String(\"password\"),\n\t\t\tLengthMin:    pulumi.Int(8),\n\t\t\tErrorMessage: pulumi.String(\"foo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyPassword;\nimport com.pulumi.authentik.PolicyPasswordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a password policy to require 8 chars\n        var name = new PolicyPassword(\"name\", PolicyPasswordArgs.builder()\n            .name(\"password\")\n            .lengthMin(8)\n            .errorMessage(\"foo\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a password policy to require 8 chars\n  name:\n    type: authentik:PolicyPassword\n    properties:\n      name: password\n      lengthMin: 8\n      errorMessage: foo\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "amountDigits": {
                    "type": "integer"
                },
                "amountLowercase": {
                    "type": "integer"
                },
                "amountSymbols": {
                    "type": "integer"
                },
                "amountUppercase": {
                    "type": "integer"
                },
                "checkHaveIBeenPwned": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "checkStaticRules": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "checkZxcvbn": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "errorMessage": {
                    "type": "string"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "hibpAllowedCount": {
                    "type": "integer",
                    "description": "Defaults to `1`.\n"
                },
                "lengthMin": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Defaults to `password`.\n"
                },
                "symbolCharset": {
                    "type": "string",
                    "description": "Defaults to `!\\\"#$%\u0026'()*+,-./:;\u003c=\u003e?@[\\]^_`{|}~`.\n"
                },
                "zxcvbnScoreThreshold": {
                    "type": "integer",
                    "description": "Defaults to `2`.\n"
                }
            },
            "required": [
                "errorMessage",
                "name"
            ],
            "inputProperties": {
                "amountDigits": {
                    "type": "integer"
                },
                "amountLowercase": {
                    "type": "integer"
                },
                "amountSymbols": {
                    "type": "integer"
                },
                "amountUppercase": {
                    "type": "integer"
                },
                "checkHaveIBeenPwned": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "checkStaticRules": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "checkZxcvbn": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "errorMessage": {
                    "type": "string"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "hibpAllowedCount": {
                    "type": "integer",
                    "description": "Defaults to `1`.\n"
                },
                "lengthMin": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Defaults to `password`.\n"
                },
                "symbolCharset": {
                    "type": "string",
                    "description": "Defaults to `!\\\"#$%\u0026'()*+,-./:;\u003c=\u003e?@[\\]^_`{|}~`.\n"
                },
                "zxcvbnScoreThreshold": {
                    "type": "integer",
                    "description": "Defaults to `2`.\n"
                }
            },
            "requiredInputs": [
                "errorMessage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyPassword resources.\n",
                "properties": {
                    "amountDigits": {
                        "type": "integer"
                    },
                    "amountLowercase": {
                        "type": "integer"
                    },
                    "amountSymbols": {
                        "type": "integer"
                    },
                    "amountUppercase": {
                        "type": "integer"
                    },
                    "checkHaveIBeenPwned": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "checkStaticRules": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "checkZxcvbn": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "executionLogging": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "hibpAllowedCount": {
                        "type": "integer",
                        "description": "Defaults to `1`.\n"
                    },
                    "lengthMin": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "Defaults to `password`.\n"
                    },
                    "symbolCharset": {
                        "type": "string",
                        "description": "Defaults to `!\\\"#$%\u0026'()*+,-./:;\u003c=\u003e?@[\\]^_`{|}~`.\n"
                    },
                    "zxcvbnScoreThreshold": {
                        "type": "integer",
                        "description": "Defaults to `2`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/policyReputation:PolicyReputation": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a reputation policy\nconst name = new authentik.PolicyReputation(\"name\", {name: \"reputation\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a reputation policy\nname = authentik.PolicyReputation(\"name\", name=\"reputation\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a reputation policy\n    var name = new Authentik.PolicyReputation(\"name\", new()\n    {\n        Name = \"reputation\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a reputation policy\n\t\t_, err := authentik.NewPolicyReputation(ctx, \"name\", \u0026authentik.PolicyReputationArgs{\n\t\t\tName: pulumi.String(\"reputation\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PolicyReputation;\nimport com.pulumi.authentik.PolicyReputationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a reputation policy\n        var name = new PolicyReputation(\"name\", PolicyReputationArgs.builder()\n            .name(\"reputation\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a reputation policy\n  name:\n    type: authentik:PolicyReputation\n    properties:\n      name: reputation\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "checkIp": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "checkUsername": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "threshold": {
                    "type": "integer",
                    "description": "Defaults to `10`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "checkIp": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "checkUsername": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "executionLogging": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "threshold": {
                    "type": "integer",
                    "description": "Defaults to `10`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyReputation resources.\n",
                "properties": {
                    "checkIp": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "checkUsername": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "executionLogging": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "threshold": {
                        "type": "integer",
                        "description": "Defaults to `10`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingGoogleWorkspace:PropertyMappingGoogleWorkspace": {
            "description": "Manage Google Workspace Provider Property mappings\n\n\u003e This resource is deprecated. Migrate to `authentik.PropertyMappingProviderGoogleWorkspace`.\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingGoogleWorkspace resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingLdap:PropertyMappingLdap": {
            "description": "Manage LDAP Source Property mappings\n\n\u003e This resource is deprecated. Migrate to `authentik.PropertyMappingSourceLdap`.\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingLdap resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingMicrosoftEntra:PropertyMappingMicrosoftEntra": {
            "description": "Manage Microsoft Entra Provider Property mappings\n\n\u003e This resource is deprecated. Migrate to `authentik.PropertyMappingProviderMicrosoftEntra`.\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingMicrosoftEntra resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingNotification:PropertyMappingNotification": {
            "description": "Manage Notification Property mappings\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a custom Notification transport mapping\nconst name = new authentik.PropertyMappingNotification(\"name\", {\n    name: \"custom-field\",\n    expression: \"return {\\\"foo\\\": context['foo']}\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a custom Notification transport mapping\nname = authentik.PropertyMappingNotification(\"name\",\n    name=\"custom-field\",\n    expression=\"return {\\\"foo\\\": context['foo']}\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a custom Notification transport mapping\n    var name = new Authentik.PropertyMappingNotification(\"name\", new()\n    {\n        Name = \"custom-field\",\n        Expression = \"return {\\\"foo\\\": context['foo']}\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a custom Notification transport mapping\n\t\t_, err := authentik.NewPropertyMappingNotification(ctx, \"name\", \u0026authentik.PropertyMappingNotificationArgs{\n\t\t\tName:       pulumi.String(\"custom-field\"),\n\t\t\tExpression: pulumi.String(\"return {\\\"foo\\\": context['foo']}\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PropertyMappingNotification;\nimport com.pulumi.authentik.PropertyMappingNotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a custom Notification transport mapping\n        var name = new PropertyMappingNotification(\"name\", PropertyMappingNotificationArgs.builder()\n            .name(\"custom-field\")\n            .expression(\"return {\\\"foo\\\": context['foo']}\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a custom Notification transport mapping\n  name:\n    type: authentik:PropertyMappingNotification\n    properties:\n      name: custom-field\n      expression: 'return {\"foo\": context[''foo'']}'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingNotification resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingProviderGoogleWorkspace:PropertyMappingProviderGoogleWorkspace": {
            "description": "Manage Google Workspace Provider Property mappings\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingProviderGoogleWorkspace resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingProviderMicrosoftEntra:PropertyMappingProviderMicrosoftEntra": {
            "description": "Manage Microsoft Entra Provider Property mappings\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingProviderMicrosoftEntra resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingProviderRac:PropertyMappingProviderRac": {
            "description": "Manage RAC Provider Property mappings\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "settings": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "settings": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingProviderRac resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "settings": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingProviderRadius:PropertyMappingProviderRadius": {
            "description": "Manage Radius Provider Property mappings\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingProviderRadius resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingProviderSaml:PropertyMappingProviderSaml": {
            "description": "Manage SAML Provider Property mappings\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a custom SAML provider property mapping\nconst saml_aws_rolessessionname = new authentik.PropertyMappingProviderSaml(\"saml-aws-rolessessionname\", {\n    name: \"SAML AWS RoleSessionName\",\n    samlName: \"https://aws.amazon.com/SAML/Attributes/RoleSessionName\",\n    expression: \"return user.email\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a custom SAML provider property mapping\nsaml_aws_rolessessionname = authentik.PropertyMappingProviderSaml(\"saml-aws-rolessessionname\",\n    name=\"SAML AWS RoleSessionName\",\n    saml_name=\"https://aws.amazon.com/SAML/Attributes/RoleSessionName\",\n    expression=\"return user.email\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a custom SAML provider property mapping\n    var saml_aws_rolessessionname = new Authentik.PropertyMappingProviderSaml(\"saml-aws-rolessessionname\", new()\n    {\n        Name = \"SAML AWS RoleSessionName\",\n        SamlName = \"https://aws.amazon.com/SAML/Attributes/RoleSessionName\",\n        Expression = \"return user.email\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a custom SAML provider property mapping\n\t\t_, err := authentik.NewPropertyMappingProviderSaml(ctx, \"saml-aws-rolessessionname\", \u0026authentik.PropertyMappingProviderSamlArgs{\n\t\t\tName:       pulumi.String(\"SAML AWS RoleSessionName\"),\n\t\t\tSamlName:   pulumi.String(\"https://aws.amazon.com/SAML/Attributes/RoleSessionName\"),\n\t\t\tExpression: pulumi.String(\"return user.email\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PropertyMappingProviderSaml;\nimport com.pulumi.authentik.PropertyMappingProviderSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a custom SAML provider property mapping\n        var saml_aws_rolessessionname = new PropertyMappingProviderSaml(\"saml-aws-rolessessionname\", PropertyMappingProviderSamlArgs.builder()\n            .name(\"SAML AWS RoleSessionName\")\n            .samlName(\"https://aws.amazon.com/SAML/Attributes/RoleSessionName\")\n            .expression(\"return user.email\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a custom SAML provider property mapping\n  saml-aws-rolessessionname:\n    type: authentik:PropertyMappingProviderSaml\n    properties:\n      name: SAML AWS RoleSessionName\n      samlName: https://aws.amazon.com/SAML/Attributes/RoleSessionName\n      expression: return user.email\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "samlName": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name",
                "samlName"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "samlName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression",
                "samlName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingProviderSaml resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "samlName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingProviderScim:PropertyMappingProviderScim": {
            "description": "Manage SCIM Provider Property mappings\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingProviderScim resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingProviderScope:PropertyMappingProviderScope": {
            "description": "Manage Scope Provider Property mappings\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a scope mapping\nconst name = new authentik.PropertyMappingProviderScope(\"name\", {\n    name: \"minio\",\n    scopeName: \"minio\",\n    expression: `return {\n  \"policy\": \"readwrite\",\n}\n`,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a scope mapping\nname = authentik.PropertyMappingProviderScope(\"name\",\n    name=\"minio\",\n    scope_name=\"minio\",\n    expression=\"\"\"return {\n  \"policy\": \"readwrite\",\n}\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a scope mapping\n    var name = new Authentik.PropertyMappingProviderScope(\"name\", new()\n    {\n        Name = \"minio\",\n        ScopeName = \"minio\",\n        Expression = @\"return {\n  \"\"policy\"\": \"\"readwrite\"\",\n}\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a scope mapping\n\t\t_, err := authentik.NewPropertyMappingProviderScope(ctx, \"name\", \u0026authentik.PropertyMappingProviderScopeArgs{\n\t\t\tName:       pulumi.String(\"minio\"),\n\t\t\tScopeName:  pulumi.String(\"minio\"),\n\t\t\tExpression: pulumi.String(\"return {\\n  \\\"policy\\\": \\\"readwrite\\\",\\n}\\n\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PropertyMappingProviderScope;\nimport com.pulumi.authentik.PropertyMappingProviderScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a scope mapping\n        var name = new PropertyMappingProviderScope(\"name\", PropertyMappingProviderScopeArgs.builder()\n            .name(\"minio\")\n            .scopeName(\"minio\")\n            .expression(\"\"\"\nreturn {\n  \"policy\": \"readwrite\",\n}\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a scope mapping\n  name:\n    type: authentik:PropertyMappingProviderScope\n    properties:\n      name: minio\n      scopeName: minio\n      expression: |\n        return {\n          \"policy\": \"readwrite\",\n        }\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scopeName": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name",
                "scopeName"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scopeName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression",
                "scopeName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingProviderScope resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scopeName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingRac:PropertyMappingRac": {
            "description": "Manage RAC Provider Property mappings\n\n\u003e This resource is deprecated. Migrate to `authentik.PropertyMappingProviderRac`.\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "settings": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "settings": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingRac resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "settings": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingRadius:PropertyMappingRadius": {
            "description": "Manage Radius Provider Property mappings\n\n\u003e This resource is deprecated. Migrate to `authentik.PropertyMappingProviderRadius`.\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingRadius resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingSaml:PropertyMappingSaml": {
            "description": "Manage SAML Provider Property mappings\n\n\u003e This resource is deprecated. Migrate to `authentik.PropertyMappingProviderSaml`.\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "samlName": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name",
                "samlName"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "samlName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression",
                "samlName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingSaml resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "samlName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingScim:PropertyMappingScim": {
            "description": "Manage SCIM Provider Property mappings\n\n\u003e This resource is deprecated. Migrate to `authentik.PropertyMappingProviderScim`.\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingScim resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingSourceKerberos:PropertyMappingSourceKerberos": {
            "description": "Manage Kerberos Source Property mappings\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingSourceKerberos resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingSourceLdap:PropertyMappingSourceLdap": {
            "description": "Manage LDAP Source Property mappings\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a custom LDAP source property mapping\nconst name = new authentik.PropertyMappingSourceLdap(\"name\", {\n    name: \"custom-field\",\n    expression: \"return ldap.get('sAMAccountName')\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a custom LDAP source property mapping\nname = authentik.PropertyMappingSourceLdap(\"name\",\n    name=\"custom-field\",\n    expression=\"return ldap.get('sAMAccountName')\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a custom LDAP source property mapping\n    var name = new Authentik.PropertyMappingSourceLdap(\"name\", new()\n    {\n        Name = \"custom-field\",\n        Expression = \"return ldap.get('sAMAccountName')\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a custom LDAP source property mapping\n\t\t_, err := authentik.NewPropertyMappingSourceLdap(ctx, \"name\", \u0026authentik.PropertyMappingSourceLdapArgs{\n\t\t\tName:       pulumi.String(\"custom-field\"),\n\t\t\tExpression: pulumi.String(\"return ldap.get('sAMAccountName')\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.PropertyMappingSourceLdap;\nimport com.pulumi.authentik.PropertyMappingSourceLdapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a custom LDAP source property mapping\n        var name = new PropertyMappingSourceLdap(\"name\", PropertyMappingSourceLdapArgs.builder()\n            .name(\"custom-field\")\n            .expression(\"return ldap.get('sAMAccountName')\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a custom LDAP source property mapping\n  name:\n    type: authentik:PropertyMappingSourceLdap\n    properties:\n      name: custom-field\n      expression: return ldap.get('sAMAccountName')\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingSourceLdap resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingSourceOauth:PropertyMappingSourceOauth": {
            "description": "Manage OAuth Source Property mappings\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingSourceOauth resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingSourcePlex:PropertyMappingSourcePlex": {
            "description": "Manage Plex Source Property mappings\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingSourcePlex resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingSourceSaml:PropertyMappingSourceSaml": {
            "description": "Manage SAML Source Property mappings\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingSourceSaml resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/propertyMappingSourceScim:PropertyMappingSourceScim": {
            "description": "Manage SCIM Source Property mappings\n",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyMappingSourceScim resources.\n",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerGoogleWorkspace:ProviderGoogleWorkspace": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects.\n"
                },
                "defaultGroupEmailDomain": {
                    "type": "string"
                },
                "delegatedSubject": {
                    "type": "string"
                },
                "excludeUsersServiceAccount": {
                    "type": "boolean"
                },
                "filterGroup": {
                    "type": "string"
                },
                "groupDeleteAction": {
                    "type": "string",
                    "description": "Allowed values: - `delete` - `do_nothing`\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyMappingsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userDeleteAction": {
                    "type": "string",
                    "description": "Allowed values: - `do_nothing` - `delete` - `suspend`\n"
                }
            },
            "required": [
                "defaultGroupEmailDomain",
                "name"
            ],
            "inputProperties": {
                "credentials": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects.\n"
                },
                "defaultGroupEmailDomain": {
                    "type": "string"
                },
                "delegatedSubject": {
                    "type": "string"
                },
                "excludeUsersServiceAccount": {
                    "type": "boolean"
                },
                "filterGroup": {
                    "type": "string"
                },
                "groupDeleteAction": {
                    "type": "string",
                    "description": "Allowed values: - `delete` - `do_nothing`\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyMappingsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userDeleteAction": {
                    "type": "string",
                    "description": "Allowed values: - `do_nothing` - `delete` - `suspend`\n"
                }
            },
            "requiredInputs": [
                "defaultGroupEmailDomain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderGoogleWorkspace resources.\n",
                "properties": {
                    "credentials": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects.\n"
                    },
                    "defaultGroupEmailDomain": {
                        "type": "string"
                    },
                    "delegatedSubject": {
                        "type": "string"
                    },
                    "excludeUsersServiceAccount": {
                        "type": "boolean"
                    },
                    "filterGroup": {
                        "type": "string"
                    },
                    "groupDeleteAction": {
                        "type": "string",
                        "description": "Allowed values: - `delete` - `do_nothing`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "propertyMappingsGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userDeleteAction": {
                        "type": "string",
                        "description": "Allowed values: - `do_nothing` - `delete` - `suspend`\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerLdap:ProviderLdap": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// Create an LDAP Provider\nconst default-authentication-flow = authentik.getFlow({\n    slug: \"default-authentication-flow\",\n});\nconst name = new authentik.ProviderLdap(\"name\", {\n    name: \"ldap-app\",\n    baseDn: \"dc=ldap,dc=goauthentik,dc=io\",\n    bindFlow: default_authentication_flow.then(default_authentication_flow =\u003e default_authentication_flow.id),\n});\nconst nameApplication = new authentik.Application(\"name\", {\n    name: \"ldap-app\",\n    slug: \"ldap-app\",\n    protocolProvider: name.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\n# Create an LDAP Provider\ndefault_authentication_flow = authentik.get_flow(slug=\"default-authentication-flow\")\nname = authentik.ProviderLdap(\"name\",\n    name=\"ldap-app\",\n    base_dn=\"dc=ldap,dc=goauthentik,dc=io\",\n    bind_flow=default_authentication_flow.id)\nname_application = authentik.Application(\"name\",\n    name=\"ldap-app\",\n    slug=\"ldap-app\",\n    protocol_provider=name.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create an LDAP Provider\n    var default_authentication_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-authentication-flow\",\n    });\n\n    var name = new Authentik.ProviderLdap(\"name\", new()\n    {\n        Name = \"ldap-app\",\n        BaseDn = \"dc=ldap,dc=goauthentik,dc=io\",\n        BindFlow = default_authentication_flow.Apply(default_authentication_flow =\u003e default_authentication_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n    });\n\n    var nameApplication = new Authentik.Application(\"name\", new()\n    {\n        Name = \"ldap-app\",\n        Slug = \"ldap-app\",\n        ProtocolProvider = name.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create an LDAP Provider\n\t\tdefault_authentication_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-authentication-flow\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tname, err := authentik.NewProviderLdap(ctx, \"name\", \u0026authentik.ProviderLdapArgs{\n\t\t\tName:     pulumi.String(\"ldap-app\"),\n\t\t\tBaseDn:   pulumi.String(\"dc=ldap,dc=goauthentik,dc=io\"),\n\t\t\tBindFlow: pulumi.String(default_authentication_flow.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewApplication(ctx, \"name\", \u0026authentik.ApplicationArgs{\n\t\t\tName:             pulumi.String(\"ldap-app\"),\n\t\t\tSlug:             pulumi.String(\"ldap-app\"),\n\t\t\tProtocolProvider: name.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.ProviderLdap;\nimport com.pulumi.authentik.ProviderLdapArgs;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create an LDAP Provider\n        final var default-authentication-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-authentication-flow\")\n            .build());\n\n        var name = new ProviderLdap(\"name\", ProviderLdapArgs.builder()\n            .name(\"ldap-app\")\n            .baseDn(\"dc=ldap,dc=goauthentik,dc=io\")\n            .bindFlow(default_authentication_flow.id())\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()\n            .name(\"ldap-app\")\n            .slug(\"ldap-app\")\n            .protocolProvider(name.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:ProviderLdap\n    properties:\n      name: ldap-app\n      baseDn: dc=ldap,dc=goauthentik,dc=io\n      bindFlow: ${[\"default-authentication-flow\"].id}\n  nameApplication:\n    type: authentik:Application\n    name: name\n    properties:\n      name: ldap-app\n      slug: ldap-app\n      protocolProvider: ${name.id}\nvariables:\n  # Create an LDAP Provider\n  default-authentication-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-authentication-flow\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "baseDn": {
                    "type": "string"
                },
                "bindFlow": {
                    "type": "string"
                },
                "bindMode": {
                    "type": "string",
                    "description": "Defaults to `direct`.\n"
                },
                "certificate": {
                    "type": "string"
                },
                "gidStartNumber": {
                    "type": "integer",
                    "description": "Defaults to `4000`.\n"
                },
                "mfaSupport": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string"
                },
                "searchMode": {
                    "type": "string",
                    "description": "Defaults to `direct`.\n"
                },
                "tlsServerName": {
                    "type": "string"
                },
                "uidStartNumber": {
                    "type": "integer",
                    "description": "Defaults to `2000`.\n"
                },
                "unbindFlow": {
                    "type": "string"
                }
            },
            "required": [
                "baseDn",
                "bindFlow",
                "name",
                "unbindFlow"
            ],
            "inputProperties": {
                "baseDn": {
                    "type": "string"
                },
                "bindFlow": {
                    "type": "string"
                },
                "bindMode": {
                    "type": "string",
                    "description": "Defaults to `direct`.\n"
                },
                "certificate": {
                    "type": "string"
                },
                "gidStartNumber": {
                    "type": "integer",
                    "description": "Defaults to `4000`.\n"
                },
                "mfaSupport": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string"
                },
                "searchMode": {
                    "type": "string",
                    "description": "Defaults to `direct`.\n"
                },
                "tlsServerName": {
                    "type": "string"
                },
                "uidStartNumber": {
                    "type": "integer",
                    "description": "Defaults to `2000`.\n"
                },
                "unbindFlow": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "baseDn",
                "bindFlow",
                "unbindFlow"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderLdap resources.\n",
                "properties": {
                    "baseDn": {
                        "type": "string"
                    },
                    "bindFlow": {
                        "type": "string"
                    },
                    "bindMode": {
                        "type": "string",
                        "description": "Defaults to `direct`.\n"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "gidStartNumber": {
                        "type": "integer",
                        "description": "Defaults to `4000`.\n"
                    },
                    "mfaSupport": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "searchMode": {
                        "type": "string",
                        "description": "Defaults to `direct`.\n"
                    },
                    "tlsServerName": {
                        "type": "string"
                    },
                    "uidStartNumber": {
                        "type": "integer",
                        "description": "Defaults to `2000`.\n"
                    },
                    "unbindFlow": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerMicrosoftEntra:ProviderMicrosoftEntra": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "excludeUsersServiceAccount": {
                    "type": "boolean"
                },
                "filterGroup": {
                    "type": "string"
                },
                "groupDeleteAction": {
                    "type": "string",
                    "description": "Allowed values: - `delete` - `do_nothing`\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyMappingsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tenantId": {
                    "type": "string"
                },
                "userDeleteAction": {
                    "type": "string",
                    "description": "Allowed values: - `delete` - `do_nothing`\n"
                }
            },
            "required": [
                "clientId",
                "clientSecret",
                "name",
                "tenantId"
            ],
            "inputProperties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "excludeUsersServiceAccount": {
                    "type": "boolean"
                },
                "filterGroup": {
                    "type": "string"
                },
                "groupDeleteAction": {
                    "type": "string",
                    "description": "Allowed values: - `delete` - `do_nothing`\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyMappingsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tenantId": {
                    "type": "string"
                },
                "userDeleteAction": {
                    "type": "string",
                    "description": "Allowed values: - `delete` - `do_nothing`\n"
                }
            },
            "requiredInputs": [
                "clientId",
                "clientSecret",
                "tenantId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderMicrosoftEntra resources.\n",
                "properties": {
                    "clientId": {
                        "type": "string"
                    },
                    "clientSecret": {
                        "type": "string",
                        "secret": true
                    },
                    "excludeUsersServiceAccount": {
                        "type": "boolean"
                    },
                    "filterGroup": {
                        "type": "string"
                    },
                    "groupDeleteAction": {
                        "type": "string",
                        "description": "Allowed values: - `delete` - `do_nothing`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "propertyMappingsGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "userDeleteAction": {
                        "type": "string",
                        "description": "Allowed values: - `delete` - `do_nothing`\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerOauth2:ProviderOauth2": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create an OAuth2 Provider\nconst name = new authentik.ProviderOauth2(\"name\", {\n    name: \"grafana\",\n    clientId: \"grafana\",\n});\nconst nameApplication = new authentik.Application(\"name\", {\n    name: \"test app\",\n    slug: \"test-app\",\n    protocolProvider: name.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create an OAuth2 Provider\nname = authentik.ProviderOauth2(\"name\",\n    name=\"grafana\",\n    client_id=\"grafana\")\nname_application = authentik.Application(\"name\",\n    name=\"test app\",\n    slug=\"test-app\",\n    protocol_provider=name.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create an OAuth2 Provider\n    var name = new Authentik.ProviderOauth2(\"name\", new()\n    {\n        Name = \"grafana\",\n        ClientId = \"grafana\",\n    });\n\n    var nameApplication = new Authentik.Application(\"name\", new()\n    {\n        Name = \"test app\",\n        Slug = \"test-app\",\n        ProtocolProvider = name.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create an OAuth2 Provider\n\t\tname, err := authentik.NewProviderOauth2(ctx, \"name\", \u0026authentik.ProviderOauth2Args{\n\t\t\tName:     pulumi.String(\"grafana\"),\n\t\t\tClientId: pulumi.String(\"grafana\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewApplication(ctx, \"name\", \u0026authentik.ApplicationArgs{\n\t\t\tName:             pulumi.String(\"test app\"),\n\t\t\tSlug:             pulumi.String(\"test-app\"),\n\t\t\tProtocolProvider: name.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.ProviderOauth2;\nimport com.pulumi.authentik.ProviderOauth2Args;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create an OAuth2 Provider\n        var name = new ProviderOauth2(\"name\", ProviderOauth2Args.builder()\n            .name(\"grafana\")\n            .clientId(\"grafana\")\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()\n            .name(\"test app\")\n            .slug(\"test-app\")\n            .protocolProvider(name.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create an OAuth2 Provider\n  name:\n    type: authentik:ProviderOauth2\n    properties:\n      name: grafana\n      clientId: grafana\n  nameApplication:\n    type: authentik:Application\n    name: name\n    properties:\n      name: test app\n      slug: test-app\n      protocolProvider: ${name.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "accessCodeValidity": {
                    "type": "string"
                },
                "accessTokenValidity": {
                    "type": "string"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "clientType": {
                    "type": "string",
                    "description": "Allowed values: - `confidential` - `public`\n"
                },
                "encryptionKey": {
                    "type": "string"
                },
                "includeClaimsInIdToken": {
                    "type": "boolean"
                },
                "invalidationFlow": {
                    "type": "string"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Allowed values: - `global` - `per_provider`\n"
                },
                "jwksSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refreshTokenValidity": {
                    "type": "string"
                },
                "signingKey": {
                    "type": "string"
                },
                "subMode": {
                    "type": "string",
                    "description": "Allowed values: - `hashed_user_id` - `user_id` - `user_uuid` - `user_username` - `user_email` - `user_upn`\n"
                }
            },
            "required": [
                "authorizationFlow",
                "clientId",
                "clientSecret",
                "invalidationFlow",
                "name"
            ],
            "inputProperties": {
                "accessCodeValidity": {
                    "type": "string"
                },
                "accessTokenValidity": {
                    "type": "string"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "clientType": {
                    "type": "string",
                    "description": "Allowed values: - `confidential` - `public`\n"
                },
                "encryptionKey": {
                    "type": "string"
                },
                "includeClaimsInIdToken": {
                    "type": "boolean"
                },
                "invalidationFlow": {
                    "type": "string"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Allowed values: - `global` - `per_provider`\n"
                },
                "jwksSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refreshTokenValidity": {
                    "type": "string"
                },
                "signingKey": {
                    "type": "string"
                },
                "subMode": {
                    "type": "string",
                    "description": "Allowed values: - `hashed_user_id` - `user_id` - `user_uuid` - `user_username` - `user_email` - `user_upn`\n"
                }
            },
            "requiredInputs": [
                "authorizationFlow",
                "clientId",
                "invalidationFlow"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderOauth2 resources.\n",
                "properties": {
                    "accessCodeValidity": {
                        "type": "string"
                    },
                    "accessTokenValidity": {
                        "type": "string"
                    },
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "authorizationFlow": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "clientSecret": {
                        "type": "string",
                        "secret": true
                    },
                    "clientType": {
                        "type": "string",
                        "description": "Allowed values: - `confidential` - `public`\n"
                    },
                    "encryptionKey": {
                        "type": "string"
                    },
                    "includeClaimsInIdToken": {
                        "type": "boolean"
                    },
                    "invalidationFlow": {
                        "type": "string"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Allowed values: - `global` - `per_provider`\n"
                    },
                    "jwksSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "refreshTokenValidity": {
                        "type": "string"
                    },
                    "signingKey": {
                        "type": "string"
                    },
                    "subMode": {
                        "type": "string",
                        "description": "Allowed values: - `hashed_user_id` - `user_id` - `user_uuid` - `user_username` - `user_email` - `user_upn`\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerProxy:ProviderProxy": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// Create a proxy provider\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst name = new authentik.ProviderProxy(\"name\", {\n    name: \"test-app\",\n    internalHost: \"http://foo.bar.baz\",\n    externalHost: \"http://internal.service\",\n    authorizationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n});\nconst nameApplication = new authentik.Application(\"name\", {\n    name: \"test-app\",\n    slug: \"test-app\",\n    protocolProvider: name.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\n# Create a proxy provider\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nname = authentik.ProviderProxy(\"name\",\n    name=\"test-app\",\n    internal_host=\"http://foo.bar.baz\",\n    external_host=\"http://internal.service\",\n    authorization_flow=default_authorization_flow.id)\nname_application = authentik.Application(\"name\",\n    name=\"test-app\",\n    slug=\"test-app\",\n    protocol_provider=name.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a proxy provider\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var name = new Authentik.ProviderProxy(\"name\", new()\n    {\n        Name = \"test-app\",\n        InternalHost = \"http://foo.bar.baz\",\n        ExternalHost = \"http://internal.service\",\n        AuthorizationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n    });\n\n    var nameApplication = new Authentik.Application(\"name\", new()\n    {\n        Name = \"test-app\",\n        Slug = \"test-app\",\n        ProtocolProvider = name.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a proxy provider\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tname, err := authentik.NewProviderProxy(ctx, \"name\", \u0026authentik.ProviderProxyArgs{\n\t\t\tName:              pulumi.String(\"test-app\"),\n\t\t\tInternalHost:      pulumi.String(\"http://foo.bar.baz\"),\n\t\t\tExternalHost:      pulumi.String(\"http://internal.service\"),\n\t\t\tAuthorizationFlow: pulumi.String(default_authorization_flow.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewApplication(ctx, \"name\", \u0026authentik.ApplicationArgs{\n\t\t\tName:             pulumi.String(\"test-app\"),\n\t\t\tSlug:             pulumi.String(\"test-app\"),\n\t\t\tProtocolProvider: name.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.ProviderProxy;\nimport com.pulumi.authentik.ProviderProxyArgs;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a proxy provider\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var name = new ProviderProxy(\"name\", ProviderProxyArgs.builder()\n            .name(\"test-app\")\n            .internalHost(\"http://foo.bar.baz\")\n            .externalHost(\"http://internal.service\")\n            .authorizationFlow(default_authorization_flow.id())\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()\n            .name(\"test-app\")\n            .slug(\"test-app\")\n            .protocolProvider(name.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:ProviderProxy\n    properties:\n      name: test-app\n      internalHost: http://foo.bar.baz\n      externalHost: http://internal.service\n      authorizationFlow: ${[\"default-authorization-flow\"].id}\n  nameApplication:\n    type: authentik:Application\n    name: name\n    properties:\n      name: test-app\n      slug: test-app\n      protocolProvider: ${name.id}\nvariables:\n  # Create a proxy provider\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "accessTokenValidity": {
                    "type": "string"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "basicAuthEnabled": {
                    "type": "boolean"
                },
                "basicAuthPasswordAttribute": {
                    "type": "string"
                },
                "basicAuthUsernameAttribute": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "cookieDomain": {
                    "type": "string"
                },
                "externalHost": {
                    "type": "string"
                },
                "interceptHeaderAuth": {
                    "type": "boolean"
                },
                "internalHost": {
                    "type": "string"
                },
                "internalHostSslValidation": {
                    "type": "boolean"
                },
                "invalidationFlow": {
                    "type": "string"
                },
                "jwksSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Allowed values: - `proxy` - `forward_single` - `forward_domain`\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refreshTokenValidity": {
                    "type": "string"
                },
                "skipPathRegex": {
                    "type": "string"
                }
            },
            "required": [
                "authorizationFlow",
                "clientId",
                "externalHost",
                "invalidationFlow",
                "name"
            ],
            "inputProperties": {
                "accessTokenValidity": {
                    "type": "string"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "basicAuthEnabled": {
                    "type": "boolean"
                },
                "basicAuthPasswordAttribute": {
                    "type": "string"
                },
                "basicAuthUsernameAttribute": {
                    "type": "string"
                },
                "cookieDomain": {
                    "type": "string"
                },
                "externalHost": {
                    "type": "string"
                },
                "interceptHeaderAuth": {
                    "type": "boolean"
                },
                "internalHost": {
                    "type": "string"
                },
                "internalHostSslValidation": {
                    "type": "boolean"
                },
                "invalidationFlow": {
                    "type": "string"
                },
                "jwksSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Allowed values: - `proxy` - `forward_single` - `forward_domain`\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refreshTokenValidity": {
                    "type": "string"
                },
                "skipPathRegex": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "authorizationFlow",
                "externalHost",
                "invalidationFlow"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderProxy resources.\n",
                "properties": {
                    "accessTokenValidity": {
                        "type": "string"
                    },
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "authorizationFlow": {
                        "type": "string"
                    },
                    "basicAuthEnabled": {
                        "type": "boolean"
                    },
                    "basicAuthPasswordAttribute": {
                        "type": "string"
                    },
                    "basicAuthUsernameAttribute": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "cookieDomain": {
                        "type": "string"
                    },
                    "externalHost": {
                        "type": "string"
                    },
                    "interceptHeaderAuth": {
                        "type": "boolean"
                    },
                    "internalHost": {
                        "type": "string"
                    },
                    "internalHostSslValidation": {
                        "type": "boolean"
                    },
                    "invalidationFlow": {
                        "type": "string"
                    },
                    "jwksSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Allowed values: - `proxy` - `forward_single` - `forward_domain`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "refreshTokenValidity": {
                        "type": "string"
                    },
                    "skipPathRegex": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerRac:ProviderRac": {
            "properties": {
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "connectionExpiry": {
                    "type": "string",
                    "description": "Defaults to `seconds=0`.\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "settings": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                }
            },
            "required": [
                "authorizationFlow",
                "name"
            ],
            "inputProperties": {
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "connectionExpiry": {
                    "type": "string",
                    "description": "Defaults to `seconds=0`.\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "settings": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                }
            },
            "requiredInputs": [
                "authorizationFlow"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderRac resources.\n",
                "properties": {
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "authorizationFlow": {
                        "type": "string"
                    },
                    "connectionExpiry": {
                        "type": "string",
                        "description": "Defaults to `seconds=0`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "settings": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerRadius:ProviderRadius": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// Create a Radius Provider\nconst default-authentication-flow = authentik.getFlow({\n    slug: \"default-authentication-flow\",\n});\nconst name = new authentik.ProviderRadius(\"name\", {\n    name: \"radius-app\",\n    authorizationFlow: default_authentication_flow.then(default_authentication_flow =\u003e default_authentication_flow.id),\n    clientNetworks: \"10.10.0.0/24\",\n    sharedSecret: \"my-shared-secret\",\n});\nconst nameApplication = new authentik.Application(\"name\", {\n    name: \"radius-app\",\n    slug: \"radius-app\",\n    protocolProvider: name.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\n# Create a Radius Provider\ndefault_authentication_flow = authentik.get_flow(slug=\"default-authentication-flow\")\nname = authentik.ProviderRadius(\"name\",\n    name=\"radius-app\",\n    authorization_flow=default_authentication_flow.id,\n    client_networks=\"10.10.0.0/24\",\n    shared_secret=\"my-shared-secret\")\nname_application = authentik.Application(\"name\",\n    name=\"radius-app\",\n    slug=\"radius-app\",\n    protocol_provider=name.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a Radius Provider\n    var default_authentication_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-authentication-flow\",\n    });\n\n    var name = new Authentik.ProviderRadius(\"name\", new()\n    {\n        Name = \"radius-app\",\n        AuthorizationFlow = default_authentication_flow.Apply(default_authentication_flow =\u003e default_authentication_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        ClientNetworks = \"10.10.0.0/24\",\n        SharedSecret = \"my-shared-secret\",\n    });\n\n    var nameApplication = new Authentik.Application(\"name\", new()\n    {\n        Name = \"radius-app\",\n        Slug = \"radius-app\",\n        ProtocolProvider = name.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a Radius Provider\n\t\tdefault_authentication_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-authentication-flow\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tname, err := authentik.NewProviderRadius(ctx, \"name\", \u0026authentik.ProviderRadiusArgs{\n\t\t\tName:              pulumi.String(\"radius-app\"),\n\t\t\tAuthorizationFlow: pulumi.String(default_authentication_flow.Id),\n\t\t\tClientNetworks:    pulumi.String(\"10.10.0.0/24\"),\n\t\t\tSharedSecret:      pulumi.String(\"my-shared-secret\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewApplication(ctx, \"name\", \u0026authentik.ApplicationArgs{\n\t\t\tName:             pulumi.String(\"radius-app\"),\n\t\t\tSlug:             pulumi.String(\"radius-app\"),\n\t\t\tProtocolProvider: name.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.ProviderRadius;\nimport com.pulumi.authentik.ProviderRadiusArgs;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a Radius Provider\n        final var default-authentication-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-authentication-flow\")\n            .build());\n\n        var name = new ProviderRadius(\"name\", ProviderRadiusArgs.builder()\n            .name(\"radius-app\")\n            .authorizationFlow(default_authentication_flow.id())\n            .clientNetworks(\"10.10.0.0/24\")\n            .sharedSecret(\"my-shared-secret\")\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()\n            .name(\"radius-app\")\n            .slug(\"radius-app\")\n            .protocolProvider(name.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:ProviderRadius\n    properties:\n      name: radius-app\n      authorizationFlow: ${[\"default-authentication-flow\"].id}\n      clientNetworks: 10.10.0.0/24\n      sharedSecret: my-shared-secret\n  nameApplication:\n    type: authentik:Application\n    name: name\n    properties:\n      name: radius-app\n      slug: radius-app\n      protocolProvider: ${name.id}\nvariables:\n  # Create a Radius Provider\n  default-authentication-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-authentication-flow\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "authorizationFlow": {
                    "type": "string"
                },
                "clientNetworks": {
                    "type": "string",
                    "description": "Defaults to `0.0.0.0/0, ::/0`.\n"
                },
                "invalidationFlow": {
                    "type": "string"
                },
                "mfaSupport": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sharedSecret": {
                    "type": "string",
                    "secret": true
                }
            },
            "required": [
                "authorizationFlow",
                "invalidationFlow",
                "name",
                "sharedSecret"
            ],
            "inputProperties": {
                "authorizationFlow": {
                    "type": "string"
                },
                "clientNetworks": {
                    "type": "string",
                    "description": "Defaults to `0.0.0.0/0, ::/0`.\n"
                },
                "invalidationFlow": {
                    "type": "string"
                },
                "mfaSupport": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sharedSecret": {
                    "type": "string",
                    "secret": true
                }
            },
            "requiredInputs": [
                "authorizationFlow",
                "invalidationFlow",
                "sharedSecret"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderRadius resources.\n",
                "properties": {
                    "authorizationFlow": {
                        "type": "string"
                    },
                    "clientNetworks": {
                        "type": "string",
                        "description": "Defaults to `0.0.0.0/0, ::/0`.\n"
                    },
                    "invalidationFlow": {
                        "type": "string"
                    },
                    "mfaSupport": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sharedSecret": {
                        "type": "string",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerSaml:ProviderSaml": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// Create a SAML Provider\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst name = new authentik.ProviderSaml(\"name\", {\n    name: \"test-app\",\n    authorizationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    acsUrl: \"http://localhost\",\n});\nconst nameApplication = new authentik.Application(\"name\", {\n    name: \"test-app\",\n    slug: \"test-app\",\n    protocolProvider: name.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\n# Create a SAML Provider\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nname = authentik.ProviderSaml(\"name\",\n    name=\"test-app\",\n    authorization_flow=default_authorization_flow.id,\n    acs_url=\"http://localhost\")\nname_application = authentik.Application(\"name\",\n    name=\"test-app\",\n    slug=\"test-app\",\n    protocol_provider=name.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a SAML Provider\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var name = new Authentik.ProviderSaml(\"name\", new()\n    {\n        Name = \"test-app\",\n        AuthorizationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        AcsUrl = \"http://localhost\",\n    });\n\n    var nameApplication = new Authentik.Application(\"name\", new()\n    {\n        Name = \"test-app\",\n        Slug = \"test-app\",\n        ProtocolProvider = name.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a SAML Provider\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tname, err := authentik.NewProviderSaml(ctx, \"name\", \u0026authentik.ProviderSamlArgs{\n\t\t\tName:              pulumi.String(\"test-app\"),\n\t\t\tAuthorizationFlow: pulumi.String(default_authorization_flow.Id),\n\t\t\tAcsUrl:            pulumi.String(\"http://localhost\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewApplication(ctx, \"name\", \u0026authentik.ApplicationArgs{\n\t\t\tName:             pulumi.String(\"test-app\"),\n\t\t\tSlug:             pulumi.String(\"test-app\"),\n\t\t\tProtocolProvider: name.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.ProviderSaml;\nimport com.pulumi.authentik.ProviderSamlArgs;\nimport com.pulumi.authentik.Application;\nimport com.pulumi.authentik.ApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a SAML Provider\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var name = new ProviderSaml(\"name\", ProviderSamlArgs.builder()\n            .name(\"test-app\")\n            .authorizationFlow(default_authorization_flow.id())\n            .acsUrl(\"http://localhost\")\n            .build());\n\n        var nameApplication = new Application(\"nameApplication\", ApplicationArgs.builder()\n            .name(\"test-app\")\n            .slug(\"test-app\")\n            .protocolProvider(name.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:ProviderSaml\n    properties:\n      name: test-app\n      authorizationFlow: ${[\"default-authorization-flow\"].id}\n      acsUrl: http://localhost\n  nameApplication:\n    type: authentik:Application\n    name: name\n    properties:\n      name: test-app\n      slug: test-app\n      protocolProvider: ${name.id}\nvariables:\n  # Create a SAML Provider\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "acsUrl": {
                    "type": "string"
                },
                "assertionValidNotBefore": {
                    "type": "string"
                },
                "assertionValidNotOnOrAfter": {
                    "type": "string"
                },
                "audience": {
                    "type": "string"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "defaultRelayState": {
                    "type": "string"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512`\n"
                },
                "encryptionKp": {
                    "type": "string"
                },
                "invalidationFlow": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nameIdMapping": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sessionValidNotOnOrAfter": {
                    "type": "string"
                },
                "signAssertion": {
                    "type": "boolean"
                },
                "signResponse": {
                    "type": "boolean"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -\n`http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -\n`http://www.w3.org/2000/09/xmldsig#dsa-sha1`\n"
                },
                "signingKp": {
                    "type": "string"
                },
                "spBinding": {
                    "type": "string",
                    "description": "Allowed values: - `redirect` - `post`\n"
                },
                "urlSloPost": {
                    "type": "string"
                },
                "urlSloRedirect": {
                    "type": "string"
                },
                "urlSsoInit": {
                    "type": "string"
                },
                "urlSsoPost": {
                    "type": "string"
                },
                "urlSsoRedirect": {
                    "type": "string"
                },
                "verificationKp": {
                    "type": "string"
                }
            },
            "required": [
                "acsUrl",
                "authorizationFlow",
                "invalidationFlow",
                "name",
                "urlSloPost",
                "urlSloRedirect",
                "urlSsoInit",
                "urlSsoPost",
                "urlSsoRedirect"
            ],
            "inputProperties": {
                "acsUrl": {
                    "type": "string"
                },
                "assertionValidNotBefore": {
                    "type": "string"
                },
                "assertionValidNotOnOrAfter": {
                    "type": "string"
                },
                "audience": {
                    "type": "string"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationFlow": {
                    "type": "string"
                },
                "defaultRelayState": {
                    "type": "string"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512`\n"
                },
                "encryptionKp": {
                    "type": "string"
                },
                "invalidationFlow": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nameIdMapping": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sessionValidNotOnOrAfter": {
                    "type": "string"
                },
                "signAssertion": {
                    "type": "boolean"
                },
                "signResponse": {
                    "type": "boolean"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -\n`http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -\n`http://www.w3.org/2000/09/xmldsig#dsa-sha1`\n"
                },
                "signingKp": {
                    "type": "string"
                },
                "spBinding": {
                    "type": "string",
                    "description": "Allowed values: - `redirect` - `post`\n"
                },
                "urlSloPost": {
                    "type": "string"
                },
                "urlSloRedirect": {
                    "type": "string"
                },
                "urlSsoInit": {
                    "type": "string"
                },
                "urlSsoPost": {
                    "type": "string"
                },
                "urlSsoRedirect": {
                    "type": "string"
                },
                "verificationKp": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "acsUrl",
                "authorizationFlow",
                "invalidationFlow"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderSaml resources.\n",
                "properties": {
                    "acsUrl": {
                        "type": "string"
                    },
                    "assertionValidNotBefore": {
                        "type": "string"
                    },
                    "assertionValidNotOnOrAfter": {
                        "type": "string"
                    },
                    "audience": {
                        "type": "string"
                    },
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "authorizationFlow": {
                        "type": "string"
                    },
                    "defaultRelayState": {
                        "type": "string"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512`\n"
                    },
                    "encryptionKp": {
                        "type": "string"
                    },
                    "invalidationFlow": {
                        "type": "string"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameIdMapping": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sessionValidNotOnOrAfter": {
                        "type": "string"
                    },
                    "signAssertion": {
                        "type": "boolean"
                    },
                    "signResponse": {
                        "type": "boolean"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -\n`http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -\n`http://www.w3.org/2000/09/xmldsig#dsa-sha1`\n"
                    },
                    "signingKp": {
                        "type": "string"
                    },
                    "spBinding": {
                        "type": "string",
                        "description": "Allowed values: - `redirect` - `post`\n"
                    },
                    "urlSloPost": {
                        "type": "string"
                    },
                    "urlSloRedirect": {
                        "type": "string"
                    },
                    "urlSsoInit": {
                        "type": "string"
                    },
                    "urlSsoPost": {
                        "type": "string"
                    },
                    "urlSsoRedirect": {
                        "type": "string"
                    },
                    "verificationKp": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/providerScim:ProviderScim": {
            "description": "## Example Usage\n\n",
            "properties": {
                "excludeUsersServiceAccount": {
                    "type": "boolean"
                },
                "filterGroup": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyMappingsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token": {
                    "type": "string",
                    "secret": true
                },
                "url": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "token",
                "url"
            ],
            "inputProperties": {
                "excludeUsersServiceAccount": {
                    "type": "boolean"
                },
                "filterGroup": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyMappingsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token": {
                    "type": "string",
                    "secret": true
                },
                "url": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "token",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderScim resources.\n",
                "properties": {
                    "excludeUsersServiceAccount": {
                        "type": "boolean"
                    },
                    "filterGroup": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "propertyMappingsGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "token": {
                        "type": "string",
                        "secret": true
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/racEndpoint:RacEndpoint": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "maximumConnections": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "Allowed values: - `rdp` - `vnc` - `ssh`\n"
                },
                "protocolProvider": {
                    "type": "integer"
                },
                "settings": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects.\n"
                }
            },
            "required": [
                "host",
                "name",
                "protocol",
                "protocolProvider"
            ],
            "inputProperties": {
                "host": {
                    "type": "string"
                },
                "maximumConnections": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "Allowed values: - `rdp` - `vnc` - `ssh`\n"
                },
                "protocolProvider": {
                    "type": "integer"
                },
                "settings": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects.\n"
                }
            },
            "requiredInputs": [
                "host",
                "protocol",
                "protocolProvider"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RacEndpoint resources.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "maximumConnections": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Allowed values: - `rdp` - `vnc` - `ssh`\n"
                    },
                    "protocolProvider": {
                        "type": "integer"
                    },
                    "settings": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/rbacPermissionRole:RbacPermissionRole": {
            "description": "## Example Usage\n\n",
            "properties": {
                "model": {
                    "type": "string",
                    "description": "Allowed values: - `authentik_tenants.domain` - `authentik_crypto.certificatekeypair` - `authentik_flows.flow` -\n`authentik_flows.flowstagebinding` - `authentik_outposts.dockerserviceconnection` -\n`authentik_outposts.kubernetesserviceconnection` - `authentik_outposts.outpost` - `authentik_policies_dummy.dummypolicy`\n- `authentik_policies_event_matcher.eventmatcherpolicy` - `authentik_policies_expiry.passwordexpirypolicy` -\n`authentik_policies_expression.expressionpolicy` - `authentik_policies_geoip.geoippolicy` -\n`authentik_policies_password.passwordpolicy` - `authentik_policies_reputation.reputationpolicy` -\n`authentik_policies.policybinding` - `authentik_providers_ldap.ldapprovider` - `authentik_providers_oauth2.scopemapping`\n- `authentik_providers_oauth2.oauth2provider` - `authentik_providers_proxy.proxyprovider` -\n`authentik_providers_radius.radiusprovider` - `authentik_providers_radius.radiusproviderpropertymapping` -\n`authentik_providers_saml.samlprovider` - `authentik_providers_saml.samlpropertymapping` -\n`authentik_providers_scim.scimprovider` - `authentik_providers_scim.scimmapping` - `authentik_rbac.role` -\n`authentik_sources_kerberos.kerberossource` - `authentik_sources_kerberos.kerberossourcepropertymapping` -\n`authentik_sources_kerberos.userkerberossourceconnection` - `authentik_sources_kerberos.groupkerberossourceconnection` -\n`authentik_sources_ldap.ldapsource` - `authentik_sources_ldap.ldapsourcepropertymapping` -\n`authentik_sources_oauth.oauthsource` - `authentik_sources_oauth.oauthsourcepropertymapping` -\n`authentik_sources_oauth.useroauthsourceconnection` - `authentik_sources_oauth.groupoauthsourceconnection` -\n`authentik_sources_plex.plexsource` - `authentik_sources_plex.plexsourcepropertymapping` -\n`authentik_sources_plex.userplexsourceconnection` - `authentik_sources_plex.groupplexsourceconnection` -\n`authentik_sources_saml.samlsource` - `authentik_sources_saml.samlsourcepropertymapping` -\n`authentik_sources_saml.usersamlsourceconnection` - `authentik_sources_saml.groupsamlsourceconnection` -\n`authentik_sources_scim.scimsource` - `authentik_sources_scim.scimsourcepropertymapping` -\n`authentik_stages_authenticator_duo.authenticatorduostage` - `authentik_stages_authenticator_duo.duodevice` -\n`authentik_stages_authenticator_sms.authenticatorsmsstage` - `authentik_stages_authenticator_sms.smsdevice` -\n`authentik_stages_authenticator_static.authenticatorstaticstage` - `authentik_stages_authenticator_static.staticdevice`\n- `authentik_stages_authenticator_totp.authenticatortotpstage` - `authentik_stages_authenticator_totp.totpdevice` -\n`authentik_stages_authenticator_validate.authenticatorvalidatestage` -\n`authentik_stages_authenticator_webauthn.authenticatorwebauthnstage` -\n`authentik_stages_authenticator_webauthn.webauthndevice` - `authentik_stages_captcha.captchastage` -\n`authentik_stages_consent.consentstage` - `authentik_stages_consent.userconsent` - `authentik_stages_deny.denystage` -\n`authentik_stages_dummy.dummystage` - `authentik_stages_email.emailstage` -\n`authentik_stages_identification.identificationstage` - `authentik_stages_invitation.invitationstage` -\n`authentik_stages_invitation.invitation` - `authentik_stages_password.passwordstage` - `authentik_stages_prompt.prompt`\n- `authentik_stages_prompt.promptstage` - `authentik_stages_user_delete.userdeletestage` -\n`authentik_stages_user_login.userloginstage` - `authentik_stages_user_logout.userlogoutstage` -\n`authentik_stages_user_write.userwritestage` - `authentik_brands.brand` - `authentik_blueprints.blueprintinstance` -\n`authentik_core.group` - `authentik_core.user` - `authentik_core.application` - `authentik_core.token` -\n`authentik_enterprise.license` - `authentik_providers_google_workspace.googleworkspaceprovider` -\n`authentik_providers_google_workspace.googleworkspaceprovidermapping` -\n`authentik_providers_microsoft_entra.microsoftentraprovider` -\n`authentik_providers_microsoft_entra.microsoftentraprovidermapping` - `authentik_providers_rac.racprovider` -\n`authentik_providers_rac.endpoint` - `authentik_providers_rac.racpropertymapping` -\n`authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage` - `authentik_stages_source.sourcestage` -\n`authentik_events.event` - `authentik_events.notificationtransport` - `authentik_events.notification` -\n`authentik_events.notificationrule` - `authentik_events.notificationwebhookmapping`\n"
                },
                "objectId": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            },
            "required": [
                "permission",
                "role"
            ],
            "inputProperties": {
                "model": {
                    "type": "string",
                    "description": "Allowed values: - `authentik_tenants.domain` - `authentik_crypto.certificatekeypair` - `authentik_flows.flow` -\n`authentik_flows.flowstagebinding` - `authentik_outposts.dockerserviceconnection` -\n`authentik_outposts.kubernetesserviceconnection` - `authentik_outposts.outpost` - `authentik_policies_dummy.dummypolicy`\n- `authentik_policies_event_matcher.eventmatcherpolicy` - `authentik_policies_expiry.passwordexpirypolicy` -\n`authentik_policies_expression.expressionpolicy` - `authentik_policies_geoip.geoippolicy` -\n`authentik_policies_password.passwordpolicy` - `authentik_policies_reputation.reputationpolicy` -\n`authentik_policies.policybinding` - `authentik_providers_ldap.ldapprovider` - `authentik_providers_oauth2.scopemapping`\n- `authentik_providers_oauth2.oauth2provider` - `authentik_providers_proxy.proxyprovider` -\n`authentik_providers_radius.radiusprovider` - `authentik_providers_radius.radiusproviderpropertymapping` -\n`authentik_providers_saml.samlprovider` - `authentik_providers_saml.samlpropertymapping` -\n`authentik_providers_scim.scimprovider` - `authentik_providers_scim.scimmapping` - `authentik_rbac.role` -\n`authentik_sources_kerberos.kerberossource` - `authentik_sources_kerberos.kerberossourcepropertymapping` -\n`authentik_sources_kerberos.userkerberossourceconnection` - `authentik_sources_kerberos.groupkerberossourceconnection` -\n`authentik_sources_ldap.ldapsource` - `authentik_sources_ldap.ldapsourcepropertymapping` -\n`authentik_sources_oauth.oauthsource` - `authentik_sources_oauth.oauthsourcepropertymapping` -\n`authentik_sources_oauth.useroauthsourceconnection` - `authentik_sources_oauth.groupoauthsourceconnection` -\n`authentik_sources_plex.plexsource` - `authentik_sources_plex.plexsourcepropertymapping` -\n`authentik_sources_plex.userplexsourceconnection` - `authentik_sources_plex.groupplexsourceconnection` -\n`authentik_sources_saml.samlsource` - `authentik_sources_saml.samlsourcepropertymapping` -\n`authentik_sources_saml.usersamlsourceconnection` - `authentik_sources_saml.groupsamlsourceconnection` -\n`authentik_sources_scim.scimsource` - `authentik_sources_scim.scimsourcepropertymapping` -\n`authentik_stages_authenticator_duo.authenticatorduostage` - `authentik_stages_authenticator_duo.duodevice` -\n`authentik_stages_authenticator_sms.authenticatorsmsstage` - `authentik_stages_authenticator_sms.smsdevice` -\n`authentik_stages_authenticator_static.authenticatorstaticstage` - `authentik_stages_authenticator_static.staticdevice`\n- `authentik_stages_authenticator_totp.authenticatortotpstage` - `authentik_stages_authenticator_totp.totpdevice` -\n`authentik_stages_authenticator_validate.authenticatorvalidatestage` -\n`authentik_stages_authenticator_webauthn.authenticatorwebauthnstage` -\n`authentik_stages_authenticator_webauthn.webauthndevice` - `authentik_stages_captcha.captchastage` -\n`authentik_stages_consent.consentstage` - `authentik_stages_consent.userconsent` - `authentik_stages_deny.denystage` -\n`authentik_stages_dummy.dummystage` - `authentik_stages_email.emailstage` -\n`authentik_stages_identification.identificationstage` - `authentik_stages_invitation.invitationstage` -\n`authentik_stages_invitation.invitation` - `authentik_stages_password.passwordstage` - `authentik_stages_prompt.prompt`\n- `authentik_stages_prompt.promptstage` - `authentik_stages_user_delete.userdeletestage` -\n`authentik_stages_user_login.userloginstage` - `authentik_stages_user_logout.userlogoutstage` -\n`authentik_stages_user_write.userwritestage` - `authentik_brands.brand` - `authentik_blueprints.blueprintinstance` -\n`authentik_core.group` - `authentik_core.user` - `authentik_core.application` - `authentik_core.token` -\n`authentik_enterprise.license` - `authentik_providers_google_workspace.googleworkspaceprovider` -\n`authentik_providers_google_workspace.googleworkspaceprovidermapping` -\n`authentik_providers_microsoft_entra.microsoftentraprovider` -\n`authentik_providers_microsoft_entra.microsoftentraprovidermapping` - `authentik_providers_rac.racprovider` -\n`authentik_providers_rac.endpoint` - `authentik_providers_rac.racpropertymapping` -\n`authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage` - `authentik_stages_source.sourcestage` -\n`authentik_events.event` - `authentik_events.notificationtransport` - `authentik_events.notification` -\n`authentik_events.notificationrule` - `authentik_events.notificationwebhookmapping`\n",
                    "willReplaceOnChanges": true
                },
                "objectId": {
                    "type": "string"
                },
                "permission": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "permission",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RbacPermissionRole resources.\n",
                "properties": {
                    "model": {
                        "type": "string",
                        "description": "Allowed values: - `authentik_tenants.domain` - `authentik_crypto.certificatekeypair` - `authentik_flows.flow` -\n`authentik_flows.flowstagebinding` - `authentik_outposts.dockerserviceconnection` -\n`authentik_outposts.kubernetesserviceconnection` - `authentik_outposts.outpost` - `authentik_policies_dummy.dummypolicy`\n- `authentik_policies_event_matcher.eventmatcherpolicy` - `authentik_policies_expiry.passwordexpirypolicy` -\n`authentik_policies_expression.expressionpolicy` - `authentik_policies_geoip.geoippolicy` -\n`authentik_policies_password.passwordpolicy` - `authentik_policies_reputation.reputationpolicy` -\n`authentik_policies.policybinding` - `authentik_providers_ldap.ldapprovider` - `authentik_providers_oauth2.scopemapping`\n- `authentik_providers_oauth2.oauth2provider` - `authentik_providers_proxy.proxyprovider` -\n`authentik_providers_radius.radiusprovider` - `authentik_providers_radius.radiusproviderpropertymapping` -\n`authentik_providers_saml.samlprovider` - `authentik_providers_saml.samlpropertymapping` -\n`authentik_providers_scim.scimprovider` - `authentik_providers_scim.scimmapping` - `authentik_rbac.role` -\n`authentik_sources_kerberos.kerberossource` - `authentik_sources_kerberos.kerberossourcepropertymapping` -\n`authentik_sources_kerberos.userkerberossourceconnection` - `authentik_sources_kerberos.groupkerberossourceconnection` -\n`authentik_sources_ldap.ldapsource` - `authentik_sources_ldap.ldapsourcepropertymapping` -\n`authentik_sources_oauth.oauthsource` - `authentik_sources_oauth.oauthsourcepropertymapping` -\n`authentik_sources_oauth.useroauthsourceconnection` - `authentik_sources_oauth.groupoauthsourceconnection` -\n`authentik_sources_plex.plexsource` - `authentik_sources_plex.plexsourcepropertymapping` -\n`authentik_sources_plex.userplexsourceconnection` - `authentik_sources_plex.groupplexsourceconnection` -\n`authentik_sources_saml.samlsource` - `authentik_sources_saml.samlsourcepropertymapping` -\n`authentik_sources_saml.usersamlsourceconnection` - `authentik_sources_saml.groupsamlsourceconnection` -\n`authentik_sources_scim.scimsource` - `authentik_sources_scim.scimsourcepropertymapping` -\n`authentik_stages_authenticator_duo.authenticatorduostage` - `authentik_stages_authenticator_duo.duodevice` -\n`authentik_stages_authenticator_sms.authenticatorsmsstage` - `authentik_stages_authenticator_sms.smsdevice` -\n`authentik_stages_authenticator_static.authenticatorstaticstage` - `authentik_stages_authenticator_static.staticdevice`\n- `authentik_stages_authenticator_totp.authenticatortotpstage` - `authentik_stages_authenticator_totp.totpdevice` -\n`authentik_stages_authenticator_validate.authenticatorvalidatestage` -\n`authentik_stages_authenticator_webauthn.authenticatorwebauthnstage` -\n`authentik_stages_authenticator_webauthn.webauthndevice` - `authentik_stages_captcha.captchastage` -\n`authentik_stages_consent.consentstage` - `authentik_stages_consent.userconsent` - `authentik_stages_deny.denystage` -\n`authentik_stages_dummy.dummystage` - `authentik_stages_email.emailstage` -\n`authentik_stages_identification.identificationstage` - `authentik_stages_invitation.invitationstage` -\n`authentik_stages_invitation.invitation` - `authentik_stages_password.passwordstage` - `authentik_stages_prompt.prompt`\n- `authentik_stages_prompt.promptstage` - `authentik_stages_user_delete.userdeletestage` -\n`authentik_stages_user_login.userloginstage` - `authentik_stages_user_logout.userlogoutstage` -\n`authentik_stages_user_write.userwritestage` - `authentik_brands.brand` - `authentik_blueprints.blueprintinstance` -\n`authentik_core.group` - `authentik_core.user` - `authentik_core.application` - `authentik_core.token` -\n`authentik_enterprise.license` - `authentik_providers_google_workspace.googleworkspaceprovider` -\n`authentik_providers_google_workspace.googleworkspaceprovidermapping` -\n`authentik_providers_microsoft_entra.microsoftentraprovider` -\n`authentik_providers_microsoft_entra.microsoftentraprovidermapping` - `authentik_providers_rac.racprovider` -\n`authentik_providers_rac.endpoint` - `authentik_providers_rac.racpropertymapping` -\n`authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage` - `authentik_stages_source.sourcestage` -\n`authentik_events.event` - `authentik_events.notificationtransport` - `authentik_events.notification` -\n`authentik_events.notificationrule` - `authentik_events.notificationwebhookmapping`\n",
                        "willReplaceOnChanges": true
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/rbacPermissionUser:RbacPermissionUser": {
            "description": "## Example Usage\n\n",
            "properties": {
                "model": {
                    "type": "string",
                    "description": "Allowed values: - `authentik_tenants.domain` - `authentik_crypto.certificatekeypair` - `authentik_flows.flow` -\n`authentik_flows.flowstagebinding` - `authentik_outposts.dockerserviceconnection` -\n`authentik_outposts.kubernetesserviceconnection` - `authentik_outposts.outpost` - `authentik_policies_dummy.dummypolicy`\n- `authentik_policies_event_matcher.eventmatcherpolicy` - `authentik_policies_expiry.passwordexpirypolicy` -\n`authentik_policies_expression.expressionpolicy` - `authentik_policies_geoip.geoippolicy` -\n`authentik_policies_password.passwordpolicy` - `authentik_policies_reputation.reputationpolicy` -\n`authentik_policies.policybinding` - `authentik_providers_ldap.ldapprovider` - `authentik_providers_oauth2.scopemapping`\n- `authentik_providers_oauth2.oauth2provider` - `authentik_providers_proxy.proxyprovider` -\n`authentik_providers_radius.radiusprovider` - `authentik_providers_radius.radiusproviderpropertymapping` -\n`authentik_providers_saml.samlprovider` - `authentik_providers_saml.samlpropertymapping` -\n`authentik_providers_scim.scimprovider` - `authentik_providers_scim.scimmapping` - `authentik_rbac.role` -\n`authentik_sources_kerberos.kerberossource` - `authentik_sources_kerberos.kerberossourcepropertymapping` -\n`authentik_sources_kerberos.userkerberossourceconnection` - `authentik_sources_kerberos.groupkerberossourceconnection` -\n`authentik_sources_ldap.ldapsource` - `authentik_sources_ldap.ldapsourcepropertymapping` -\n`authentik_sources_oauth.oauthsource` - `authentik_sources_oauth.oauthsourcepropertymapping` -\n`authentik_sources_oauth.useroauthsourceconnection` - `authentik_sources_oauth.groupoauthsourceconnection` -\n`authentik_sources_plex.plexsource` - `authentik_sources_plex.plexsourcepropertymapping` -\n`authentik_sources_plex.userplexsourceconnection` - `authentik_sources_plex.groupplexsourceconnection` -\n`authentik_sources_saml.samlsource` - `authentik_sources_saml.samlsourcepropertymapping` -\n`authentik_sources_saml.usersamlsourceconnection` - `authentik_sources_saml.groupsamlsourceconnection` -\n`authentik_sources_scim.scimsource` - `authentik_sources_scim.scimsourcepropertymapping` -\n`authentik_stages_authenticator_duo.authenticatorduostage` - `authentik_stages_authenticator_duo.duodevice` -\n`authentik_stages_authenticator_sms.authenticatorsmsstage` - `authentik_stages_authenticator_sms.smsdevice` -\n`authentik_stages_authenticator_static.authenticatorstaticstage` - `authentik_stages_authenticator_static.staticdevice`\n- `authentik_stages_authenticator_totp.authenticatortotpstage` - `authentik_stages_authenticator_totp.totpdevice` -\n`authentik_stages_authenticator_validate.authenticatorvalidatestage` -\n`authentik_stages_authenticator_webauthn.authenticatorwebauthnstage` -\n`authentik_stages_authenticator_webauthn.webauthndevice` - `authentik_stages_captcha.captchastage` -\n`authentik_stages_consent.consentstage` - `authentik_stages_consent.userconsent` - `authentik_stages_deny.denystage` -\n`authentik_stages_dummy.dummystage` - `authentik_stages_email.emailstage` -\n`authentik_stages_identification.identificationstage` - `authentik_stages_invitation.invitationstage` -\n`authentik_stages_invitation.invitation` - `authentik_stages_password.passwordstage` - `authentik_stages_prompt.prompt`\n- `authentik_stages_prompt.promptstage` - `authentik_stages_user_delete.userdeletestage` -\n`authentik_stages_user_login.userloginstage` - `authentik_stages_user_logout.userlogoutstage` -\n`authentik_stages_user_write.userwritestage` - `authentik_brands.brand` - `authentik_blueprints.blueprintinstance` -\n`authentik_core.group` - `authentik_core.user` - `authentik_core.application` - `authentik_core.token` -\n`authentik_enterprise.license` - `authentik_providers_google_workspace.googleworkspaceprovider` -\n`authentik_providers_google_workspace.googleworkspaceprovidermapping` -\n`authentik_providers_microsoft_entra.microsoftentraprovider` -\n`authentik_providers_microsoft_entra.microsoftentraprovidermapping` - `authentik_providers_rac.racprovider` -\n`authentik_providers_rac.endpoint` - `authentik_providers_rac.racpropertymapping` -\n`authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage` - `authentik_stages_source.sourcestage` -\n`authentik_events.event` - `authentik_events.notificationtransport` - `authentik_events.notification` -\n`authentik_events.notificationrule` - `authentik_events.notificationwebhookmapping`\n"
                },
                "objectId": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "user": {
                    "type": "integer"
                }
            },
            "required": [
                "permission",
                "user"
            ],
            "inputProperties": {
                "model": {
                    "type": "string",
                    "description": "Allowed values: - `authentik_tenants.domain` - `authentik_crypto.certificatekeypair` - `authentik_flows.flow` -\n`authentik_flows.flowstagebinding` - `authentik_outposts.dockerserviceconnection` -\n`authentik_outposts.kubernetesserviceconnection` - `authentik_outposts.outpost` - `authentik_policies_dummy.dummypolicy`\n- `authentik_policies_event_matcher.eventmatcherpolicy` - `authentik_policies_expiry.passwordexpirypolicy` -\n`authentik_policies_expression.expressionpolicy` - `authentik_policies_geoip.geoippolicy` -\n`authentik_policies_password.passwordpolicy` - `authentik_policies_reputation.reputationpolicy` -\n`authentik_policies.policybinding` - `authentik_providers_ldap.ldapprovider` - `authentik_providers_oauth2.scopemapping`\n- `authentik_providers_oauth2.oauth2provider` - `authentik_providers_proxy.proxyprovider` -\n`authentik_providers_radius.radiusprovider` - `authentik_providers_radius.radiusproviderpropertymapping` -\n`authentik_providers_saml.samlprovider` - `authentik_providers_saml.samlpropertymapping` -\n`authentik_providers_scim.scimprovider` - `authentik_providers_scim.scimmapping` - `authentik_rbac.role` -\n`authentik_sources_kerberos.kerberossource` - `authentik_sources_kerberos.kerberossourcepropertymapping` -\n`authentik_sources_kerberos.userkerberossourceconnection` - `authentik_sources_kerberos.groupkerberossourceconnection` -\n`authentik_sources_ldap.ldapsource` - `authentik_sources_ldap.ldapsourcepropertymapping` -\n`authentik_sources_oauth.oauthsource` - `authentik_sources_oauth.oauthsourcepropertymapping` -\n`authentik_sources_oauth.useroauthsourceconnection` - `authentik_sources_oauth.groupoauthsourceconnection` -\n`authentik_sources_plex.plexsource` - `authentik_sources_plex.plexsourcepropertymapping` -\n`authentik_sources_plex.userplexsourceconnection` - `authentik_sources_plex.groupplexsourceconnection` -\n`authentik_sources_saml.samlsource` - `authentik_sources_saml.samlsourcepropertymapping` -\n`authentik_sources_saml.usersamlsourceconnection` - `authentik_sources_saml.groupsamlsourceconnection` -\n`authentik_sources_scim.scimsource` - `authentik_sources_scim.scimsourcepropertymapping` -\n`authentik_stages_authenticator_duo.authenticatorduostage` - `authentik_stages_authenticator_duo.duodevice` -\n`authentik_stages_authenticator_sms.authenticatorsmsstage` - `authentik_stages_authenticator_sms.smsdevice` -\n`authentik_stages_authenticator_static.authenticatorstaticstage` - `authentik_stages_authenticator_static.staticdevice`\n- `authentik_stages_authenticator_totp.authenticatortotpstage` - `authentik_stages_authenticator_totp.totpdevice` -\n`authentik_stages_authenticator_validate.authenticatorvalidatestage` -\n`authentik_stages_authenticator_webauthn.authenticatorwebauthnstage` -\n`authentik_stages_authenticator_webauthn.webauthndevice` - `authentik_stages_captcha.captchastage` -\n`authentik_stages_consent.consentstage` - `authentik_stages_consent.userconsent` - `authentik_stages_deny.denystage` -\n`authentik_stages_dummy.dummystage` - `authentik_stages_email.emailstage` -\n`authentik_stages_identification.identificationstage` - `authentik_stages_invitation.invitationstage` -\n`authentik_stages_invitation.invitation` - `authentik_stages_password.passwordstage` - `authentik_stages_prompt.prompt`\n- `authentik_stages_prompt.promptstage` - `authentik_stages_user_delete.userdeletestage` -\n`authentik_stages_user_login.userloginstage` - `authentik_stages_user_logout.userlogoutstage` -\n`authentik_stages_user_write.userwritestage` - `authentik_brands.brand` - `authentik_blueprints.blueprintinstance` -\n`authentik_core.group` - `authentik_core.user` - `authentik_core.application` - `authentik_core.token` -\n`authentik_enterprise.license` - `authentik_providers_google_workspace.googleworkspaceprovider` -\n`authentik_providers_google_workspace.googleworkspaceprovidermapping` -\n`authentik_providers_microsoft_entra.microsoftentraprovider` -\n`authentik_providers_microsoft_entra.microsoftentraprovidermapping` - `authentik_providers_rac.racprovider` -\n`authentik_providers_rac.endpoint` - `authentik_providers_rac.racpropertymapping` -\n`authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage` - `authentik_stages_source.sourcestage` -\n`authentik_events.event` - `authentik_events.notificationtransport` - `authentik_events.notification` -\n`authentik_events.notificationrule` - `authentik_events.notificationwebhookmapping`\n",
                    "willReplaceOnChanges": true
                },
                "objectId": {
                    "type": "string"
                },
                "permission": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "user": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "permission",
                "user"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RbacPermissionUser resources.\n",
                "properties": {
                    "model": {
                        "type": "string",
                        "description": "Allowed values: - `authentik_tenants.domain` - `authentik_crypto.certificatekeypair` - `authentik_flows.flow` -\n`authentik_flows.flowstagebinding` - `authentik_outposts.dockerserviceconnection` -\n`authentik_outposts.kubernetesserviceconnection` - `authentik_outposts.outpost` - `authentik_policies_dummy.dummypolicy`\n- `authentik_policies_event_matcher.eventmatcherpolicy` - `authentik_policies_expiry.passwordexpirypolicy` -\n`authentik_policies_expression.expressionpolicy` - `authentik_policies_geoip.geoippolicy` -\n`authentik_policies_password.passwordpolicy` - `authentik_policies_reputation.reputationpolicy` -\n`authentik_policies.policybinding` - `authentik_providers_ldap.ldapprovider` - `authentik_providers_oauth2.scopemapping`\n- `authentik_providers_oauth2.oauth2provider` - `authentik_providers_proxy.proxyprovider` -\n`authentik_providers_radius.radiusprovider` - `authentik_providers_radius.radiusproviderpropertymapping` -\n`authentik_providers_saml.samlprovider` - `authentik_providers_saml.samlpropertymapping` -\n`authentik_providers_scim.scimprovider` - `authentik_providers_scim.scimmapping` - `authentik_rbac.role` -\n`authentik_sources_kerberos.kerberossource` - `authentik_sources_kerberos.kerberossourcepropertymapping` -\n`authentik_sources_kerberos.userkerberossourceconnection` - `authentik_sources_kerberos.groupkerberossourceconnection` -\n`authentik_sources_ldap.ldapsource` - `authentik_sources_ldap.ldapsourcepropertymapping` -\n`authentik_sources_oauth.oauthsource` - `authentik_sources_oauth.oauthsourcepropertymapping` -\n`authentik_sources_oauth.useroauthsourceconnection` - `authentik_sources_oauth.groupoauthsourceconnection` -\n`authentik_sources_plex.plexsource` - `authentik_sources_plex.plexsourcepropertymapping` -\n`authentik_sources_plex.userplexsourceconnection` - `authentik_sources_plex.groupplexsourceconnection` -\n`authentik_sources_saml.samlsource` - `authentik_sources_saml.samlsourcepropertymapping` -\n`authentik_sources_saml.usersamlsourceconnection` - `authentik_sources_saml.groupsamlsourceconnection` -\n`authentik_sources_scim.scimsource` - `authentik_sources_scim.scimsourcepropertymapping` -\n`authentik_stages_authenticator_duo.authenticatorduostage` - `authentik_stages_authenticator_duo.duodevice` -\n`authentik_stages_authenticator_sms.authenticatorsmsstage` - `authentik_stages_authenticator_sms.smsdevice` -\n`authentik_stages_authenticator_static.authenticatorstaticstage` - `authentik_stages_authenticator_static.staticdevice`\n- `authentik_stages_authenticator_totp.authenticatortotpstage` - `authentik_stages_authenticator_totp.totpdevice` -\n`authentik_stages_authenticator_validate.authenticatorvalidatestage` -\n`authentik_stages_authenticator_webauthn.authenticatorwebauthnstage` -\n`authentik_stages_authenticator_webauthn.webauthndevice` - `authentik_stages_captcha.captchastage` -\n`authentik_stages_consent.consentstage` - `authentik_stages_consent.userconsent` - `authentik_stages_deny.denystage` -\n`authentik_stages_dummy.dummystage` - `authentik_stages_email.emailstage` -\n`authentik_stages_identification.identificationstage` - `authentik_stages_invitation.invitationstage` -\n`authentik_stages_invitation.invitation` - `authentik_stages_password.passwordstage` - `authentik_stages_prompt.prompt`\n- `authentik_stages_prompt.promptstage` - `authentik_stages_user_delete.userdeletestage` -\n`authentik_stages_user_login.userloginstage` - `authentik_stages_user_logout.userlogoutstage` -\n`authentik_stages_user_write.userwritestage` - `authentik_brands.brand` - `authentik_blueprints.blueprintinstance` -\n`authentik_core.group` - `authentik_core.user` - `authentik_core.application` - `authentik_core.token` -\n`authentik_enterprise.license` - `authentik_providers_google_workspace.googleworkspaceprovider` -\n`authentik_providers_google_workspace.googleworkspaceprovidermapping` -\n`authentik_providers_microsoft_entra.microsoftentraprovider` -\n`authentik_providers_microsoft_entra.microsoftentraprovidermapping` - `authentik_providers_rac.racprovider` -\n`authentik_providers_rac.endpoint` - `authentik_providers_rac.racpropertymapping` -\n`authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage` - `authentik_stages_source.sourcestage` -\n`authentik_events.event` - `authentik_events.notificationtransport` - `authentik_events.notification` -\n`authentik_events.notificationrule` - `authentik_events.notificationwebhookmapping`\n",
                        "willReplaceOnChanges": true
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "user": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/rbacRole:RbacRole": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RbacRole resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/scopeMapping:ScopeMapping": {
            "description": "Manage Scope Provider Property mappings\n\n\u003e This resource is deprecated. Migrate to `authentik.PropertyMappingProviderScope`.\n",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scopeName": {
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "name",
                "scopeName"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scopeName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "expression",
                "scopeName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScopeMapping resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "expression": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scopeName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/serviceConnectionDocker:ServiceConnectionDocker": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a local docker connection\nconst local = new authentik.ServiceConnectionDocker(\"local\", {\n    name: \"local\",\n    local: true,\n});\n// Create a remote docker connection\nconst tls_auth = new authentik.CertificateKeyPair(\"tls-auth\", {\n    name: \"docker-tls-auth\",\n    certificateData: \"...\",\n    keyData: \"...\",\n});\nconst tls_verification = new authentik.CertificateKeyPair(\"tls-verification\", {\n    name: \"docker-tls-verification\",\n    certificateData: \"...\",\n});\nconst remote_host = new authentik.ServiceConnectionDocker(\"remote-host\", {\n    name: \"remote-host\",\n    url: \"http://1.2.3.4:2368\",\n    tlsVerification: tls_auth.id,\n    tlsAuthentication: tls_verification.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a local docker connection\nlocal = authentik.ServiceConnectionDocker(\"local\",\n    name=\"local\",\n    local=True)\n# Create a remote docker connection\ntls_auth = authentik.CertificateKeyPair(\"tls-auth\",\n    name=\"docker-tls-auth\",\n    certificate_data=\"...\",\n    key_data=\"...\")\ntls_verification = authentik.CertificateKeyPair(\"tls-verification\",\n    name=\"docker-tls-verification\",\n    certificate_data=\"...\")\nremote_host = authentik.ServiceConnectionDocker(\"remote-host\",\n    name=\"remote-host\",\n    url=\"http://1.2.3.4:2368\",\n    tls_verification=tls_auth.id,\n    tls_authentication=tls_verification.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a local docker connection\n    var local = new Authentik.ServiceConnectionDocker(\"local\", new()\n    {\n        Name = \"local\",\n        Local = true,\n    });\n\n    // Create a remote docker connection\n    var tls_auth = new Authentik.CertificateKeyPair(\"tls-auth\", new()\n    {\n        Name = \"docker-tls-auth\",\n        CertificateData = \"...\",\n        KeyData = \"...\",\n    });\n\n    var tls_verification = new Authentik.CertificateKeyPair(\"tls-verification\", new()\n    {\n        Name = \"docker-tls-verification\",\n        CertificateData = \"...\",\n    });\n\n    var remote_host = new Authentik.ServiceConnectionDocker(\"remote-host\", new()\n    {\n        Name = \"remote-host\",\n        Url = \"http://1.2.3.4:2368\",\n        TlsVerification = tls_auth.Id,\n        TlsAuthentication = tls_verification.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a local docker connection\n\t\t_, err := authentik.NewServiceConnectionDocker(ctx, \"local\", \u0026authentik.ServiceConnectionDockerArgs{\n\t\t\tName:  pulumi.String(\"local\"),\n\t\t\tLocal: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a remote docker connection\n\t\t_, err = authentik.NewCertificateKeyPair(ctx, \"tls-auth\", \u0026authentik.CertificateKeyPairArgs{\n\t\t\tName:            pulumi.String(\"docker-tls-auth\"),\n\t\t\tCertificateData: pulumi.String(\"...\"),\n\t\t\tKeyData:         pulumi.String(\"...\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewCertificateKeyPair(ctx, \"tls-verification\", \u0026authentik.CertificateKeyPairArgs{\n\t\t\tName:            pulumi.String(\"docker-tls-verification\"),\n\t\t\tCertificateData: pulumi.String(\"...\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewServiceConnectionDocker(ctx, \"remote-host\", \u0026authentik.ServiceConnectionDockerArgs{\n\t\t\tName:              pulumi.String(\"remote-host\"),\n\t\t\tUrl:               pulumi.String(\"http://1.2.3.4:2368\"),\n\t\t\tTlsVerification:   tls_auth.ID(),\n\t\t\tTlsAuthentication: tls_verification.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.ServiceConnectionDocker;\nimport com.pulumi.authentik.ServiceConnectionDockerArgs;\nimport com.pulumi.authentik.CertificateKeyPair;\nimport com.pulumi.authentik.CertificateKeyPairArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a local docker connection\n        var local = new ServiceConnectionDocker(\"local\", ServiceConnectionDockerArgs.builder()\n            .name(\"local\")\n            .local(true)\n            .build());\n\n        // Create a remote docker connection\n        var tls_auth = new CertificateKeyPair(\"tls-auth\", CertificateKeyPairArgs.builder()\n            .name(\"docker-tls-auth\")\n            .certificateData(\"...\")\n            .keyData(\"...\")\n            .build());\n\n        var tls_verification = new CertificateKeyPair(\"tls-verification\", CertificateKeyPairArgs.builder()\n            .name(\"docker-tls-verification\")\n            .certificateData(\"...\")\n            .build());\n\n        var remote_host = new ServiceConnectionDocker(\"remote-host\", ServiceConnectionDockerArgs.builder()\n            .name(\"remote-host\")\n            .url(\"http://1.2.3.4:2368\")\n            .tlsVerification(tls_auth.id())\n            .tlsAuthentication(tls_verification.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a local docker connection\n  local:\n    type: authentik:ServiceConnectionDocker\n    properties:\n      name: local\n      local: true\n  # Create a remote docker connection\n  tls-auth:\n    type: authentik:CertificateKeyPair\n    properties:\n      name: docker-tls-auth\n      certificateData: '...'\n      keyData: '...'\n  tls-verification:\n    type: authentik:CertificateKeyPair\n    properties:\n      name: docker-tls-verification\n      certificateData: '...'\n  remote-host:\n    type: authentik:ServiceConnectionDocker\n    properties:\n      name: remote-host\n      url: http://1.2.3.4:2368\n      tlsVerification: ${[\"tls-auth\"].id}\n      tlsAuthentication: ${[\"tls-verification\"].id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "local": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "tlsAuthentication": {
                    "type": "string"
                },
                "tlsVerification": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "description": "Defaults to `http+unix:///var/run/docker.sock`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "local": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "tlsAuthentication": {
                    "type": "string"
                },
                "tlsVerification": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "description": "Defaults to `http+unix:///var/run/docker.sock`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceConnectionDocker resources.\n",
                "properties": {
                    "local": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tlsAuthentication": {
                        "type": "string"
                    },
                    "tlsVerification": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "description": "Defaults to `http+unix:///var/run/docker.sock`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/serviceConnectionKubernetes:ServiceConnectionKubernetes": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a local kubernetes connection\nconst local = new authentik.ServiceConnectionKubernetes(\"local\", {\n    name: \"local\",\n    local: true,\n});\n// Create a remote kubernetes connection\nconst remote_test_cluster = new authentik.ServiceConnectionKubernetes(\"remote-test-cluster\", {\n    name: \"test-cluster\",\n    kubeconfig: `kind: Config\nusers: [...]\n`,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a local kubernetes connection\nlocal = authentik.ServiceConnectionKubernetes(\"local\",\n    name=\"local\",\n    local=True)\n# Create a remote kubernetes connection\nremote_test_cluster = authentik.ServiceConnectionKubernetes(\"remote-test-cluster\",\n    name=\"test-cluster\",\n    kubeconfig=\"\"\"kind: Config\nusers: [...]\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a local kubernetes connection\n    var local = new Authentik.ServiceConnectionKubernetes(\"local\", new()\n    {\n        Name = \"local\",\n        Local = true,\n    });\n\n    // Create a remote kubernetes connection\n    var remote_test_cluster = new Authentik.ServiceConnectionKubernetes(\"remote-test-cluster\", new()\n    {\n        Name = \"test-cluster\",\n        Kubeconfig = @\"kind: Config\nusers: [...]\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a local kubernetes connection\n\t\t_, err := authentik.NewServiceConnectionKubernetes(ctx, \"local\", \u0026authentik.ServiceConnectionKubernetesArgs{\n\t\t\tName:  pulumi.String(\"local\"),\n\t\t\tLocal: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a remote kubernetes connection\n\t\t_, err = authentik.NewServiceConnectionKubernetes(ctx, \"remote-test-cluster\", \u0026authentik.ServiceConnectionKubernetesArgs{\n\t\t\tName:       pulumi.String(\"test-cluster\"),\n\t\t\tKubeconfig: pulumi.String(\"kind: Config\\nusers: [...]\\n\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.ServiceConnectionKubernetes;\nimport com.pulumi.authentik.ServiceConnectionKubernetesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a local kubernetes connection\n        var local = new ServiceConnectionKubernetes(\"local\", ServiceConnectionKubernetesArgs.builder()\n            .name(\"local\")\n            .local(true)\n            .build());\n\n        // Create a remote kubernetes connection\n        var remote_test_cluster = new ServiceConnectionKubernetes(\"remote-test-cluster\", ServiceConnectionKubernetesArgs.builder()\n            .name(\"test-cluster\")\n            .kubeconfig(\"\"\"\nkind: Config\nusers: [...]\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a local kubernetes connection\n  local:\n    type: authentik:ServiceConnectionKubernetes\n    properties:\n      name: local\n      local: true\n  # Create a remote kubernetes connection\n  remote-test-cluster:\n    type: authentik:ServiceConnectionKubernetes\n    properties:\n      name: test-cluster\n      kubeconfig: |\n        kind: Config\n        users: [...]\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "kubeconfig": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n",
                    "secret": true
                },
                "local": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "verifySsl": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "kubeconfig": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n",
                    "secret": true
                },
                "local": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                },
                "verifySsl": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceConnectionKubernetes resources.\n",
                "properties": {
                    "kubeconfig": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.\n",
                        "secret": true
                    },
                    "local": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "verifySsl": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/sourceKerberos:SourceKerberos": {
            "properties": {
                "authenticationFlow": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "groupMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `name_link` - `name_deny`\n"
                },
                "krb5Conf": {
                    "type": "string",
                    "description": "Custom krb5.conf to use. Uses the system one by default\n"
                },
                "name": {
                    "type": "string"
                },
                "passwordLoginUpdateInternalPassword": {
                    "type": "boolean",
                    "description": "If enabled, the authentik-stored password will be updated upon login with the Kerberos password backend\n"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "realm": {
                    "type": "string",
                    "description": "Kerberos realm\n"
                },
                "slug": {
                    "type": "string"
                },
                "spnegoCcache": {
                    "type": "string",
                    "description": "Credential cache to use for SPNEGO in form type:residual\n"
                },
                "spnegoKeytab": {
                    "type": "string",
                    "description": "SPNEGO keytab base64-encoded or path to keytab in the form FILE:path\n",
                    "secret": true
                },
                "spnegoServerName": {
                    "type": "string",
                    "description": "Force the use of a specific server name for SPNEGO\n"
                },
                "syncCcache": {
                    "type": "string",
                    "description": "Credentials cache to authenticate to kadmin for sync. Must be in the form TYPE:residual\n"
                },
                "syncKeytab": {
                    "type": "string",
                    "description": "Keytab to authenticate to kadmin for sync. Must be base64-encoded or in the form TYPE:residual\n",
                    "secret": true
                },
                "syncPassword": {
                    "type": "string",
                    "description": "Password to authenticate to kadmin for sync\n",
                    "secret": true
                },
                "syncPrincipal": {
                    "type": "string",
                    "description": "Principal to authenticate to kadmin for sync.\n"
                },
                "syncUsers": {
                    "type": "boolean",
                    "description": "Sync users from Kerberos into authentik\n"
                },
                "syncUsersPassword": {
                    "type": "boolean",
                    "description": "When a user changes their password, sync it back to Kerberos\n"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny`\n"
                },
                "userPathTemplate": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "realm",
                "slug",
                "uuid"
            ],
            "inputProperties": {
                "authenticationFlow": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "groupMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `name_link` - `name_deny`\n"
                },
                "krb5Conf": {
                    "type": "string",
                    "description": "Custom krb5.conf to use. Uses the system one by default\n"
                },
                "name": {
                    "type": "string"
                },
                "passwordLoginUpdateInternalPassword": {
                    "type": "boolean",
                    "description": "If enabled, the authentik-stored password will be updated upon login with the Kerberos password backend\n"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "realm": {
                    "type": "string",
                    "description": "Kerberos realm\n"
                },
                "slug": {
                    "type": "string"
                },
                "spnegoCcache": {
                    "type": "string",
                    "description": "Credential cache to use for SPNEGO in form type:residual\n"
                },
                "spnegoKeytab": {
                    "type": "string",
                    "description": "SPNEGO keytab base64-encoded or path to keytab in the form FILE:path\n",
                    "secret": true
                },
                "spnegoServerName": {
                    "type": "string",
                    "description": "Force the use of a specific server name for SPNEGO\n"
                },
                "syncCcache": {
                    "type": "string",
                    "description": "Credentials cache to authenticate to kadmin for sync. Must be in the form TYPE:residual\n"
                },
                "syncKeytab": {
                    "type": "string",
                    "description": "Keytab to authenticate to kadmin for sync. Must be base64-encoded or in the form TYPE:residual\n",
                    "secret": true
                },
                "syncPassword": {
                    "type": "string",
                    "description": "Password to authenticate to kadmin for sync\n",
                    "secret": true
                },
                "syncPrincipal": {
                    "type": "string",
                    "description": "Principal to authenticate to kadmin for sync.\n"
                },
                "syncUsers": {
                    "type": "boolean",
                    "description": "Sync users from Kerberos into authentik\n"
                },
                "syncUsersPassword": {
                    "type": "boolean",
                    "description": "When a user changes their password, sync it back to Kerberos\n"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny`\n"
                },
                "userPathTemplate": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "realm",
                "slug"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceKerberos resources.\n",
                "properties": {
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enrollmentFlow": {
                        "type": "string"
                    },
                    "groupMatchingMode": {
                        "type": "string",
                        "description": "Allowed values: - `identifier` - `name_link` - `name_deny`\n"
                    },
                    "krb5Conf": {
                        "type": "string",
                        "description": "Custom krb5.conf to use. Uses the system one by default\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passwordLoginUpdateInternalPassword": {
                        "type": "boolean",
                        "description": "If enabled, the authentik-stored password will be updated upon login with the Kerberos password backend\n"
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Allowed values: - `all` - `any`\n"
                    },
                    "realm": {
                        "type": "string",
                        "description": "Kerberos realm\n"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "spnegoCcache": {
                        "type": "string",
                        "description": "Credential cache to use for SPNEGO in form type:residual\n"
                    },
                    "spnegoKeytab": {
                        "type": "string",
                        "description": "SPNEGO keytab base64-encoded or path to keytab in the form FILE:path\n",
                        "secret": true
                    },
                    "spnegoServerName": {
                        "type": "string",
                        "description": "Force the use of a specific server name for SPNEGO\n"
                    },
                    "syncCcache": {
                        "type": "string",
                        "description": "Credentials cache to authenticate to kadmin for sync. Must be in the form TYPE:residual\n"
                    },
                    "syncKeytab": {
                        "type": "string",
                        "description": "Keytab to authenticate to kadmin for sync. Must be base64-encoded or in the form TYPE:residual\n",
                        "secret": true
                    },
                    "syncPassword": {
                        "type": "string",
                        "description": "Password to authenticate to kadmin for sync\n",
                        "secret": true
                    },
                    "syncPrincipal": {
                        "type": "string",
                        "description": "Principal to authenticate to kadmin for sync.\n"
                    },
                    "syncUsers": {
                        "type": "boolean",
                        "description": "Sync users from Kerberos into authentik\n"
                    },
                    "syncUsersPassword": {
                        "type": "boolean",
                        "description": "When a user changes their password, sync it back to Kerberos\n"
                    },
                    "userMatchingMode": {
                        "type": "string",
                        "description": "Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny`\n"
                    },
                    "userPathTemplate": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/sourceLdap:SourceLdap": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create LDAP Source\nconst name = new authentik.SourceLdap(\"name\", {\n    name: \"ldap-test\",\n    slug: \"ldap-test\",\n    serverUri: \"ldaps://1.2.3.4\",\n    bindCn: \"foo\",\n    bindPassword: \"bar\",\n    baseDn: \"dn=foo\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create LDAP Source\nname = authentik.SourceLdap(\"name\",\n    name=\"ldap-test\",\n    slug=\"ldap-test\",\n    server_uri=\"ldaps://1.2.3.4\",\n    bind_cn=\"foo\",\n    bind_password=\"bar\",\n    base_dn=\"dn=foo\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create LDAP Source\n    var name = new Authentik.SourceLdap(\"name\", new()\n    {\n        Name = \"ldap-test\",\n        Slug = \"ldap-test\",\n        ServerUri = \"ldaps://1.2.3.4\",\n        BindCn = \"foo\",\n        BindPassword = \"bar\",\n        BaseDn = \"dn=foo\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create LDAP Source\n\t\t_, err := authentik.NewSourceLdap(ctx, \"name\", \u0026authentik.SourceLdapArgs{\n\t\t\tName:         pulumi.String(\"ldap-test\"),\n\t\t\tSlug:         pulumi.String(\"ldap-test\"),\n\t\t\tServerUri:    pulumi.String(\"ldaps://1.2.3.4\"),\n\t\t\tBindCn:       pulumi.String(\"foo\"),\n\t\t\tBindPassword: pulumi.String(\"bar\"),\n\t\t\tBaseDn:       pulumi.String(\"dn=foo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.SourceLdap;\nimport com.pulumi.authentik.SourceLdapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create LDAP Source\n        var name = new SourceLdap(\"name\", SourceLdapArgs.builder()\n            .name(\"ldap-test\")\n            .slug(\"ldap-test\")\n            .serverUri(\"ldaps://1.2.3.4\")\n            .bindCn(\"foo\")\n            .bindPassword(\"bar\")\n            .baseDn(\"dn=foo\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create LDAP Source\n  name:\n    type: authentik:SourceLdap\n    properties:\n      name: ldap-test\n      slug: ldap-test\n      serverUri: ldaps://1.2.3.4\n      bindCn: foo\n      bindPassword: bar\n      baseDn: dn=foo\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "additionalGroupDn": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "additionalUserDn": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "baseDn": {
                    "type": "string"
                },
                "bindCn": {
                    "type": "string"
                },
                "bindPassword": {
                    "type": "string",
                    "secret": true
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "groupMembershipField": {
                    "type": "string",
                    "description": "Defaults to `member`.\n"
                },
                "groupObjectFilter": {
                    "type": "string",
                    "description": "Defaults to `(objectClass=group)`.\n"
                },
                "name": {
                    "type": "string"
                },
                "objectUniquenessField": {
                    "type": "string",
                    "description": "Defaults to `objectSid`.\n"
                },
                "passwordLoginUpdateInternalPassword": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyMappingsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serverUri": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "sni": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "startTls": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "syncGroups": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "syncParentGroup": {
                    "type": "string"
                },
                "syncUsers": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "syncUsersPassword": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "userObjectFilter": {
                    "type": "string",
                    "description": "Defaults to `(objectClass=person)`.\n"
                },
                "userPathTemplate": {
                    "type": "string",
                    "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "required": [
                "baseDn",
                "bindCn",
                "bindPassword",
                "name",
                "serverUri",
                "slug",
                "uuid"
            ],
            "inputProperties": {
                "additionalGroupDn": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "additionalUserDn": {
                    "type": "string",
                    "description": "Defaults to ``.\n"
                },
                "baseDn": {
                    "type": "string"
                },
                "bindCn": {
                    "type": "string"
                },
                "bindPassword": {
                    "type": "string",
                    "secret": true
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "groupMembershipField": {
                    "type": "string",
                    "description": "Defaults to `member`.\n"
                },
                "groupObjectFilter": {
                    "type": "string",
                    "description": "Defaults to `(objectClass=group)`.\n"
                },
                "name": {
                    "type": "string"
                },
                "objectUniquenessField": {
                    "type": "string",
                    "description": "Defaults to `objectSid`.\n"
                },
                "passwordLoginUpdateInternalPassword": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "propertyMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyMappingsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serverUri": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "sni": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "startTls": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "syncGroups": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "syncParentGroup": {
                    "type": "string"
                },
                "syncUsers": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "syncUsersPassword": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "userObjectFilter": {
                    "type": "string",
                    "description": "Defaults to `(objectClass=person)`.\n"
                },
                "userPathTemplate": {
                    "type": "string",
                    "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Generated.\n"
                }
            },
            "requiredInputs": [
                "baseDn",
                "bindCn",
                "bindPassword",
                "serverUri",
                "slug"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLdap resources.\n",
                "properties": {
                    "additionalGroupDn": {
                        "type": "string",
                        "description": "Defaults to ``.\n"
                    },
                    "additionalUserDn": {
                        "type": "string",
                        "description": "Defaults to ``.\n"
                    },
                    "baseDn": {
                        "type": "string"
                    },
                    "bindCn": {
                        "type": "string"
                    },
                    "bindPassword": {
                        "type": "string",
                        "secret": true
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "groupMembershipField": {
                        "type": "string",
                        "description": "Defaults to `member`.\n"
                    },
                    "groupObjectFilter": {
                        "type": "string",
                        "description": "Defaults to `(objectClass=group)`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectUniquenessField": {
                        "type": "string",
                        "description": "Defaults to `objectSid`.\n"
                    },
                    "passwordLoginUpdateInternalPassword": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "propertyMappings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "propertyMappingsGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serverUri": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "sni": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "startTls": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "syncGroups": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "syncParentGroup": {
                        "type": "string"
                    },
                    "syncUsers": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "syncUsersPassword": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "userObjectFilter": {
                        "type": "string",
                        "description": "Defaults to `(objectClass=person)`.\n"
                    },
                    "userPathTemplate": {
                        "type": "string",
                        "description": "Defaults to `goauthentik.io/sources/%(slug)s`.\n"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/sourceOauth:SourceOauth": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// Create OAuth Source using an existing provider\nconst default-source-authentication = authentik.getFlow({\n    slug: \"default-source-authentication\",\n});\nconst default-source-enrollment = authentik.getFlow({\n    slug: \"default-source-enrollment\",\n});\nconst name = new authentik.SourceOauth(\"name\", {\n    name: \"discord\",\n    slug: \"discord\",\n    authenticationFlow: default_source_authentication.then(default_source_authentication =\u003e default_source_authentication.id),\n    enrollmentFlow: default_source_enrollment.then(default_source_enrollment =\u003e default_source_enrollment.id),\n    providerType: \"discord\",\n    consumerKey: \"foo\",\n    consumerSecret: \"bar\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\n# Create OAuth Source using an existing provider\ndefault_source_authentication = authentik.get_flow(slug=\"default-source-authentication\")\ndefault_source_enrollment = authentik.get_flow(slug=\"default-source-enrollment\")\nname = authentik.SourceOauth(\"name\",\n    name=\"discord\",\n    slug=\"discord\",\n    authentication_flow=default_source_authentication.id,\n    enrollment_flow=default_source_enrollment.id,\n    provider_type=\"discord\",\n    consumer_key=\"foo\",\n    consumer_secret=\"bar\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create OAuth Source using an existing provider\n    var default_source_authentication = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-source-authentication\",\n    });\n\n    var default_source_enrollment = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-source-enrollment\",\n    });\n\n    var name = new Authentik.SourceOauth(\"name\", new()\n    {\n        Name = \"discord\",\n        Slug = \"discord\",\n        AuthenticationFlow = default_source_authentication.Apply(default_source_authentication =\u003e default_source_authentication.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        EnrollmentFlow = default_source_enrollment.Apply(default_source_enrollment =\u003e default_source_enrollment.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        ProviderType = \"discord\",\n        ConsumerKey = \"foo\",\n        ConsumerSecret = \"bar\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create OAuth Source using an existing provider\n\t\tdefault_source_authentication, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-source-authentication\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdefault_source_enrollment, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-source-enrollment\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewSourceOauth(ctx, \"name\", \u0026authentik.SourceOauthArgs{\n\t\t\tName:               pulumi.String(\"discord\"),\n\t\t\tSlug:               pulumi.String(\"discord\"),\n\t\t\tAuthenticationFlow: pulumi.String(default_source_authentication.Id),\n\t\t\tEnrollmentFlow:     pulumi.String(default_source_enrollment.Id),\n\t\t\tProviderType:       pulumi.String(\"discord\"),\n\t\t\tConsumerKey:        pulumi.String(\"foo\"),\n\t\t\tConsumerSecret:     pulumi.String(\"bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.SourceOauth;\nimport com.pulumi.authentik.SourceOauthArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create OAuth Source using an existing provider\n        final var default-source-authentication = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-source-authentication\")\n            .build());\n\n        final var default-source-enrollment = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-source-enrollment\")\n            .build());\n\n        var name = new SourceOauth(\"name\", SourceOauthArgs.builder()\n            .name(\"discord\")\n            .slug(\"discord\")\n            .authenticationFlow(default_source_authentication.id())\n            .enrollmentFlow(default_source_enrollment.id())\n            .providerType(\"discord\")\n            .consumerKey(\"foo\")\n            .consumerSecret(\"bar\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:SourceOauth\n    properties:\n      name: discord\n      slug: discord\n      authenticationFlow: ${[\"default-source-authentication\"].id}\n      enrollmentFlow: ${[\"default-source-enrollment\"].id}\n      providerType: discord\n      consumerKey: foo\n      consumerSecret: bar\nvariables:\n  # Create OAuth Source using an existing provider\n  default-source-authentication:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-source-authentication\n  default-source-enrollment:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-source-enrollment\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "accessTokenUrl": {
                    "type": "string",
                    "description": "Only required for OAuth1.\n"
                },
                "additionalScopes": {
                    "type": "string"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                },
                "callbackUri": {
                    "type": "string"
                },
                "consumerKey": {
                    "type": "string"
                },
                "consumerSecret": {
                    "type": "string",
                    "secret": true
                },
                "enabled": {
                    "type": "boolean"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "groupMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `name_link` - `name_deny`\n"
                },
                "name": {
                    "type": "string"
                },
                "oidcJwks": {
                    "type": "string",
                    "description": "Manually configure JWKS keys for use with machine-to-machine authentication. JSON format expected. Use jsonencode() to\npass objects.\n"
                },
                "oidcJwksUrl": {
                    "type": "string",
                    "description": "Automatically configure JWKS if not specified by `oidc_well_known_url`.\n"
                },
                "oidcWellKnownUrl": {
                    "type": "string",
                    "description": "Automatically configure source from OIDC well-known endpoint. URL is taken as is, and should end with\n`.well-known/openid-configuration`.\n"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "profileUrl": {
                    "type": "string",
                    "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                },
                "providerType": {
                    "type": "string",
                    "description": "Allowed values: - `apple` - `openidconnect` - `azuread` - `discord` - `facebook` - `github` - `gitlab` - `google` -\n`mailcow` - `okta` - `patreon` - `reddit` - `twitch` - `twitter`\n"
                },
                "requestTokenUrl": {
                    "type": "string",
                    "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                },
                "slug": {
                    "type": "string"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny`\n"
                },
                "userPathTemplate": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "required": [
                "callbackUri",
                "consumerKey",
                "consumerSecret",
                "name",
                "oidcJwks",
                "providerType",
                "slug",
                "uuid"
            ],
            "inputProperties": {
                "accessTokenUrl": {
                    "type": "string",
                    "description": "Only required for OAuth1.\n"
                },
                "additionalScopes": {
                    "type": "string"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                },
                "consumerKey": {
                    "type": "string"
                },
                "consumerSecret": {
                    "type": "string",
                    "secret": true
                },
                "enabled": {
                    "type": "boolean"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "groupMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `name_link` - `name_deny`\n"
                },
                "name": {
                    "type": "string"
                },
                "oidcJwks": {
                    "type": "string",
                    "description": "Manually configure JWKS keys for use with machine-to-machine authentication. JSON format expected. Use jsonencode() to\npass objects.\n"
                },
                "oidcJwksUrl": {
                    "type": "string",
                    "description": "Automatically configure JWKS if not specified by `oidc_well_known_url`.\n"
                },
                "oidcWellKnownUrl": {
                    "type": "string",
                    "description": "Automatically configure source from OIDC well-known endpoint. URL is taken as is, and should end with\n`.well-known/openid-configuration`.\n"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "profileUrl": {
                    "type": "string",
                    "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                },
                "providerType": {
                    "type": "string",
                    "description": "Allowed values: - `apple` - `openidconnect` - `azuread` - `discord` - `facebook` - `github` - `gitlab` - `google` -\n`mailcow` - `okta` - `patreon` - `reddit` - `twitch` - `twitter`\n"
                },
                "requestTokenUrl": {
                    "type": "string",
                    "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                },
                "slug": {
                    "type": "string"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny`\n"
                },
                "userPathTemplate": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "consumerKey",
                "consumerSecret",
                "providerType",
                "slug"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOauth resources.\n",
                "properties": {
                    "accessTokenUrl": {
                        "type": "string",
                        "description": "Only required for OAuth1.\n"
                    },
                    "additionalScopes": {
                        "type": "string"
                    },
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "authorizationUrl": {
                        "type": "string",
                        "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                    },
                    "callbackUri": {
                        "type": "string"
                    },
                    "consumerKey": {
                        "type": "string"
                    },
                    "consumerSecret": {
                        "type": "string",
                        "secret": true
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enrollmentFlow": {
                        "type": "string"
                    },
                    "groupMatchingMode": {
                        "type": "string",
                        "description": "Allowed values: - `identifier` - `name_link` - `name_deny`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "oidcJwks": {
                        "type": "string",
                        "description": "Manually configure JWKS keys for use with machine-to-machine authentication. JSON format expected. Use jsonencode() to\npass objects.\n"
                    },
                    "oidcJwksUrl": {
                        "type": "string",
                        "description": "Automatically configure JWKS if not specified by `oidc_well_known_url`.\n"
                    },
                    "oidcWellKnownUrl": {
                        "type": "string",
                        "description": "Automatically configure source from OIDC well-known endpoint. URL is taken as is, and should end with\n`.well-known/openid-configuration`.\n"
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Allowed values: - `all` - `any`\n"
                    },
                    "profileUrl": {
                        "type": "string",
                        "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                    },
                    "providerType": {
                        "type": "string",
                        "description": "Allowed values: - `apple` - `openidconnect` - `azuread` - `discord` - `facebook` - `github` - `gitlab` - `google` -\n`mailcow` - `okta` - `patreon` - `reddit` - `twitch` - `twitter`\n"
                    },
                    "requestTokenUrl": {
                        "type": "string",
                        "description": "Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.\n"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "userMatchingMode": {
                        "type": "string",
                        "description": "Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny`\n"
                    },
                    "userPathTemplate": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/sourcePlex:SourcePlex": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// Create a plex source\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst name = new authentik.SourcePlex(\"name\", {\n    name: \"plex\",\n    slug: \"plex\",\n    authenticationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    enrollmentFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    clientId: \"foo-bar-baz\",\n    plexToken: \"foo\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\n# Create a plex source\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nname = authentik.SourcePlex(\"name\",\n    name=\"plex\",\n    slug=\"plex\",\n    authentication_flow=default_authorization_flow.id,\n    enrollment_flow=default_authorization_flow.id,\n    client_id=\"foo-bar-baz\",\n    plex_token=\"foo\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a plex source\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var name = new Authentik.SourcePlex(\"name\", new()\n    {\n        Name = \"plex\",\n        Slug = \"plex\",\n        AuthenticationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        EnrollmentFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        ClientId = \"foo-bar-baz\",\n        PlexToken = \"foo\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a plex source\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewSourcePlex(ctx, \"name\", \u0026authentik.SourcePlexArgs{\n\t\t\tName:               pulumi.String(\"plex\"),\n\t\t\tSlug:               pulumi.String(\"plex\"),\n\t\t\tAuthenticationFlow: pulumi.String(default_authorization_flow.Id),\n\t\t\tEnrollmentFlow:     pulumi.String(default_authorization_flow.Id),\n\t\t\tClientId:           pulumi.String(\"foo-bar-baz\"),\n\t\t\tPlexToken:          pulumi.String(\"foo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.SourcePlex;\nimport com.pulumi.authentik.SourcePlexArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a plex source\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var name = new SourcePlex(\"name\", SourcePlexArgs.builder()\n            .name(\"plex\")\n            .slug(\"plex\")\n            .authenticationFlow(default_authorization_flow.id())\n            .enrollmentFlow(default_authorization_flow.id())\n            .clientId(\"foo-bar-baz\")\n            .plexToken(\"foo\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:SourcePlex\n    properties:\n      name: plex\n      slug: plex\n      authenticationFlow: ${[\"default-authorization-flow\"].id}\n      enrollmentFlow: ${[\"default-authorization-flow\"].id}\n      clientId: foo-bar-baz\n      plexToken: foo\nvariables:\n  # Create a plex source\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "allowFriends": {
                    "type": "boolean"
                },
                "allowedServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "groupMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `name_link` - `name_deny`\n"
                },
                "name": {
                    "type": "string"
                },
                "plexToken": {
                    "type": "string",
                    "secret": true
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "slug": {
                    "type": "string"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny`\n"
                },
                "userPathTemplate": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "required": [
                "clientId",
                "name",
                "plexToken",
                "slug",
                "uuid"
            ],
            "inputProperties": {
                "allowFriends": {
                    "type": "boolean"
                },
                "allowedServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "groupMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `name_link` - `name_deny`\n"
                },
                "name": {
                    "type": "string"
                },
                "plexToken": {
                    "type": "string",
                    "secret": true
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "slug": {
                    "type": "string"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny`\n"
                },
                "userPathTemplate": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "clientId",
                "plexToken",
                "slug"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePlex resources.\n",
                "properties": {
                    "allowFriends": {
                        "type": "boolean"
                    },
                    "allowedServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enrollmentFlow": {
                        "type": "string"
                    },
                    "groupMatchingMode": {
                        "type": "string",
                        "description": "Allowed values: - `identifier` - `name_link` - `name_deny`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "plexToken": {
                        "type": "string",
                        "secret": true
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Allowed values: - `all` - `any`\n"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "userMatchingMode": {
                        "type": "string",
                        "description": "Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny`\n"
                    },
                    "userPathTemplate": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/sourceSaml:SourceSaml": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// Create a SAML Source\nconst default-source-pre-authentication = authentik.getFlow({\n    slug: \"default-source-pre-authentication\",\n});\nconst default-source-authentication = authentik.getFlow({\n    slug: \"default-source-authentication\",\n});\nconst default-source-enrollment = authentik.getFlow({\n    slug: \"default-source-enrollment\",\n});\nconst name = new authentik.SourceSaml(\"name\", {\n    name: \"test-source\",\n    slug: \"test-source\",\n    authenticationFlow: default_source_authentication.then(default_source_authentication =\u003e default_source_authentication.id),\n    enrollmentFlow: default_source_enrollment.then(default_source_enrollment =\u003e default_source_enrollment.id),\n    preAuthenticationFlow: default_source_pre_authentication.then(default_source_pre_authentication =\u003e default_source_pre_authentication.id),\n    ssoUrl: \"http://localhost\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\n# Create a SAML Source\ndefault_source_pre_authentication = authentik.get_flow(slug=\"default-source-pre-authentication\")\ndefault_source_authentication = authentik.get_flow(slug=\"default-source-authentication\")\ndefault_source_enrollment = authentik.get_flow(slug=\"default-source-enrollment\")\nname = authentik.SourceSaml(\"name\",\n    name=\"test-source\",\n    slug=\"test-source\",\n    authentication_flow=default_source_authentication.id,\n    enrollment_flow=default_source_enrollment.id,\n    pre_authentication_flow=default_source_pre_authentication.id,\n    sso_url=\"http://localhost\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a SAML Source\n    var default_source_pre_authentication = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-source-pre-authentication\",\n    });\n\n    var default_source_authentication = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-source-authentication\",\n    });\n\n    var default_source_enrollment = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-source-enrollment\",\n    });\n\n    var name = new Authentik.SourceSaml(\"name\", new()\n    {\n        Name = \"test-source\",\n        Slug = \"test-source\",\n        AuthenticationFlow = default_source_authentication.Apply(default_source_authentication =\u003e default_source_authentication.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        EnrollmentFlow = default_source_enrollment.Apply(default_source_enrollment =\u003e default_source_enrollment.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        PreAuthenticationFlow = default_source_pre_authentication.Apply(default_source_pre_authentication =\u003e default_source_pre_authentication.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        SsoUrl = \"http://localhost\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a SAML Source\n\t\tdefault_source_pre_authentication, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-source-pre-authentication\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdefault_source_authentication, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-source-authentication\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdefault_source_enrollment, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-source-enrollment\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewSourceSaml(ctx, \"name\", \u0026authentik.SourceSamlArgs{\n\t\t\tName:                  pulumi.String(\"test-source\"),\n\t\t\tSlug:                  pulumi.String(\"test-source\"),\n\t\t\tAuthenticationFlow:    pulumi.String(default_source_authentication.Id),\n\t\t\tEnrollmentFlow:        pulumi.String(default_source_enrollment.Id),\n\t\t\tPreAuthenticationFlow: pulumi.String(default_source_pre_authentication.Id),\n\t\t\tSsoUrl:                pulumi.String(\"http://localhost\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.SourceSaml;\nimport com.pulumi.authentik.SourceSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a SAML Source\n        final var default-source-pre-authentication = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-source-pre-authentication\")\n            .build());\n\n        final var default-source-authentication = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-source-authentication\")\n            .build());\n\n        final var default-source-enrollment = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-source-enrollment\")\n            .build());\n\n        var name = new SourceSaml(\"name\", SourceSamlArgs.builder()\n            .name(\"test-source\")\n            .slug(\"test-source\")\n            .authenticationFlow(default_source_authentication.id())\n            .enrollmentFlow(default_source_enrollment.id())\n            .preAuthenticationFlow(default_source_pre_authentication.id())\n            .ssoUrl(\"http://localhost\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:SourceSaml\n    properties:\n      name: test-source\n      slug: test-source\n      authenticationFlow: ${[\"default-source-authentication\"].id}\n      enrollmentFlow: ${[\"default-source-enrollment\"].id}\n      preAuthenticationFlow: ${[\"default-source-pre-authentication\"].id}\n      ssoUrl: http://localhost\nvariables:\n  # Create a SAML Source\n  default-source-pre-authentication:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-source-pre-authentication\n  default-source-authentication:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-source-authentication\n  default-source-enrollment:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-source-enrollment\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "allowIdpInitiated": {
                    "type": "boolean"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "bindingType": {
                    "type": "string",
                    "description": "Allowed values: - `REDIRECT` - `POST` - `POST_AUTO`\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512`\n"
                },
                "enabled": {
                    "type": "boolean"
                },
                "encryptionKp": {
                    "type": "string"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "groupMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `name_link` - `name_deny`\n"
                },
                "issuer": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string",
                    "description": "SAML Metadata\n"
                },
                "name": {
                    "type": "string"
                },
                "nameIdPolicy": {
                    "type": "string",
                    "description": "Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -\n`urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -\n`urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -\n`urn:oasis:names:tc:SAML:2.0:nameid-format:transient`\n"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "preAuthenticationFlow": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -\n`http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -\n`http://www.w3.org/2000/09/xmldsig#dsa-sha1`\n"
                },
                "signingKp": {
                    "type": "string"
                },
                "sloUrl": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "ssoUrl": {
                    "type": "string"
                },
                "temporaryUserDeleteAfter": {
                    "type": "string"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny`\n"
                },
                "userPathTemplate": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "required": [
                "metadata",
                "name",
                "preAuthenticationFlow",
                "slug",
                "ssoUrl",
                "uuid"
            ],
            "inputProperties": {
                "allowIdpInitiated": {
                    "type": "boolean"
                },
                "authenticationFlow": {
                    "type": "string"
                },
                "bindingType": {
                    "type": "string",
                    "description": "Allowed values: - `REDIRECT` - `POST` - `POST_AUTO`\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512`\n"
                },
                "enabled": {
                    "type": "boolean"
                },
                "encryptionKp": {
                    "type": "string"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "groupMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `name_link` - `name_deny`\n"
                },
                "issuer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nameIdPolicy": {
                    "type": "string",
                    "description": "Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -\n`urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -\n`urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -\n`urn:oasis:names:tc:SAML:2.0:nameid-format:transient`\n"
                },
                "policyEngineMode": {
                    "type": "string",
                    "description": "Allowed values: - `all` - `any`\n"
                },
                "preAuthenticationFlow": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -\n`http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -\n`http://www.w3.org/2000/09/xmldsig#dsa-sha1`\n"
                },
                "signingKp": {
                    "type": "string"
                },
                "sloUrl": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "ssoUrl": {
                    "type": "string"
                },
                "temporaryUserDeleteAfter": {
                    "type": "string"
                },
                "userMatchingMode": {
                    "type": "string",
                    "description": "Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny`\n"
                },
                "userPathTemplate": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "preAuthenticationFlow",
                "slug",
                "ssoUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSaml resources.\n",
                "properties": {
                    "allowIdpInitiated": {
                        "type": "boolean"
                    },
                    "authenticationFlow": {
                        "type": "string"
                    },
                    "bindingType": {
                        "type": "string",
                        "description": "Allowed values: - `REDIRECT` - `POST` - `POST_AUTO`\n"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512`\n"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "encryptionKp": {
                        "type": "string"
                    },
                    "enrollmentFlow": {
                        "type": "string"
                    },
                    "groupMatchingMode": {
                        "type": "string",
                        "description": "Allowed values: - `identifier` - `name_link` - `name_deny`\n"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "string",
                        "description": "SAML Metadata\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameIdPolicy": {
                        "type": "string",
                        "description": "Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -\n`urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -\n`urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -\n`urn:oasis:names:tc:SAML:2.0:nameid-format:transient`\n"
                    },
                    "policyEngineMode": {
                        "type": "string",
                        "description": "Allowed values: - `all` - `any`\n"
                    },
                    "preAuthenticationFlow": {
                        "type": "string"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -\n`http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -\n`http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -\n`http://www.w3.org/2000/09/xmldsig#dsa-sha1`\n"
                    },
                    "signingKp": {
                        "type": "string"
                    },
                    "sloUrl": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "ssoUrl": {
                        "type": "string"
                    },
                    "temporaryUserDeleteAfter": {
                        "type": "string"
                    },
                    "userMatchingMode": {
                        "type": "string",
                        "description": "Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny`\n"
                    },
                    "userPathTemplate": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorDuo:StageAuthenticatorDuo": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a duo setup stage\nconst name = new authentik.StageAuthenticatorDuo(\"name\", {\n    name: \"duo-setup\",\n    clientId: \"foo\",\n    clientSecret: \"bar\",\n    apiHostname: \"http://foo.bar.baz\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a duo setup stage\nname = authentik.StageAuthenticatorDuo(\"name\",\n    name=\"duo-setup\",\n    client_id=\"foo\",\n    client_secret=\"bar\",\n    api_hostname=\"http://foo.bar.baz\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a duo setup stage\n    var name = new Authentik.StageAuthenticatorDuo(\"name\", new()\n    {\n        Name = \"duo-setup\",\n        ClientId = \"foo\",\n        ClientSecret = \"bar\",\n        ApiHostname = \"http://foo.bar.baz\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a duo setup stage\n\t\t_, err := authentik.NewStageAuthenticatorDuo(ctx, \"name\", \u0026authentik.StageAuthenticatorDuoArgs{\n\t\t\tName:         pulumi.String(\"duo-setup\"),\n\t\t\tClientId:     pulumi.String(\"foo\"),\n\t\t\tClientSecret: pulumi.String(\"bar\"),\n\t\t\tApiHostname:  pulumi.String(\"http://foo.bar.baz\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageAuthenticatorDuo;\nimport com.pulumi.authentik.StageAuthenticatorDuoArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a duo setup stage\n        var name = new StageAuthenticatorDuo(\"name\", StageAuthenticatorDuoArgs.builder()\n            .name(\"duo-setup\")\n            .clientId(\"foo\")\n            .clientSecret(\"bar\")\n            .apiHostname(\"http://foo.bar.baz\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a duo setup stage\n  name:\n    type: authentik:StageAuthenticatorDuo\n    properties:\n      name: duo-setup\n      clientId: foo\n      clientSecret: bar\n      apiHostname: http://foo.bar.baz\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "adminIntegrationKey": {
                    "type": "string"
                },
                "adminSecretKey": {
                    "type": "string",
                    "secret": true
                },
                "apiHostname": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "apiHostname",
                "clientId",
                "clientSecret",
                "name"
            ],
            "inputProperties": {
                "adminIntegrationKey": {
                    "type": "string"
                },
                "adminSecretKey": {
                    "type": "string",
                    "secret": true
                },
                "apiHostname": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "apiHostname",
                "clientId",
                "clientSecret"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorDuo resources.\n",
                "properties": {
                    "adminIntegrationKey": {
                        "type": "string"
                    },
                    "adminSecretKey": {
                        "type": "string",
                        "secret": true
                    },
                    "apiHostname": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "clientSecret": {
                        "type": "string",
                        "secret": true
                    },
                    "configureFlow": {
                        "type": "string"
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorEndpointGdtc:StageAuthenticatorEndpointGdtc": {
            "properties": {
                "configureFlow": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string",
                    "secret": true
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "credentials",
                "name"
            ],
            "inputProperties": {
                "configureFlow": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string",
                    "secret": true
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "credentials"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorEndpointGdtc resources.\n",
                "properties": {
                    "configureFlow": {
                        "type": "string"
                    },
                    "credentials": {
                        "type": "string",
                        "secret": true
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorSms:StageAuthenticatorSms": {
            "properties": {
                "accountSid": {
                    "type": "string",
                    "secret": true
                },
                "auth": {
                    "type": "string",
                    "secret": true
                },
                "authPassword": {
                    "type": "string",
                    "secret": true
                },
                "authType": {
                    "type": "string",
                    "description": "Allowed values: - `basic` - `bearer`\n"
                },
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "fromNumber": {
                    "type": "string"
                },
                "mapping": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "smsProvider": {
                    "type": "string",
                    "description": "Allowed values: - `twilio` - `generic`\n"
                },
                "verifyOnly": {
                    "type": "boolean"
                }
            },
            "required": [
                "accountSid",
                "auth",
                "fromNumber",
                "name"
            ],
            "inputProperties": {
                "accountSid": {
                    "type": "string",
                    "secret": true
                },
                "auth": {
                    "type": "string",
                    "secret": true
                },
                "authPassword": {
                    "type": "string",
                    "secret": true
                },
                "authType": {
                    "type": "string",
                    "description": "Allowed values: - `basic` - `bearer`\n"
                },
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "fromNumber": {
                    "type": "string"
                },
                "mapping": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "smsProvider": {
                    "type": "string",
                    "description": "Allowed values: - `twilio` - `generic`\n"
                },
                "verifyOnly": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "accountSid",
                "auth",
                "fromNumber"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorSms resources.\n",
                "properties": {
                    "accountSid": {
                        "type": "string",
                        "secret": true
                    },
                    "auth": {
                        "type": "string",
                        "secret": true
                    },
                    "authPassword": {
                        "type": "string",
                        "secret": true
                    },
                    "authType": {
                        "type": "string",
                        "description": "Allowed values: - `basic` - `bearer`\n"
                    },
                    "configureFlow": {
                        "type": "string"
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "fromNumber": {
                        "type": "string"
                    },
                    "mapping": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "smsProvider": {
                        "type": "string",
                        "description": "Allowed values: - `twilio` - `generic`\n"
                    },
                    "verifyOnly": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorStatic:StageAuthenticatorStatic": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a static TOTP Setup stage\nconst name = new authentik.StageAuthenticatorStatic(\"name\", {name: \"static-totp-setup\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a static TOTP Setup stage\nname = authentik.StageAuthenticatorStatic(\"name\", name=\"static-totp-setup\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a static TOTP Setup stage\n    var name = new Authentik.StageAuthenticatorStatic(\"name\", new()\n    {\n        Name = \"static-totp-setup\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a static TOTP Setup stage\n\t\t_, err := authentik.NewStageAuthenticatorStatic(ctx, \"name\", \u0026authentik.StageAuthenticatorStaticArgs{\n\t\t\tName: pulumi.String(\"static-totp-setup\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageAuthenticatorStatic;\nimport com.pulumi.authentik.StageAuthenticatorStaticArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a static TOTP Setup stage\n        var name = new StageAuthenticatorStatic(\"name\", StageAuthenticatorStaticArgs.builder()\n            .name(\"static-totp-setup\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a static TOTP Setup stage\n  name:\n    type: authentik:StageAuthenticatorStatic\n    properties:\n      name: static-totp-setup\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tokenCount": {
                    "type": "integer",
                    "description": "Defaults to `6`.\n"
                },
                "tokenLength": {
                    "type": "integer",
                    "description": "Defaults to `12`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "configureFlow": {
                    "type": "string"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tokenCount": {
                    "type": "integer",
                    "description": "Defaults to `6`.\n"
                },
                "tokenLength": {
                    "type": "integer",
                    "description": "Defaults to `12`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorStatic resources.\n",
                "properties": {
                    "configureFlow": {
                        "type": "string"
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tokenCount": {
                        "type": "integer",
                        "description": "Defaults to `6`.\n"
                    },
                    "tokenLength": {
                        "type": "integer",
                        "description": "Defaults to `12`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorTotp:StageAuthenticatorTotp": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a TOTP Setup stage\nconst name = new authentik.StageAuthenticatorTotp(\"name\", {name: \"totp-setup\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a TOTP Setup stage\nname = authentik.StageAuthenticatorTotp(\"name\", name=\"totp-setup\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a TOTP Setup stage\n    var name = new Authentik.StageAuthenticatorTotp(\"name\", new()\n    {\n        Name = \"totp-setup\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a TOTP Setup stage\n\t\t_, err := authentik.NewStageAuthenticatorTotp(ctx, \"name\", \u0026authentik.StageAuthenticatorTotpArgs{\n\t\t\tName: pulumi.String(\"totp-setup\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageAuthenticatorTotp;\nimport com.pulumi.authentik.StageAuthenticatorTotpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a TOTP Setup stage\n        var name = new StageAuthenticatorTotp(\"name\", StageAuthenticatorTotpArgs.builder()\n            .name(\"totp-setup\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a TOTP Setup stage\n  name:\n    type: authentik:StageAuthenticatorTotp\n    properties:\n      name: totp-setup\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "configureFlow": {
                    "type": "string"
                },
                "digits": {
                    "type": "string",
                    "description": "Allowed values: - `6` - `8`\n"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "configureFlow": {
                    "type": "string"
                },
                "digits": {
                    "type": "string",
                    "description": "Allowed values: - `6` - `8`\n"
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorTotp resources.\n",
                "properties": {
                    "configureFlow": {
                        "type": "string"
                    },
                    "digits": {
                        "type": "string",
                        "description": "Allowed values: - `6` - `8`\n"
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorValidate:StageAuthenticatorValidate": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create an Authenticator validations tage\nconst name = new authentik.StageAuthenticatorValidate(\"name\", {\n    name: \"authenticator-validate\",\n    deviceClasses: [\"static\"],\n    notConfiguredAction: \"skip\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create an Authenticator validations tage\nname = authentik.StageAuthenticatorValidate(\"name\",\n    name=\"authenticator-validate\",\n    device_classes=[\"static\"],\n    not_configured_action=\"skip\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create an Authenticator validations tage\n    var name = new Authentik.StageAuthenticatorValidate(\"name\", new()\n    {\n        Name = \"authenticator-validate\",\n        DeviceClasses = new[]\n        {\n            \"static\",\n        },\n        NotConfiguredAction = \"skip\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create an Authenticator validations tage\n\t\t_, err := authentik.NewStageAuthenticatorValidate(ctx, \"name\", \u0026authentik.StageAuthenticatorValidateArgs{\n\t\t\tName: pulumi.String(\"authenticator-validate\"),\n\t\t\tDeviceClasses: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"static\"),\n\t\t\t},\n\t\t\tNotConfiguredAction: pulumi.String(\"skip\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageAuthenticatorValidate;\nimport com.pulumi.authentik.StageAuthenticatorValidateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create an Authenticator validations tage\n        var name = new StageAuthenticatorValidate(\"name\", StageAuthenticatorValidateArgs.builder()\n            .name(\"authenticator-validate\")\n            .deviceClasses(\"static\")\n            .notConfiguredAction(\"skip\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create an Authenticator validations tage\n  name:\n    type: authentik:StageAuthenticatorValidate\n    properties:\n      name: authenticator-validate\n      deviceClasses:\n        - static\n      notConfiguredAction: skip\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "configurationStages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deviceClasses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lastAuthThreshold": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notConfiguredAction": {
                    "type": "string",
                    "description": "Allowed values: - `skip` - `deny` - `configure`\n"
                },
                "webauthnAllowedDeviceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "webauthnUserVerification": {
                    "type": "string",
                    "description": "Allowed values: - `required` - `preferred` - `discouraged`\n"
                }
            },
            "required": [
                "name",
                "notConfiguredAction"
            ],
            "inputProperties": {
                "configurationStages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deviceClasses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lastAuthThreshold": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notConfiguredAction": {
                    "type": "string",
                    "description": "Allowed values: - `skip` - `deny` - `configure`\n"
                },
                "webauthnAllowedDeviceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "webauthnUserVerification": {
                    "type": "string",
                    "description": "Allowed values: - `required` - `preferred` - `discouraged`\n"
                }
            },
            "requiredInputs": [
                "notConfiguredAction"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorValidate resources.\n",
                "properties": {
                    "configurationStages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deviceClasses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lastAuthThreshold": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notConfiguredAction": {
                        "type": "string",
                        "description": "Allowed values: - `skip` - `deny` - `configure`\n"
                    },
                    "webauthnAllowedDeviceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webauthnUserVerification": {
                        "type": "string",
                        "description": "Allowed values: - `required` - `preferred` - `discouraged`\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageAuthenticatorWebauthn:StageAuthenticatorWebauthn": {
            "description": "## Example Usage\n\n",
            "properties": {
                "authenticatorAttachment": {
                    "type": "string",
                    "description": "Allowed values: - `platform` - `cross-platform`\n"
                },
                "configureFlow": {
                    "type": "string"
                },
                "deviceTypeRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "residentKeyRequirement": {
                    "type": "string",
                    "description": "Allowed values: - `discouraged` - `preferred` - `required`\n"
                },
                "userVerification": {
                    "type": "string",
                    "description": "Allowed values: - `required` - `preferred` - `discouraged`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "authenticatorAttachment": {
                    "type": "string",
                    "description": "Allowed values: - `platform` - `cross-platform`\n"
                },
                "configureFlow": {
                    "type": "string"
                },
                "deviceTypeRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "friendlyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "residentKeyRequirement": {
                    "type": "string",
                    "description": "Allowed values: - `discouraged` - `preferred` - `required`\n"
                },
                "userVerification": {
                    "type": "string",
                    "description": "Allowed values: - `required` - `preferred` - `discouraged`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageAuthenticatorWebauthn resources.\n",
                "properties": {
                    "authenticatorAttachment": {
                        "type": "string",
                        "description": "Allowed values: - `platform` - `cross-platform`\n"
                    },
                    "configureFlow": {
                        "type": "string"
                    },
                    "deviceTypeRestrictions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "friendlyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "residentKeyRequirement": {
                        "type": "string",
                        "description": "Allowed values: - `discouraged` - `preferred` - `required`\n"
                    },
                    "userVerification": {
                        "type": "string",
                        "description": "Allowed values: - `required` - `preferred` - `discouraged`\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageCaptcha:StageCaptcha": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a captcha stage\nconst name = new authentik.StageCaptcha(\"name\", {\n    name: \"captcha\",\n    privateKey: \"foo\",\n    publicKey: \"bar\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a captcha stage\nname = authentik.StageCaptcha(\"name\",\n    name=\"captcha\",\n    private_key=\"foo\",\n    public_key=\"bar\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a captcha stage\n    var name = new Authentik.StageCaptcha(\"name\", new()\n    {\n        Name = \"captcha\",\n        PrivateKey = \"foo\",\n        PublicKey = \"bar\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a captcha stage\n\t\t_, err := authentik.NewStageCaptcha(ctx, \"name\", \u0026authentik.StageCaptchaArgs{\n\t\t\tName:       pulumi.String(\"captcha\"),\n\t\t\tPrivateKey: pulumi.String(\"foo\"),\n\t\t\tPublicKey:  pulumi.String(\"bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageCaptcha;\nimport com.pulumi.authentik.StageCaptchaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a captcha stage\n        var name = new StageCaptcha(\"name\", StageCaptchaArgs.builder()\n            .name(\"captcha\")\n            .privateKey(\"foo\")\n            .publicKey(\"bar\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a captcha stage\n  name:\n    type: authentik:StageCaptcha\n    properties:\n      name: captcha\n      privateKey: foo\n      publicKey: bar\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "apiUrl": {
                    "type": "string",
                    "description": "Defaults to `https://www.recaptcha.net/recaptcha/api/siteverify`.\n"
                },
                "errorOnInvalidScore": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "jsUrl": {
                    "type": "string",
                    "description": "Defaults to `https://www.recaptcha.net/recaptcha/api.js`.\n"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicKey": {
                    "type": "string"
                },
                "scoreMaxThreshold": {
                    "type": "number",
                    "description": "Defaults to `0.5`.\n"
                },
                "scoreMinThreshold": {
                    "type": "number",
                    "description": "Defaults to `1`.\n"
                }
            },
            "required": [
                "name",
                "privateKey",
                "publicKey"
            ],
            "inputProperties": {
                "apiUrl": {
                    "type": "string",
                    "description": "Defaults to `https://www.recaptcha.net/recaptcha/api/siteverify`.\n"
                },
                "errorOnInvalidScore": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "jsUrl": {
                    "type": "string",
                    "description": "Defaults to `https://www.recaptcha.net/recaptcha/api.js`.\n"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicKey": {
                    "type": "string"
                },
                "scoreMaxThreshold": {
                    "type": "number",
                    "description": "Defaults to `0.5`.\n"
                },
                "scoreMinThreshold": {
                    "type": "number",
                    "description": "Defaults to `1`.\n"
                }
            },
            "requiredInputs": [
                "privateKey",
                "publicKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageCaptcha resources.\n",
                "properties": {
                    "apiUrl": {
                        "type": "string",
                        "description": "Defaults to `https://www.recaptcha.net/recaptcha/api/siteverify`.\n"
                    },
                    "errorOnInvalidScore": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "jsUrl": {
                        "type": "string",
                        "description": "Defaults to `https://www.recaptcha.net/recaptcha/api.js`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string",
                        "secret": true
                    },
                    "publicKey": {
                        "type": "string"
                    },
                    "scoreMaxThreshold": {
                        "type": "number",
                        "description": "Defaults to `0.5`.\n"
                    },
                    "scoreMinThreshold": {
                        "type": "number",
                        "description": "Defaults to `1`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageConsent:StageConsent": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create consent stage\nconst name = new authentik.StageConsent(\"name\", {name: \"consent\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create consent stage\nname = authentik.StageConsent(\"name\", name=\"consent\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create consent stage\n    var name = new Authentik.StageConsent(\"name\", new()\n    {\n        Name = \"consent\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create consent stage\n\t\t_, err := authentik.NewStageConsent(ctx, \"name\", \u0026authentik.StageConsentArgs{\n\t\t\tName: pulumi.String(\"consent\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageConsent;\nimport com.pulumi.authentik.StageConsentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create consent stage\n        var name = new StageConsent(\"name\", StageConsentArgs.builder()\n            .name(\"consent\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create consent stage\n  name:\n    type: authentik:StageConsent\n    properties:\n      name: consent\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "consentExpireIn": {
                    "type": "string"
                },
                "mode": {
                    "type": "string",
                    "description": "Allowed values: - `always_require` - `permanent` - `expiring`\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "consentExpireIn": {
                    "type": "string"
                },
                "mode": {
                    "type": "string",
                    "description": "Allowed values: - `always_require` - `permanent` - `expiring`\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageConsent resources.\n",
                "properties": {
                    "consentExpireIn": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Allowed values: - `always_require` - `permanent` - `expiring`\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageDeny:StageDeny": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create deny stage, can be used with policies\nconst name = new authentik.StageDeny(\"name\", {name: \"deny\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create deny stage, can be used with policies\nname = authentik.StageDeny(\"name\", name=\"deny\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create deny stage, can be used with policies\n    var name = new Authentik.StageDeny(\"name\", new()\n    {\n        Name = \"deny\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create deny stage, can be used with policies\n\t\t_, err := authentik.NewStageDeny(ctx, \"name\", \u0026authentik.StageDenyArgs{\n\t\t\tName: pulumi.String(\"deny\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageDeny;\nimport com.pulumi.authentik.StageDenyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create deny stage, can be used with policies\n        var name = new StageDeny(\"name\", StageDenyArgs.builder()\n            .name(\"deny\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create deny stage, can be used with policies\n  name:\n    type: authentik:StageDeny\n    properties:\n      name: deny\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "denyMessage": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "denyMessage": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageDeny resources.\n",
                "properties": {
                    "denyMessage": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageDummy:StageDummy": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create dummy stage\nconst name = new authentik.StageDummy(\"name\", {name: \"dummy\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create dummy stage\nname = authentik.StageDummy(\"name\", name=\"dummy\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create dummy stage\n    var name = new Authentik.StageDummy(\"name\", new()\n    {\n        Name = \"dummy\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create dummy stage\n\t\t_, err := authentik.NewStageDummy(ctx, \"name\", \u0026authentik.StageDummyArgs{\n\t\t\tName: pulumi.String(\"dummy\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageDummy;\nimport com.pulumi.authentik.StageDummyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create dummy stage\n        var name = new StageDummy(\"name\", StageDummyArgs.builder()\n            .name(\"dummy\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create dummy stage\n  name:\n    type: authentik:StageDummy\n    properties:\n      name: dummy\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageDummy resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageEmail:StageEmail": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create email stage for email verification, uses global settings by default\nconst name = new authentik.StageEmail(\"name\", {name: \"email-verification\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create email stage for email verification, uses global settings by default\nname = authentik.StageEmail(\"name\", name=\"email-verification\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create email stage for email verification, uses global settings by default\n    var name = new Authentik.StageEmail(\"name\", new()\n    {\n        Name = \"email-verification\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create email stage for email verification, uses global settings by default\n\t\t_, err := authentik.NewStageEmail(ctx, \"name\", \u0026authentik.StageEmailArgs{\n\t\t\tName: pulumi.String(\"email-verification\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageEmail;\nimport com.pulumi.authentik.StageEmailArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create email stage for email verification, uses global settings by default\n        var name = new StageEmail(\"name\", StageEmailArgs.builder()\n            .name(\"email-verification\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create email stage for email verification, uses global settings by default\n  name:\n    type: authentik:StageEmail\n    properties:\n      name: email-verification\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "activateUserOnSuccess": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "fromAddress": {
                    "type": "string",
                    "description": "Defaults to `system@authentik.local`.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Defaults to `localhost`.\n"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Defaults to `25`.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Defaults to `authentik`.\n"
                },
                "template": {
                    "type": "string",
                    "description": "Defaults to `email/password_reset.html`.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "tokenExpiry": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "useGlobalSettings": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "useSsl": {
                    "type": "boolean"
                },
                "useTls": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "activateUserOnSuccess": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "fromAddress": {
                    "type": "string",
                    "description": "Defaults to `system@authentik.local`.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Defaults to `localhost`.\n"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Defaults to `25`.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Defaults to `authentik`.\n"
                },
                "template": {
                    "type": "string",
                    "description": "Defaults to `email/password_reset.html`.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "tokenExpiry": {
                    "type": "integer",
                    "description": "Defaults to `30`.\n"
                },
                "useGlobalSettings": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "useSsl": {
                    "type": "boolean"
                },
                "useTls": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageEmail resources.\n",
                "properties": {
                    "activateUserOnSuccess": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "fromAddress": {
                        "type": "string",
                        "description": "Defaults to `system@authentik.local`.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "Defaults to `localhost`.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Defaults to `25`.\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Defaults to `authentik`.\n"
                    },
                    "template": {
                        "type": "string",
                        "description": "Defaults to `email/password_reset.html`.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Defaults to `30`.\n"
                    },
                    "tokenExpiry": {
                        "type": "integer",
                        "description": "Defaults to `30`.\n"
                    },
                    "useGlobalSettings": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "useSsl": {
                        "type": "boolean"
                    },
                    "useTls": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageIdentification:StageIdentification": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// Create identification stage with sources and showing a password field\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst name = new authentik.SourceOauth(\"name\", {\n    name: \"test\",\n    slug: \"test\",\n    authenticationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    enrollmentFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    providerType: \"discord\",\n    consumerKey: \"foo\",\n    consumerSecret: \"bar\",\n});\nconst nameStagePassword = new authentik.StagePassword(\"name\", {\n    name: \"test-pass\",\n    backends: [\"authentik.core.auth.InbuiltBackend\"],\n});\nconst nameStageIdentification = new authentik.StageIdentification(\"name\", {\n    name: \"test-ident\",\n    userFields: [\"username\"],\n    sources: [name.uuid],\n    passwordStage: nameStagePassword.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\n# Create identification stage with sources and showing a password field\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nname = authentik.SourceOauth(\"name\",\n    name=\"test\",\n    slug=\"test\",\n    authentication_flow=default_authorization_flow.id,\n    enrollment_flow=default_authorization_flow.id,\n    provider_type=\"discord\",\n    consumer_key=\"foo\",\n    consumer_secret=\"bar\")\nname_stage_password = authentik.StagePassword(\"name\",\n    name=\"test-pass\",\n    backends=[\"authentik.core.auth.InbuiltBackend\"])\nname_stage_identification = authentik.StageIdentification(\"name\",\n    name=\"test-ident\",\n    user_fields=[\"username\"],\n    sources=[name.uuid],\n    password_stage=name_stage_password.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create identification stage with sources and showing a password field\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var name = new Authentik.SourceOauth(\"name\", new()\n    {\n        Name = \"test\",\n        Slug = \"test\",\n        AuthenticationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        EnrollmentFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        ProviderType = \"discord\",\n        ConsumerKey = \"foo\",\n        ConsumerSecret = \"bar\",\n    });\n\n    var nameStagePassword = new Authentik.StagePassword(\"name\", new()\n    {\n        Name = \"test-pass\",\n        Backends = new[]\n        {\n            \"authentik.core.auth.InbuiltBackend\",\n        },\n    });\n\n    var nameStageIdentification = new Authentik.StageIdentification(\"name\", new()\n    {\n        Name = \"test-ident\",\n        UserFields = new[]\n        {\n            \"username\",\n        },\n        Sources = new[]\n        {\n            name.Uuid,\n        },\n        PasswordStage = nameStagePassword.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create identification stage with sources and showing a password field\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tname, err := authentik.NewSourceOauth(ctx, \"name\", \u0026authentik.SourceOauthArgs{\n\t\t\tName:               pulumi.String(\"test\"),\n\t\t\tSlug:               pulumi.String(\"test\"),\n\t\t\tAuthenticationFlow: pulumi.String(default_authorization_flow.Id),\n\t\t\tEnrollmentFlow:     pulumi.String(default_authorization_flow.Id),\n\t\t\tProviderType:       pulumi.String(\"discord\"),\n\t\t\tConsumerKey:        pulumi.String(\"foo\"),\n\t\t\tConsumerSecret:     pulumi.String(\"bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnameStagePassword, err := authentik.NewStagePassword(ctx, \"name\", \u0026authentik.StagePasswordArgs{\n\t\t\tName: pulumi.String(\"test-pass\"),\n\t\t\tBackends: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"authentik.core.auth.InbuiltBackend\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewStageIdentification(ctx, \"name\", \u0026authentik.StageIdentificationArgs{\n\t\t\tName: pulumi.String(\"test-ident\"),\n\t\t\tUserFields: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"username\"),\n\t\t\t},\n\t\t\tSources: pulumi.StringArray{\n\t\t\t\tname.Uuid,\n\t\t\t},\n\t\t\tPasswordStage: nameStagePassword.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.SourceOauth;\nimport com.pulumi.authentik.SourceOauthArgs;\nimport com.pulumi.authentik.StagePassword;\nimport com.pulumi.authentik.StagePasswordArgs;\nimport com.pulumi.authentik.StageIdentification;\nimport com.pulumi.authentik.StageIdentificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create identification stage with sources and showing a password field\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var name = new SourceOauth(\"name\", SourceOauthArgs.builder()\n            .name(\"test\")\n            .slug(\"test\")\n            .authenticationFlow(default_authorization_flow.id())\n            .enrollmentFlow(default_authorization_flow.id())\n            .providerType(\"discord\")\n            .consumerKey(\"foo\")\n            .consumerSecret(\"bar\")\n            .build());\n\n        var nameStagePassword = new StagePassword(\"nameStagePassword\", StagePasswordArgs.builder()\n            .name(\"test-pass\")\n            .backends(\"authentik.core.auth.InbuiltBackend\")\n            .build());\n\n        var nameStageIdentification = new StageIdentification(\"nameStageIdentification\", StageIdentificationArgs.builder()\n            .name(\"test-ident\")\n            .userFields(\"username\")\n            .sources(name.uuid())\n            .passwordStage(nameStagePassword.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:SourceOauth\n    properties:\n      name: test\n      slug: test\n      authenticationFlow: ${[\"default-authorization-flow\"].id}\n      enrollmentFlow: ${[\"default-authorization-flow\"].id}\n      providerType: discord\n      consumerKey: foo\n      consumerSecret: bar\n  nameStagePassword:\n    type: authentik:StagePassword\n    name: name\n    properties:\n      name: test-pass\n      backends:\n        - authentik.core.auth.InbuiltBackend\n  nameStageIdentification:\n    type: authentik:StageIdentification\n    name: name\n    properties:\n      name: test-ident\n      userFields:\n        - username\n      sources:\n        - ${name.uuid}\n      passwordStage: ${nameStagePassword.id}\nvariables:\n  # Create identification stage with sources and showing a password field\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "captchaStage": {
                    "type": "string"
                },
                "caseInsensitiveMatching": {
                    "type": "boolean"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passwordStage": {
                    "type": "string"
                },
                "passwordlessFlow": {
                    "type": "string"
                },
                "pretendUserExists": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "recoveryFlow": {
                    "type": "string"
                },
                "showMatchedUser": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "showSourceLabels": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "captchaStage": {
                    "type": "string"
                },
                "caseInsensitiveMatching": {
                    "type": "boolean"
                },
                "enrollmentFlow": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passwordStage": {
                    "type": "string"
                },
                "passwordlessFlow": {
                    "type": "string"
                },
                "pretendUserExists": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "recoveryFlow": {
                    "type": "string"
                },
                "showMatchedUser": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "showSourceLabels": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageIdentification resources.\n",
                "properties": {
                    "captchaStage": {
                        "type": "string"
                    },
                    "caseInsensitiveMatching": {
                        "type": "boolean"
                    },
                    "enrollmentFlow": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passwordStage": {
                        "type": "string"
                    },
                    "passwordlessFlow": {
                        "type": "string"
                    },
                    "pretendUserExists": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "recoveryFlow": {
                        "type": "string"
                    },
                    "showMatchedUser": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "showSourceLabels": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageInvitation:StageInvitation": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create invitation stage\nconst name = new authentik.StageInvitation(\"name\", {name: \"invitation\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create invitation stage\nname = authentik.StageInvitation(\"name\", name=\"invitation\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create invitation stage\n    var name = new Authentik.StageInvitation(\"name\", new()\n    {\n        Name = \"invitation\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create invitation stage\n\t\t_, err := authentik.NewStageInvitation(ctx, \"name\", \u0026authentik.StageInvitationArgs{\n\t\t\tName: pulumi.String(\"invitation\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageInvitation;\nimport com.pulumi.authentik.StageInvitationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create invitation stage\n        var name = new StageInvitation(\"name\", StageInvitationArgs.builder()\n            .name(\"invitation\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create invitation stage\n  name:\n    type: authentik:StageInvitation\n    properties:\n      name: invitation\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "continueFlowWithoutInvitation": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "continueFlowWithoutInvitation": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageInvitation resources.\n",
                "properties": {
                    "continueFlowWithoutInvitation": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stagePassword:StagePassword": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a password stage that tests against the interla database\nconst test = new authentik.StagePassword(\"test\", {\n    name: \"test-stage\",\n    backends: [\"authentik.core.auth.InbuiltBackend\"],\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a password stage that tests against the interla database\ntest = authentik.StagePassword(\"test\",\n    name=\"test-stage\",\n    backends=[\"authentik.core.auth.InbuiltBackend\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a password stage that tests against the interla database\n    var test = new Authentik.StagePassword(\"test\", new()\n    {\n        Name = \"test-stage\",\n        Backends = new[]\n        {\n            \"authentik.core.auth.InbuiltBackend\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a password stage that tests against the interla database\n\t\t_, err := authentik.NewStagePassword(ctx, \"test\", \u0026authentik.StagePasswordArgs{\n\t\t\tName: pulumi.String(\"test-stage\"),\n\t\t\tBackends: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"authentik.core.auth.InbuiltBackend\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StagePassword;\nimport com.pulumi.authentik.StagePasswordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a password stage that tests against the interla database\n        var test = new StagePassword(\"test\", StagePasswordArgs.builder()\n            .name(\"test-stage\")\n            .backends(\"authentik.core.auth.InbuiltBackend\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a password stage that tests against the interla database\n  test:\n    type: authentik:StagePassword\n    properties:\n      name: test-stage\n      backends:\n        - authentik.core.auth.InbuiltBackend\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "allowShowPassword": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "backends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configureFlow": {
                    "type": "string"
                },
                "failedAttemptsBeforeCancel": {
                    "type": "integer",
                    "description": "Defaults to `5`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "backends",
                "name"
            ],
            "inputProperties": {
                "allowShowPassword": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "backends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configureFlow": {
                    "type": "string"
                },
                "failedAttemptsBeforeCancel": {
                    "type": "integer",
                    "description": "Defaults to `5`.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "backends"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StagePassword resources.\n",
                "properties": {
                    "allowShowPassword": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "backends": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "configureFlow": {
                        "type": "string"
                    },
                    "failedAttemptsBeforeCancel": {
                        "type": "integer",
                        "description": "Defaults to `5`.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stagePrompt:StagePrompt": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a prompt stage with 1 field\nconst field = new authentik.StagePromptField(\"field\", {\n    fieldKey: \"username\",\n    label: \"Username\",\n    type: \"username\",\n});\nconst name = new authentik.StagePrompt(\"name\", {\n    name: \"test\",\n    fields: [authentikStagePromptField.field.id],\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a prompt stage with 1 field\nfield = authentik.StagePromptField(\"field\",\n    field_key=\"username\",\n    label=\"Username\",\n    type=\"username\")\nname = authentik.StagePrompt(\"name\",\n    name=\"test\",\n    fields=[authentik_stage_prompt_field[\"field\"][\"id\"]])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a prompt stage with 1 field\n    var field = new Authentik.StagePromptField(\"field\", new()\n    {\n        FieldKey = \"username\",\n        Label = \"Username\",\n        Type = \"username\",\n    });\n\n    var name = new Authentik.StagePrompt(\"name\", new()\n    {\n        Name = \"test\",\n        Fields = new[]\n        {\n            authentikStagePromptField.Field.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a prompt stage with 1 field\n\t\t_, err := authentik.NewStagePromptField(ctx, \"field\", \u0026authentik.StagePromptFieldArgs{\n\t\t\tFieldKey: pulumi.String(\"username\"),\n\t\t\tLabel:    pulumi.String(\"Username\"),\n\t\t\tType:     pulumi.String(\"username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewStagePrompt(ctx, \"name\", \u0026authentik.StagePromptArgs{\n\t\t\tName: pulumi.String(\"test\"),\n\t\t\tFields: pulumi.StringArray{\n\t\t\t\tauthentikStagePromptField.Field.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StagePromptField;\nimport com.pulumi.authentik.StagePromptFieldArgs;\nimport com.pulumi.authentik.StagePrompt;\nimport com.pulumi.authentik.StagePromptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a prompt stage with 1 field\n        var field = new StagePromptField(\"field\", StagePromptFieldArgs.builder()\n            .fieldKey(\"username\")\n            .label(\"Username\")\n            .type(\"username\")\n            .build());\n\n        var name = new StagePrompt(\"name\", StagePromptArgs.builder()\n            .name(\"test\")\n            .fields(authentikStagePromptField.field().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a prompt stage with 1 field\n  field:\n    type: authentik:StagePromptField\n    properties:\n      fieldKey: username\n      label: Username\n      type: username\n  name:\n    type: authentik:StagePrompt\n    properties:\n      name: test\n      fields:\n        - ${authentikStagePromptField.field.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "validationPolicies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "fields",
                "name"
            ],
            "inputProperties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "validationPolicies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "fields"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StagePrompt resources.\n",
                "properties": {
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "validationPolicies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stagePromptField:StagePromptField": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a prompt field\nconst field = new authentik.StagePromptField(\"field\", {\n    fieldKey: \"username\",\n    label: \"Username\",\n    type: \"username\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a prompt field\nfield = authentik.StagePromptField(\"field\",\n    field_key=\"username\",\n    label=\"Username\",\n    type=\"username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a prompt field\n    var field = new Authentik.StagePromptField(\"field\", new()\n    {\n        FieldKey = \"username\",\n        Label = \"Username\",\n        Type = \"username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a prompt field\n\t\t_, err := authentik.NewStagePromptField(ctx, \"field\", \u0026authentik.StagePromptFieldArgs{\n\t\t\tFieldKey: pulumi.String(\"username\"),\n\t\t\tLabel:    pulumi.String(\"Username\"),\n\t\t\tType:     pulumi.String(\"username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StagePromptField;\nimport com.pulumi.authentik.StagePromptFieldArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a prompt field\n        var field = new StagePromptField(\"field\", StagePromptFieldArgs.builder()\n            .fieldKey(\"username\")\n            .label(\"Username\")\n            .type(\"username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a prompt field\n  field:\n    type: authentik:StagePromptField\n    properties:\n      fieldKey: username\n      label: Username\n      type: username\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "fieldKey": {
                    "type": "string"
                },
                "initialValue": {
                    "type": "string"
                },
                "initialValueExpression": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "placeholder": {
                    "type": "string"
                },
                "placeholderExpression": {
                    "type": "boolean"
                },
                "required": {
                    "type": "boolean"
                },
                "subText": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Allowed values: - `text` - `text_area` - `text_read_only` - `text_area_read_only` - `username` - `email` - `password` -\n`number` - `checkbox` - `radio-button-group` - `dropdown` - `date` - `date-time` - `file` - `separator` - `hidden` -\n`static` - `ak-locale`\n"
                }
            },
            "required": [
                "fieldKey",
                "label",
                "name",
                "type"
            ],
            "inputProperties": {
                "fieldKey": {
                    "type": "string"
                },
                "initialValue": {
                    "type": "string"
                },
                "initialValueExpression": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "placeholder": {
                    "type": "string"
                },
                "placeholderExpression": {
                    "type": "boolean"
                },
                "required": {
                    "type": "boolean"
                },
                "subText": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Allowed values: - `text` - `text_area` - `text_read_only` - `text_area_read_only` - `username` - `email` - `password` -\n`number` - `checkbox` - `radio-button-group` - `dropdown` - `date` - `date-time` - `file` - `separator` - `hidden` -\n`static` - `ak-locale`\n"
                }
            },
            "requiredInputs": [
                "fieldKey",
                "label",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StagePromptField resources.\n",
                "properties": {
                    "fieldKey": {
                        "type": "string"
                    },
                    "initialValue": {
                        "type": "string"
                    },
                    "initialValueExpression": {
                        "type": "boolean"
                    },
                    "label": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "placeholder": {
                        "type": "string"
                    },
                    "placeholderExpression": {
                        "type": "boolean"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "subText": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Allowed values: - `text` - `text_area` - `text_read_only` - `text_area_read_only` - `username` - `email` - `password` -\n`number` - `checkbox` - `radio-button-group` - `dropdown` - `date` - `date-time` - `file` - `separator` - `hidden` -\n`static` - `ak-locale`\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageSource:StageSource": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// Create OAuth Source using an existing provider\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\nconst name = new authentik.SourceOauth(\"name\", {\n    name: \"discord\",\n    slug: \"discord\",\n    authenticationFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    enrollmentFlow: default_authorization_flow.then(default_authorization_flow =\u003e default_authorization_flow.id),\n    providerType: \"discord\",\n    consumerKey: \"foo\",\n    consumerSecret: \"bar\",\n});\n// Create a source stage using the source defined above\nconst nameStageSource = new authentik.StageSource(\"name\", {\n    name: \"source-stage\",\n    source: name.id,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\nimport pulumi_authentik as authentik\n\n# Create OAuth Source using an existing provider\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\nname = authentik.SourceOauth(\"name\",\n    name=\"discord\",\n    slug=\"discord\",\n    authentication_flow=default_authorization_flow.id,\n    enrollment_flow=default_authorization_flow.id,\n    provider_type=\"discord\",\n    consumer_key=\"foo\",\n    consumer_secret=\"bar\")\n# Create a source stage using the source defined above\nname_stage_source = authentik.StageSource(\"name\",\n    name=\"source-stage\",\n    source=name.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create OAuth Source using an existing provider\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n    var name = new Authentik.SourceOauth(\"name\", new()\n    {\n        Name = \"discord\",\n        Slug = \"discord\",\n        AuthenticationFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        EnrollmentFlow = default_authorization_flow.Apply(default_authorization_flow =\u003e default_authorization_flow.Apply(getFlowResult =\u003e getFlowResult.Id)),\n        ProviderType = \"discord\",\n        ConsumerKey = \"foo\",\n        ConsumerSecret = \"bar\",\n    });\n\n    // Create a source stage using the source defined above\n    var nameStageSource = new Authentik.StageSource(\"name\", new()\n    {\n        Name = \"source-stage\",\n        Source = name.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create OAuth Source using an existing provider\n\t\tdefault_authorization_flow, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tname, err := authentik.NewSourceOauth(ctx, \"name\", \u0026authentik.SourceOauthArgs{\n\t\t\tName:               pulumi.String(\"discord\"),\n\t\t\tSlug:               pulumi.String(\"discord\"),\n\t\t\tAuthenticationFlow: pulumi.String(default_authorization_flow.Id),\n\t\t\tEnrollmentFlow:     pulumi.String(default_authorization_flow.Id),\n\t\t\tProviderType:       pulumi.String(\"discord\"),\n\t\t\tConsumerKey:        pulumi.String(\"foo\"),\n\t\t\tConsumerSecret:     pulumi.String(\"bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a source stage using the source defined above\n\t\t_, err = authentik.NewStageSource(ctx, \"name\", \u0026authentik.StageSourceArgs{\n\t\t\tName:   pulumi.String(\"source-stage\"),\n\t\t\tSource: name.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport com.pulumi.authentik.SourceOauth;\nimport com.pulumi.authentik.SourceOauthArgs;\nimport com.pulumi.authentik.StageSource;\nimport com.pulumi.authentik.StageSourceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create OAuth Source using an existing provider\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n        var name = new SourceOauth(\"name\", SourceOauthArgs.builder()\n            .name(\"discord\")\n            .slug(\"discord\")\n            .authenticationFlow(default_authorization_flow.id())\n            .enrollmentFlow(default_authorization_flow.id())\n            .providerType(\"discord\")\n            .consumerKey(\"foo\")\n            .consumerSecret(\"bar\")\n            .build());\n\n        // Create a source stage using the source defined above\n        var nameStageSource = new StageSource(\"nameStageSource\", StageSourceArgs.builder()\n            .name(\"source-stage\")\n            .source(name.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  name:\n    type: authentik:SourceOauth\n    properties:\n      name: discord\n      slug: discord\n      authenticationFlow: ${[\"default-authorization-flow\"].id}\n      enrollmentFlow: ${[\"default-authorization-flow\"].id}\n      providerType: discord\n      consumerKey: foo\n      consumerSecret: bar\n  # Create a source stage using the source defined above\n  nameStageSource:\n    type: authentik:StageSource\n    name: name\n    properties:\n      name: source-stage\n      source: ${name.id}\nvariables:\n  # Create OAuth Source using an existing provider\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "name": {
                    "type": "string"
                },
                "resumeTimeout": {
                    "type": "string",
                    "description": "Defaults to `minutes=10`.\n"
                },
                "source": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                },
                "resumeTimeout": {
                    "type": "string",
                    "description": "Defaults to `minutes=10`.\n"
                },
                "source": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageSource resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "resumeTimeout": {
                        "type": "string",
                        "description": "Defaults to `minutes=10`.\n"
                    },
                    "source": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageUserDelete:StageUserDelete": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a user deletion stage\nconst name = new authentik.StageUserDelete(\"name\", {name: \"user-delete\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a user deletion stage\nname = authentik.StageUserDelete(\"name\", name=\"user-delete\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a user deletion stage\n    var name = new Authentik.StageUserDelete(\"name\", new()\n    {\n        Name = \"user-delete\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a user deletion stage\n\t\t_, err := authentik.NewStageUserDelete(ctx, \"name\", \u0026authentik.StageUserDeleteArgs{\n\t\t\tName: pulumi.String(\"user-delete\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageUserDelete;\nimport com.pulumi.authentik.StageUserDeleteArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a user deletion stage\n        var name = new StageUserDelete(\"name\", StageUserDeleteArgs.builder()\n            .name(\"user-delete\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a user deletion stage\n  name:\n    type: authentik:StageUserDelete\n    properties:\n      name: user-delete\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageUserDelete resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageUserLogin:StageUserLogin": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a user login stage\nconst name = new authentik.StageUserLogin(\"name\", {name: \"user-login\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a user login stage\nname = authentik.StageUserLogin(\"name\", name=\"user-login\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a user login stage\n    var name = new Authentik.StageUserLogin(\"name\", new()\n    {\n        Name = \"user-login\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a user login stage\n\t\t_, err := authentik.NewStageUserLogin(ctx, \"name\", \u0026authentik.StageUserLoginArgs{\n\t\t\tName: pulumi.String(\"user-login\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageUserLogin;\nimport com.pulumi.authentik.StageUserLoginArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a user login stage\n        var name = new StageUserLogin(\"name\", StageUserLoginArgs.builder()\n            .name(\"user-login\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a user login stage\n  name:\n    type: authentik:StageUserLogin\n    properties:\n      name: user-login\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "geoipBinding": {
                    "type": "string",
                    "description": "Allowed values: - `no_binding` - `bind_continent` - `bind_continent_country` - `bind_continent_country_city`\n"
                },
                "name": {
                    "type": "string"
                },
                "networkBinding": {
                    "type": "string",
                    "description": "Allowed values: - `no_binding` - `bind_asn` - `bind_asn_network` - `bind_asn_network_ip`\n"
                },
                "rememberMeOffset": {
                    "type": "string"
                },
                "sessionDuration": {
                    "type": "string"
                },
                "terminateOtherSessions": {
                    "type": "boolean"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "geoipBinding": {
                    "type": "string",
                    "description": "Allowed values: - `no_binding` - `bind_continent` - `bind_continent_country` - `bind_continent_country_city`\n"
                },
                "name": {
                    "type": "string"
                },
                "networkBinding": {
                    "type": "string",
                    "description": "Allowed values: - `no_binding` - `bind_asn` - `bind_asn_network` - `bind_asn_network_ip`\n"
                },
                "rememberMeOffset": {
                    "type": "string"
                },
                "sessionDuration": {
                    "type": "string"
                },
                "terminateOtherSessions": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageUserLogin resources.\n",
                "properties": {
                    "geoipBinding": {
                        "type": "string",
                        "description": "Allowed values: - `no_binding` - `bind_continent` - `bind_continent_country` - `bind_continent_country_city`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkBinding": {
                        "type": "string",
                        "description": "Allowed values: - `no_binding` - `bind_asn` - `bind_asn_network` - `bind_asn_network_ip`\n"
                    },
                    "rememberMeOffset": {
                        "type": "string"
                    },
                    "sessionDuration": {
                        "type": "string"
                    },
                    "terminateOtherSessions": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageUserLogout:StageUserLogout": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a user logout stage\nconst name = new authentik.StageUserLogout(\"name\", {name: \"user-logout\"});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a user logout stage\nname = authentik.StageUserLogout(\"name\", name=\"user-logout\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a user logout stage\n    var name = new Authentik.StageUserLogout(\"name\", new()\n    {\n        Name = \"user-logout\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a user logout stage\n\t\t_, err := authentik.NewStageUserLogout(ctx, \"name\", \u0026authentik.StageUserLogoutArgs{\n\t\t\tName: pulumi.String(\"user-logout\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageUserLogout;\nimport com.pulumi.authentik.StageUserLogoutArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a user logout stage\n        var name = new StageUserLogout(\"name\", StageUserLogoutArgs.builder()\n            .name(\"user-logout\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a user logout stage\n  name:\n    type: authentik:StageUserLogout\n    properties:\n      name: user-logout\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageUserLogout resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/stageUserWrite:StageUserWrite": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a user write stage\nconst name = new authentik.StageUserWrite(\"name\", {\n    name: \"user-write\",\n    createUsersAsInactive: false,\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a user write stage\nname = authentik.StageUserWrite(\"name\",\n    name=\"user-write\",\n    create_users_as_inactive=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a user write stage\n    var name = new Authentik.StageUserWrite(\"name\", new()\n    {\n        Name = \"user-write\",\n        CreateUsersAsInactive = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a user write stage\n\t\t_, err := authentik.NewStageUserWrite(ctx, \"name\", \u0026authentik.StageUserWriteArgs{\n\t\t\tName:                  pulumi.String(\"user-write\"),\n\t\t\tCreateUsersAsInactive: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.StageUserWrite;\nimport com.pulumi.authentik.StageUserWriteArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a user write stage\n        var name = new StageUserWrite(\"name\", StageUserWriteArgs.builder()\n            .name(\"user-write\")\n            .createUsersAsInactive(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a user write stage\n  name:\n    type: authentik:StageUserWrite\n    properties:\n      name: user-write\n      createUsersAsInactive: false\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "createUsersAsInactive": {
                    "type": "boolean"
                },
                "createUsersGroup": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userCreationMode": {
                    "type": "string",
                    "description": "Allowed values: - `never_create` - `create_when_required` - `always_create`\n"
                },
                "userPathTemplate": {
                    "type": "string"
                },
                "userType": {
                    "type": "string",
                    "description": "Allowed values: - `internal` - `external` - `service_account`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "createUsersAsInactive": {
                    "type": "boolean"
                },
                "createUsersGroup": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userCreationMode": {
                    "type": "string",
                    "description": "Allowed values: - `never_create` - `create_when_required` - `always_create`\n"
                },
                "userPathTemplate": {
                    "type": "string"
                },
                "userType": {
                    "type": "string",
                    "description": "Allowed values: - `internal` - `external` - `service_account`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StageUserWrite resources.\n",
                "properties": {
                    "createUsersAsInactive": {
                        "type": "boolean"
                    },
                    "createUsersGroup": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "userCreationMode": {
                        "type": "string",
                        "description": "Allowed values: - `never_create` - `create_when_required` - `always_create`\n"
                    },
                    "userPathTemplate": {
                        "type": "string"
                    },
                    "userType": {
                        "type": "string",
                        "description": "Allowed values: - `internal` - `external` - `service_account`\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/systemSettings:SystemSettings": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Configure system settings\nconst settings = new authentik.SystemSettings(\"settings\", {defaultUserChangeUsername: true});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Configure system settings\nsettings = authentik.SystemSettings(\"settings\", default_user_change_username=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Configure system settings\n    var settings = new Authentik.SystemSettings(\"settings\", new()\n    {\n        DefaultUserChangeUsername = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Configure system settings\n\t\t_, err := authentik.NewSystemSettings(ctx, \"settings\", \u0026authentik.SystemSettingsArgs{\n\t\t\tDefaultUserChangeUsername: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.SystemSettings;\nimport com.pulumi.authentik.SystemSettingsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Configure system settings\n        var settings = new SystemSettings(\"settings\", SystemSettingsArgs.builder()\n            .defaultUserChangeUsername(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Configure system settings\n  settings:\n    type: authentik:SystemSettings\n    properties:\n      defaultUserChangeUsername: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n{{codefile \"shell\" \"examples/resources/authentik_system_settings/import.sh\"}}\n\n",
            "properties": {
                "avatars": {
                    "type": "string",
                    "description": "Defaults to `gravatar,initials`.\n"
                },
                "defaultTokenDuration": {
                    "type": "string",
                    "description": "Defaults to `minutes=30`.\n"
                },
                "defaultTokenLength": {
                    "type": "integer",
                    "description": "Defaults to `60`.\n"
                },
                "defaultUserChangeEmail": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "defaultUserChangeName": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "defaultUserChangeUsername": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "eventRetention": {
                    "type": "string",
                    "description": "Defaults to `days=365`.\n"
                },
                "footerLinks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "gdprCompliance": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "impersonation": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                }
            },
            "inputProperties": {
                "avatars": {
                    "type": "string",
                    "description": "Defaults to `gravatar,initials`.\n"
                },
                "defaultTokenDuration": {
                    "type": "string",
                    "description": "Defaults to `minutes=30`.\n"
                },
                "defaultTokenLength": {
                    "type": "integer",
                    "description": "Defaults to `60`.\n"
                },
                "defaultUserChangeEmail": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "defaultUserChangeName": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "defaultUserChangeUsername": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "eventRetention": {
                    "type": "string",
                    "description": "Defaults to `days=365`.\n"
                },
                "footerLinks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "gdprCompliance": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                },
                "impersonation": {
                    "type": "boolean",
                    "description": "Defaults to `true`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SystemSettings resources.\n",
                "properties": {
                    "avatars": {
                        "type": "string",
                        "description": "Defaults to `gravatar,initials`.\n"
                    },
                    "defaultTokenDuration": {
                        "type": "string",
                        "description": "Defaults to `minutes=30`.\n"
                    },
                    "defaultTokenLength": {
                        "type": "integer",
                        "description": "Defaults to `60`.\n"
                    },
                    "defaultUserChangeEmail": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "defaultUserChangeName": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "defaultUserChangeUsername": {
                        "type": "boolean",
                        "description": "Defaults to `false`.\n"
                    },
                    "eventRetention": {
                        "type": "string",
                        "description": "Defaults to `days=365`.\n"
                    },
                    "footerLinks": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "gdprCompliance": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    },
                    "impersonation": {
                        "type": "boolean",
                        "description": "Defaults to `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/token:Token": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@osmit-gmbh/pulumi-authentik\";\n\n// Create a token for a user\nconst name = new authentik.User(\"name\", {\n    username: \"user\",\n    name: \"User\",\n});\nconst _default = new authentik.Token(\"default\", {\n    identifier: \"my-token\",\n    user: name.id,\n    description: \"My secret token\",\n    expires: \"2025-01-01T15:04:05Z\",\n});\n```\n```python\nimport pulumi\nimport osmit_gmbh_pulumi_authentik as authentik\n\n# Create a token for a user\nname = authentik.User(\"name\",\n    username=\"user\",\n    name=\"User\")\ndefault = authentik.Token(\"default\",\n    identifier=\"my-token\",\n    user=name.id,\n    description=\"My secret token\",\n    expires=\"2025-01-01T15:04:05Z\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = OSMIT_GmbH.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a token for a user\n    var name = new Authentik.User(\"name\", new()\n    {\n        Username = \"user\",\n        Name = \"User\",\n    });\n\n    var @default = new Authentik.Token(\"default\", new()\n    {\n        Identifier = \"my-token\",\n        User = name.Id,\n        Description = \"My secret token\",\n        Expires = \"2025-01-01T15:04:05Z\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a token for a user\n\t\tname, err := authentik.NewUser(ctx, \"name\", \u0026authentik.UserArgs{\n\t\t\tUsername: pulumi.String(\"user\"),\n\t\t\tName:     pulumi.String(\"User\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = authentik.NewToken(ctx, \"default\", \u0026authentik.TokenArgs{\n\t\t\tIdentifier:  pulumi.String(\"my-token\"),\n\t\t\tUser:        name.ID(),\n\t\t\tDescription: pulumi.String(\"My secret token\"),\n\t\t\tExpires:     pulumi.String(\"2025-01-01T15:04:05Z\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.User;\nimport com.pulumi.authentik.UserArgs;\nimport com.pulumi.authentik.Token;\nimport com.pulumi.authentik.TokenArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a token for a user\n        var name = new User(\"name\", UserArgs.builder()\n            .username(\"user\")\n            .name(\"User\")\n            .build());\n\n        var default_ = new Token(\"default\", TokenArgs.builder()\n            .identifier(\"my-token\")\n            .user(name.id())\n            .description(\"My secret token\")\n            .expires(\"2025-01-01T15:04:05Z\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a token for a user\n  name:\n    type: authentik:User\n    properties:\n      username: user\n      name: User\n  default:\n    type: authentik:Token\n    properties:\n      identifier: my-token\n      user: ${name.id}\n      description: My secret token\n      expires: 2025-01-01T15:04:05Z\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expires": {
                    "type": "string"
                },
                "expiresIn": {
                    "type": "integer"
                },
                "expiring": {
                    "type": "boolean"
                },
                "identifier": {
                    "type": "string"
                },
                "intent": {
                    "type": "string",
                    "description": "Allowed values: - `verification` - `api` - `recovery` - `app_password`\n"
                },
                "key": {
                    "type": "string",
                    "secret": true
                },
                "retrieveKey": {
                    "type": "boolean"
                },
                "user": {
                    "type": "integer"
                }
            },
            "required": [
                "expiresIn",
                "identifier",
                "key",
                "user"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "expires": {
                    "type": "string"
                },
                "expiring": {
                    "type": "boolean"
                },
                "identifier": {
                    "type": "string"
                },
                "intent": {
                    "type": "string",
                    "description": "Allowed values: - `verification` - `api` - `recovery` - `app_password`\n"
                },
                "retrieveKey": {
                    "type": "boolean"
                },
                "user": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "identifier",
                "user"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Token resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "expires": {
                        "type": "string"
                    },
                    "expiresIn": {
                        "type": "integer"
                    },
                    "expiring": {
                        "type": "boolean"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "intent": {
                        "type": "string",
                        "description": "Allowed values: - `verification` - `api` - `recovery` - `app_password`\n"
                    },
                    "key": {
                        "type": "string",
                        "secret": true
                    },
                    "retrieveKey": {
                        "type": "boolean"
                    },
                    "user": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "authentik:index/user:User": {
            "description": "## Example Usage\n\n",
            "properties": {
                "attributes": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects.\n"
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "description": "Optionally set the user's password. Changing the password in authentik will not trigger an update here.\n",
                    "secret": true
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Allowed values: - `internal` - `external` - `service_account` - `internal_service_account`\n"
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "groups",
                "name",
                "username"
            ],
            "inputProperties": {
                "attributes": {
                    "type": "string",
                    "description": "JSON format expected. Use jsonencode() to pass objects.\n"
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "description": "Optionally set the user's password. Changing the password in authentik will not trigger an update here.\n",
                    "secret": true
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Allowed values: - `internal` - `external` - `service_account` - `internal_service_account`\n"
                },
                "username": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "attributes": {
                        "type": "string",
                        "description": "JSON format expected. Use jsonencode() to pass objects.\n"
                    },
                    "email": {
                        "type": "string"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "description": "Optionally set the user's password. Changing the password in authentik will not trigger an update here.\n",
                        "secret": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Allowed values: - `internal` - `external` - `service_account` - `internal_service_account`\n"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "authentik:index/getBrand:getBrand": {
            "description": "Get brands by domain\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// To get the details of a brand by domain\nconst authentik-default = authentik.getBrand({\n    domain: \"authentik-default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\n# To get the details of a brand by domain\nauthentik_default = authentik.get_brand(domain=\"authentik-default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // To get the details of a brand by domain\n    var authentik_default = Authentik.GetBrand.Invoke(new()\n    {\n        Domain = \"authentik-default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// To get the details of a brand by domain\n\t\t_, err := authentik.LookupBrand(ctx, \u0026authentik.LookupBrandArgs{\n\t\t\tDomain: pulumi.StringRef(\"authentik-default\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetBrandArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // To get the details of a brand by domain\n        final var authentik-default = AuthentikFunctions.getBrand(GetBrandArgs.builder()\n            .domain(\"authentik-default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # To get the details of a brand by domain\n  authentik-default:\n    fn::invoke:\n      Function: authentik:getBrand\n      Arguments:\n        domain: authentik-default\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getBrand.\n",
                "properties": {
                    "brandingFavicon": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "brandingLogo": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "brandingTitle": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Generated.\n"
                    },
                    "defaultApplication": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowAuthentication": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowDeviceCode": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowInvalidation": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowRecovery": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowUnenrollment": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "flowUserSettings": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "webCertificate": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBrand.\n",
                "properties": {
                    "brandingFavicon": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "brandingLogo": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "brandingTitle": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "default": {
                        "description": "Generated.\n",
                        "type": "boolean"
                    },
                    "defaultApplication": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "domain": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "flowAuthentication": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "flowDeviceCode": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "flowInvalidation": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "flowRecovery": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "flowUnenrollment": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "flowUserSettings": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "webCertificate": {
                        "description": "Generated.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "brandingFavicon",
                    "brandingLogo",
                    "brandingTitle",
                    "default",
                    "defaultApplication",
                    "domain",
                    "flowAuthentication",
                    "flowDeviceCode",
                    "flowInvalidation",
                    "flowRecovery",
                    "flowUnenrollment",
                    "flowUserSettings",
                    "webCertificate",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getCertificateKeyPair:getCertificateKeyPair": {
            "description": "Get certificate-key pairs by name\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// To get the the ID and other info about a certificate\nconst generated = authentik.getCertificateKeyPair({\n    name: \"authentik Self-signed Certificate\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\n# To get the the ID and other info about a certificate\ngenerated = authentik.get_certificate_key_pair(name=\"authentik Self-signed Certificate\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // To get the the ID and other info about a certificate\n    var generated = Authentik.GetCertificateKeyPair.Invoke(new()\n    {\n        Name = \"authentik Self-signed Certificate\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// To get the the ID and other info about a certificate\n\t\t_, err := authentik.LookupCertificateKeyPair(ctx, \u0026authentik.LookupCertificateKeyPairArgs{\n\t\t\tName: \"authentik Self-signed Certificate\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetCertificateKeyPairArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // To get the the ID and other info about a certificate\n        final var generated = AuthentikFunctions.getCertificateKeyPair(GetCertificateKeyPairArgs.builder()\n            .name(\"authentik Self-signed Certificate\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # To get the the ID and other info about a certificate\n  generated:\n    fn::invoke:\n      Function: authentik:getCertificateKeyPair\n      Arguments:\n        name: authentik Self-signed Certificate\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCertificateKeyPair.\n",
                "properties": {
                    "fetchCertificate": {
                        "type": "boolean",
                        "description": "If set to true, certificate data will be fetched. Defaults to `true`.\n"
                    },
                    "fetchKey": {
                        "type": "boolean",
                        "description": "If set to true, private key data will be fetched. Defaults to `true`.\n"
                    },
                    "keyData": {
                        "type": "string",
                        "description": "Generated.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCertificateKeyPair.\n",
                "properties": {
                    "certificateData": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "expiry": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "fetchCertificate": {
                        "description": "If set to true, certificate data will be fetched. Defaults to `true`.\n",
                        "type": "boolean"
                    },
                    "fetchKey": {
                        "description": "If set to true, private key data will be fetched. Defaults to `true`.\n",
                        "type": "boolean"
                    },
                    "fingerprint1": {
                        "description": "SHA1-hashed certificate fingerprint Generated.\n",
                        "type": "string"
                    },
                    "fingerprint256": {
                        "description": "SHA256-hashed certificate fingerprint Generated.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "keyData": {
                        "description": "Generated.\n",
                        "secret": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subject": {
                        "description": "Generated.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "certificateData",
                    "expiry",
                    "fingerprint1",
                    "fingerprint256",
                    "id",
                    "keyData",
                    "name",
                    "subject"
                ],
                "type": "object"
            }
        },
        "authentik:index/getFlow:getFlow": {
            "description": "Get flows by Slug and/or designation\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// To get the ID of a flow by slug\nconst default-authorization-flow = authentik.getFlow({\n    slug: \"default-provider-authorization-implicit-consent\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\n# To get the ID of a flow by slug\ndefault_authorization_flow = authentik.get_flow(slug=\"default-provider-authorization-implicit-consent\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // To get the ID of a flow by slug\n    var default_authorization_flow = Authentik.GetFlow.Invoke(new()\n    {\n        Slug = \"default-provider-authorization-implicit-consent\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// To get the ID of a flow by slug\n\t\t_, err := authentik.LookupFlow(ctx, \u0026authentik.LookupFlowArgs{\n\t\t\tSlug: pulumi.StringRef(\"default-provider-authorization-implicit-consent\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetFlowArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // To get the ID of a flow by slug\n        final var default-authorization-flow = AuthentikFunctions.getFlow(GetFlowArgs.builder()\n            .slug(\"default-provider-authorization-implicit-consent\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # To get the ID of a flow by slug\n  default-authorization-flow:\n    fn::invoke:\n      Function: authentik:getFlow\n      Arguments:\n        slug: default-provider-authorization-implicit-consent\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFlow.\n",
                "properties": {
                    "authentication": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "designation": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFlow.\n",
                "properties": {
                    "authentication": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "designation": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "title": {
                        "description": "Generated.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "authentication",
                    "designation",
                    "name",
                    "slug",
                    "title",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getGroup:getGroup": {
            "description": "Get groups by pk or name\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// To get the ID of a group by name\nconst admins = authentik.getGroup({\n    name: \"authentik Admins\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\n# To get the ID of a group by name\nadmins = authentik.get_group(name=\"authentik Admins\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // To get the ID of a group by name\n    var admins = Authentik.GetGroup.Invoke(new()\n    {\n        Name = \"authentik Admins\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// To get the ID of a group by name\n\t\t_, err := authentik.LookupGroup(ctx, \u0026authentik.LookupGroupArgs{\n\t\t\tName: pulumi.StringRef(\"authentik Admins\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // To get the ID of a group by name\n        final var admins = AuthentikFunctions.getGroup(GetGroupArgs.builder()\n            .name(\"authentik Admins\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # To get the ID of a group by name\n  admins:\n    fn::invoke:\n      Function: authentik:getGroup\n      Arguments:\n        name: authentik Admins\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "includeUsers": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pk": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "attributes": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "includeUsers": {
                        "type": "boolean"
                    },
                    "isSuperuser": {
                        "description": "Generated.\n",
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "numPk": {
                        "description": "Generated.\n",
                        "type": "integer"
                    },
                    "parent": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "parentName": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "pk": {
                        "type": "string"
                    },
                    "users": {
                        "description": "Generated.\n",
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "usersObjs": {
                        "description": "Generated.\n",
                        "items": {
                            "$ref": "#/types/authentik:index/getGroupUsersObj:getGroupUsersObj"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "attributes",
                    "isSuperuser",
                    "numPk",
                    "parent",
                    "parentName",
                    "users",
                    "usersObjs",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getGroups:getGroups": {
            "description": "Get groups list\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// To get the complete groups list\nconst all = authentik.getGroups({});\n// Or, to filter according to a specific field\nconst admins = authentik.getGroups({\n    isSuperuser: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\n# To get the complete groups list\nall = authentik.get_groups()\n# Or, to filter according to a specific field\nadmins = authentik.get_groups(is_superuser=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // To get the complete groups list\n    var all = Authentik.GetGroups.Invoke();\n\n    // Or, to filter according to a specific field\n    var admins = Authentik.GetGroups.Invoke(new()\n    {\n        IsSuperuser = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// To get the complete groups list\n\t\t_, err := authentik.GetGroups(ctx, \u0026authentik.GetGroupsArgs{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Or, to filter according to a specific field\n\t\t_, err = authentik.GetGroups(ctx, \u0026authentik.GetGroupsArgs{\n\t\t\tIsSuperuser: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetGroupsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // To get the complete groups list\n        final var all = AuthentikFunctions.getGroups();\n\n        // Or, to filter according to a specific field\n        final var admins = AuthentikFunctions.getGroups(GetGroupsArgs.builder()\n            .isSuperuser(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # To get the complete groups list\n  all: # Then use `data.authentik_groups.all.groups`\n    fn::invoke:\n      Function: authentik:getGroups\n      Arguments: {}\n  # Or, to filter according to a specific field\n  admins:\n    fn::invoke:\n      Function: authentik:getGroups\n      Arguments:\n        isSuperuser: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGroups.\n",
                "properties": {
                    "attributes": {
                        "type": "string"
                    },
                    "includeUsers": {
                        "type": "boolean"
                    },
                    "isSuperuser": {
                        "type": "boolean"
                    },
                    "membersByPks": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "membersByUsernames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "ordering": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroups.\n",
                "properties": {
                    "attributes": {
                        "type": "string"
                    },
                    "groups": {
                        "description": "Generated.\n",
                        "items": {
                            "$ref": "#/types/authentik:index/getGroupsGroup:getGroupsGroup"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "includeUsers": {
                        "type": "boolean"
                    },
                    "isSuperuser": {
                        "type": "boolean"
                    },
                    "membersByPks": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "membersByUsernames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ordering": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    }
                },
                "required": [
                    "groups",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getPropertyMappingProviderRac:getPropertyMappingProviderRac": {
            "description": "Get RAC Provider Property mappings\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyMappingProviderRac.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrieve multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "settings": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyMappingProviderRac.\n",
                "properties": {
                    "expression": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "description": "List of ids when `managed_list` is set. Generated.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "description": "Retrieve multiple property mappings\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "settings": {
                        "description": "Generated.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "expression",
                    "ids",
                    "settings",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getPropertyMappingProviderRadius:getPropertyMappingProviderRadius": {
            "description": "Get Radius Provider Property mappings\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyMappingProviderRadius.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrieve multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyMappingProviderRadius.\n",
                "properties": {
                    "expression": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "description": "List of ids when `managed_list` is set. Generated.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "description": "Retrieve multiple property mappings\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "expression",
                    "ids",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getPropertyMappingProviderSaml:getPropertyMappingProviderSaml": {
            "description": "Get SAML Provider Property mappings\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyMappingProviderSaml.\n",
                "properties": {
                    "expression": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "friendlyName": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrieve multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "samlName": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyMappingProviderSaml.\n",
                "properties": {
                    "expression": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "friendlyName": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "description": "List of ids when `managed_list` is set. Generated.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "description": "Retrieve multiple property mappings\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "samlName": {
                        "description": "Generated.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "expression",
                    "friendlyName",
                    "ids",
                    "samlName",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getPropertyMappingProviderScim:getPropertyMappingProviderScim": {
            "description": "Get SCIM Provider Property mappings\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyMappingProviderScim.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrieve multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyMappingProviderScim.\n",
                "properties": {
                    "expression": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "description": "List of ids when `managed_list` is set. Generated.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "description": "Retrieve multiple property mappings\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "expression",
                    "ids",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getPropertyMappingProviderScope:getPropertyMappingProviderScope": {
            "description": "Get OAuth Provider Scope Property mappings\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyMappingProviderScope.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrieve multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scopeName": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyMappingProviderScope.\n",
                "properties": {
                    "description": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "expression": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "description": "List of ids when `managed_list` is set. Generated.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "description": "Retrieve multiple property mappings\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scopeName": {
                        "description": "Generated.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "expression",
                    "ids",
                    "scopeName",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getPropertyMappingSourceLdap:getPropertyMappingSourceLdap": {
            "description": "Get LDAP Source Property mappings\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyMappingSourceLdap.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids when `managed_list` is set. Generated.\n"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Retrieve multiple property mappings\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyMappingSourceLdap.\n",
                "properties": {
                    "expression": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "description": "List of ids when `managed_list` is set. Generated.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "managed": {
                        "type": "string"
                    },
                    "managedLists": {
                        "description": "Retrieve multiple property mappings\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "expression",
                    "ids",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getProviderOauth2Config:getProviderOauth2Config": {
            "description": "Get OAuth2 provider config\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProviderOauth2Config.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Find provider by name\n"
                    },
                    "providerId": {
                        "type": "integer",
                        "description": "Find provider by ID\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProviderOauth2Config.\n",
                "properties": {
                    "authorizeUrl": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "issuerUrl": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "jwksUrl": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "logoutUrl": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Find provider by name\n",
                        "type": "string"
                    },
                    "providerId": {
                        "description": "Find provider by ID\n",
                        "type": "integer"
                    },
                    "providerInfoUrl": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "tokenUrl": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "userInfoUrl": {
                        "description": "Generated.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "authorizeUrl",
                    "issuerUrl",
                    "jwksUrl",
                    "logoutUrl",
                    "providerInfoUrl",
                    "tokenUrl",
                    "userInfoUrl",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getProviderSamlMetadata:getProviderSamlMetadata": {
            "description": "Get SAML Provider metadata\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProviderSamlMetadata.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Find provider by name\n"
                    },
                    "providerId": {
                        "type": "integer",
                        "description": "Find provider by ID\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProviderSamlMetadata.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "SAML Metadata Generated.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Find provider by name\n",
                        "type": "string"
                    },
                    "providerId": {
                        "description": "Find provider by ID\n",
                        "type": "integer"
                    }
                },
                "required": [
                    "metadata",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getSource:getSource": {
            "description": "Get Source by name, slug or managed\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\nconst inbuilt = authentik.getSource({\n    managed: \"goauthentik.io/sources/inbuilt\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\ninbuilt = authentik.get_source(managed=\"goauthentik.io/sources/inbuilt\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var inbuilt = Authentik.GetSource.Invoke(new()\n    {\n        Managed = \"goauthentik.io/sources/inbuilt\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := authentik.GetSource(ctx, \u0026authentik.GetSourceArgs{\n\t\t\tManaged: pulumi.StringRef(\"goauthentik.io/sources/inbuilt\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetSourceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var inbuilt = AuthentikFunctions.getSource(GetSourceArgs.builder()\n            .managed(\"goauthentik.io/sources/inbuilt\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  inbuilt:\n    fn::invoke:\n      Function: authentik:getSource\n      Arguments:\n        managed: goauthentik.io/sources/inbuilt\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSource.\n",
                "properties": {
                    "managed": {
                        "type": "string",
                        "description": "Generated.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSource.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "managed": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Generated.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "managed",
                    "name",
                    "slug",
                    "uuid",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getStage:getStage": {
            "description": "Get stages by name\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// To get the ID of a stage by name\nconst default-authentication-identification = authentik.getStage({\n    name: \"default-authentication-identification\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\n# To get the ID of a stage by name\ndefault_authentication_identification = authentik.get_stage(name=\"default-authentication-identification\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // To get the ID of a stage by name\n    var default_authentication_identification = Authentik.GetStage.Invoke(new()\n    {\n        Name = \"default-authentication-identification\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// To get the ID of a stage by name\n\t\t_, err := authentik.GetStage(ctx, \u0026authentik.GetStageArgs{\n\t\t\tName: pulumi.StringRef(\"default-authentication-identification\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetStageArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // To get the ID of a stage by name\n        final var default-authentication-identification = AuthentikFunctions.getStage(GetStageArgs.builder()\n            .name(\"default-authentication-identification\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # To get the ID of a stage by name\n  default-authentication-identification:\n    fn::invoke:\n      Function: authentik:getStage\n      Arguments:\n        name: default-authentication-identification\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getStage.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getStage.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Generated.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getUser:getUser": {
            "description": "Get users by pk or username\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// To get the name of a user by username\nconst akadmin = authentik.getUser({\n    username: \"akadmin\",\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\n# To get the name of a user by username\nakadmin = authentik.get_user(username=\"akadmin\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // To get the name of a user by username\n    var akadmin = Authentik.GetUser.Invoke(new()\n    {\n        Username = \"akadmin\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// To get the name of a user by username\n\t\t_, err := authentik.LookupUser(ctx, \u0026authentik.LookupUserArgs{\n\t\t\tUsername: pulumi.StringRef(\"akadmin\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // To get the name of a user by username\n        final var akadmin = AuthentikFunctions.getUser(GetUserArgs.builder()\n            .username(\"akadmin\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # To get the name of a user by username\n  akadmin:\n    fn::invoke:\n      Function: authentik:getUser\n      Arguments:\n        username: akadmin\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "description": "Generated.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "attributes": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "avatar": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "email": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "groups": {
                        "description": "Generated.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "isActive": {
                        "description": "Generated.\n",
                        "type": "boolean"
                    },
                    "isSuperuser": {
                        "description": "Generated.\n",
                        "type": "boolean"
                    },
                    "lastLogin": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "path": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "pk": {
                        "description": "Generated.\n",
                        "type": "integer"
                    },
                    "type": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "uid": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "username": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Generated.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "attributes",
                    "avatar",
                    "email",
                    "groups",
                    "isActive",
                    "isSuperuser",
                    "lastLogin",
                    "name",
                    "path",
                    "pk",
                    "type",
                    "uid",
                    "username",
                    "uuid",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getUsers:getUsers": {
            "description": "Get users list\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as authentik from \"@pulumi/authentik\";\n\n// To get the complete users list\nconst all = authentik.getUsers({});\n// Or, to filter according to a specific field\nconst admins = authentik.getUsers({\n    isSuperuser: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_authentik as authentik\n\n# To get the complete users list\nall = authentik.get_users()\n# Or, to filter according to a specific field\nadmins = authentik.get_users(is_superuser=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Authentik = Pulumi.Authentik;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // To get the complete users list\n    var all = Authentik.GetUsers.Invoke();\n\n    // Or, to filter according to a specific field\n    var admins = Authentik.GetUsers.Invoke(new()\n    {\n        IsSuperuser = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// To get the complete users list\n\t\t_, err := authentik.GetUsers(ctx, \u0026authentik.GetUsersArgs{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Or, to filter according to a specific field\n\t\t_, err = authentik.GetUsers(ctx, \u0026authentik.GetUsersArgs{\n\t\t\tIsSuperuser: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.authentik.AuthentikFunctions;\nimport com.pulumi.authentik.inputs.GetUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // To get the complete users list\n        final var all = AuthentikFunctions.getUsers();\n\n        // Or, to filter according to a specific field\n        final var admins = AuthentikFunctions.getUsers(GetUsersArgs.builder()\n            .isSuperuser(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # To get the complete users list\n  all: # Then use `data.authentik_users.all.users`\n    fn::invoke:\n      Function: authentik:getUsers\n      Arguments: {}\n  # Or, to filter according to a specific field\n  admins:\n    fn::invoke:\n      Function: authentik:getUsers\n      Arguments:\n        isSuperuser: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "attributes": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "groupsByNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groupsByPks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isSuperuser": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ordering": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "pathStartswith": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "attributes": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "groupsByNames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "groupsByPks": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isSuperuser": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ordering": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "pathStartswith": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "users": {
                        "description": "Generated.\n",
                        "items": {
                            "$ref": "#/types/authentik:index/getUsersUser:getUsersUser"
                        },
                        "type": "array"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "required": [
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "authentik:index/getWebauthnDeviceType:getWebauthnDeviceType": {
            "inputs": {
                "description": "A collection of arguments for invoking getWebauthnDeviceType.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Generated.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getWebauthnDeviceType.\n",
                "properties": {
                    "aaguid": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "description": {
                        "description": "Generated.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "aaguid",
                    "description",
                    "id"
                ],
                "type": "object"
            }
        }
    }
}