// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace OSMIT_GmbH.Authentik
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Authentik = OSMIT_GmbH.Authentik;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Assign a global permission to a user
    ///     var nameUser = new Authentik.User("nameUser", new()
    ///     {
    ///         Username = "user",
    ///     });
    /// 
    ///     var global_permissionRbacPermissionUser = new Authentik.RbacPermissionUser("global-permissionRbacPermissionUser", new()
    ///     {
    ///         User = nameUser.Id,
    ///         Permission = "authentik_flows.inspect_flow",
    ///     });
    /// 
    ///     // Assign an object permission to a user
    ///     var flow = new Authentik.Flow("flow", new()
    ///     {
    ///         Title = "Test flow",
    ///         Slug = "test-flow",
    ///         Designation = "authorization",
    ///     });
    /// 
    ///     var nameIndex_userUser = new Authentik.User("nameIndex/userUser", new()
    ///     {
    ///         Username = "user",
    ///     });
    /// 
    ///     var global_permissionIndex_rbacPermissionUserRbacPermissionUser = new Authentik.RbacPermissionUser("global-permissionIndex/rbacPermissionUserRbacPermissionUser", new()
    ///     {
    ///         User = nameUser.Id,
    ///         Model = "authentik_flows.flow",
    ///         Permission = "inspect_flow",
    ///         ObjectId = flow.Uuid,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AuthentikResourceType("authentik:index/rbacPermissionUser:RbacPermissionUser")]
    public partial class RbacPermissionUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Allowed values: - `authentik_tenants.domain` - `authentik_crypto.certificatekeypair` - `authentik_flows.flow` -
        /// `authentik_flows.flowstagebinding` - `authentik_outposts.dockerserviceconnection` -
        /// `authentik_outposts.kubernetesserviceconnection` - `authentik_outposts.outpost` - `authentik_policies_dummy.dummypolicy`
        /// - `authentik_policies_event_matcher.eventmatcherpolicy` - `authentik_policies_expiry.passwordexpirypolicy` -
        /// `authentik_policies_expression.expressionpolicy` - `authentik_policies_geoip.geoippolicy` -
        /// `authentik_policies_password.passwordpolicy` - `authentik_policies_reputation.reputationpolicy` -
        /// `authentik_policies.policybinding` - `authentik_providers_ldap.ldapprovider` - `authentik_providers_oauth2.scopemapping`
        /// - `authentik_providers_oauth2.oauth2provider` - `authentik_providers_proxy.proxyprovider` -
        /// `authentik_providers_radius.radiusprovider` - `authentik_providers_radius.radiusproviderpropertymapping` -
        /// `authentik_providers_saml.samlprovider` - `authentik_providers_saml.samlpropertymapping` -
        /// `authentik_providers_scim.scimprovider` - `authentik_providers_scim.scimmapping` - `authentik_rbac.role` -
        /// `authentik_sources_kerberos.kerberossource` - `authentik_sources_kerberos.kerberossourcepropertymapping` -
        /// `authentik_sources_kerberos.userkerberossourceconnection` - `authentik_sources_kerberos.groupkerberossourceconnection` -
        /// `authentik_sources_ldap.ldapsource` - `authentik_sources_ldap.ldapsourcepropertymapping` -
        /// `authentik_sources_oauth.oauthsource` - `authentik_sources_oauth.oauthsourcepropertymapping` -
        /// `authentik_sources_oauth.useroauthsourceconnection` - `authentik_sources_oauth.groupoauthsourceconnection` -
        /// `authentik_sources_plex.plexsource` - `authentik_sources_plex.plexsourcepropertymapping` -
        /// `authentik_sources_plex.userplexsourceconnection` - `authentik_sources_plex.groupplexsourceconnection` -
        /// `authentik_sources_saml.samlsource` - `authentik_sources_saml.samlsourcepropertymapping` -
        /// `authentik_sources_saml.usersamlsourceconnection` - `authentik_sources_saml.groupsamlsourceconnection` -
        /// `authentik_sources_scim.scimsource` - `authentik_sources_scim.scimsourcepropertymapping` -
        /// `authentik_stages_authenticator_duo.authenticatorduostage` - `authentik_stages_authenticator_duo.duodevice` -
        /// `authentik_stages_authenticator_sms.authenticatorsmsstage` - `authentik_stages_authenticator_sms.smsdevice` -
        /// `authentik_stages_authenticator_static.authenticatorstaticstage` - `authentik_stages_authenticator_static.staticdevice`
        /// - `authentik_stages_authenticator_totp.authenticatortotpstage` - `authentik_stages_authenticator_totp.totpdevice` -
        /// `authentik_stages_authenticator_validate.authenticatorvalidatestage` -
        /// `authentik_stages_authenticator_webauthn.authenticatorwebauthnstage` -
        /// `authentik_stages_authenticator_webauthn.webauthndevice` - `authentik_stages_captcha.captchastage` -
        /// `authentik_stages_consent.consentstage` - `authentik_stages_consent.userconsent` - `authentik_stages_deny.denystage` -
        /// `authentik_stages_dummy.dummystage` - `authentik_stages_email.emailstage` -
        /// `authentik_stages_identification.identificationstage` - `authentik_stages_invitation.invitationstage` -
        /// `authentik_stages_invitation.invitation` - `authentik_stages_password.passwordstage` - `authentik_stages_prompt.prompt`
        /// - `authentik_stages_prompt.promptstage` - `authentik_stages_user_delete.userdeletestage` -
        /// `authentik_stages_user_login.userloginstage` - `authentik_stages_user_logout.userlogoutstage` -
        /// `authentik_stages_user_write.userwritestage` - `authentik_brands.brand` - `authentik_blueprints.blueprintinstance` -
        /// `authentik_core.group` - `authentik_core.user` - `authentik_core.application` - `authentik_core.token` -
        /// `authentik_enterprise.license` - `authentik_providers_google_workspace.googleworkspaceprovider` -
        /// `authentik_providers_google_workspace.googleworkspaceprovidermapping` -
        /// `authentik_providers_microsoft_entra.microsoftentraprovider` -
        /// `authentik_providers_microsoft_entra.microsoftentraprovidermapping` - `authentik_providers_rac.racprovider` -
        /// `authentik_providers_rac.endpoint` - `authentik_providers_rac.racpropertymapping` -
        /// `authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage` - `authentik_stages_source.sourcestage` -
        /// `authentik_events.event` - `authentik_events.notificationtransport` - `authentik_events.notification` -
        /// `authentik_events.notificationrule` - `authentik_events.notificationwebhookmapping`
        /// </summary>
        [Output("model")]
        public Output<string?> Model { get; private set; } = null!;

        [Output("objectId")]
        public Output<string?> ObjectId { get; private set; } = null!;

        [Output("permission")]
        public Output<string> Permission { get; private set; } = null!;

        [Output("user")]
        public Output<int> User { get; private set; } = null!;


        /// <summary>
        /// Create a RbacPermissionUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RbacPermissionUser(string name, RbacPermissionUserArgs args, CustomResourceOptions? options = null)
            : base("authentik:index/rbacPermissionUser:RbacPermissionUser", name, args ?? new RbacPermissionUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RbacPermissionUser(string name, Input<string> id, RbacPermissionUserState? state = null, CustomResourceOptions? options = null)
            : base("authentik:index/rbacPermissionUser:RbacPermissionUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/OSMIT-GmbH/pulumi-authentik/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RbacPermissionUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RbacPermissionUser Get(string name, Input<string> id, RbacPermissionUserState? state = null, CustomResourceOptions? options = null)
        {
            return new RbacPermissionUser(name, id, state, options);
        }
    }

    public sealed class RbacPermissionUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allowed values: - `authentik_tenants.domain` - `authentik_crypto.certificatekeypair` - `authentik_flows.flow` -
        /// `authentik_flows.flowstagebinding` - `authentik_outposts.dockerserviceconnection` -
        /// `authentik_outposts.kubernetesserviceconnection` - `authentik_outposts.outpost` - `authentik_policies_dummy.dummypolicy`
        /// - `authentik_policies_event_matcher.eventmatcherpolicy` - `authentik_policies_expiry.passwordexpirypolicy` -
        /// `authentik_policies_expression.expressionpolicy` - `authentik_policies_geoip.geoippolicy` -
        /// `authentik_policies_password.passwordpolicy` - `authentik_policies_reputation.reputationpolicy` -
        /// `authentik_policies.policybinding` - `authentik_providers_ldap.ldapprovider` - `authentik_providers_oauth2.scopemapping`
        /// - `authentik_providers_oauth2.oauth2provider` - `authentik_providers_proxy.proxyprovider` -
        /// `authentik_providers_radius.radiusprovider` - `authentik_providers_radius.radiusproviderpropertymapping` -
        /// `authentik_providers_saml.samlprovider` - `authentik_providers_saml.samlpropertymapping` -
        /// `authentik_providers_scim.scimprovider` - `authentik_providers_scim.scimmapping` - `authentik_rbac.role` -
        /// `authentik_sources_kerberos.kerberossource` - `authentik_sources_kerberos.kerberossourcepropertymapping` -
        /// `authentik_sources_kerberos.userkerberossourceconnection` - `authentik_sources_kerberos.groupkerberossourceconnection` -
        /// `authentik_sources_ldap.ldapsource` - `authentik_sources_ldap.ldapsourcepropertymapping` -
        /// `authentik_sources_oauth.oauthsource` - `authentik_sources_oauth.oauthsourcepropertymapping` -
        /// `authentik_sources_oauth.useroauthsourceconnection` - `authentik_sources_oauth.groupoauthsourceconnection` -
        /// `authentik_sources_plex.plexsource` - `authentik_sources_plex.plexsourcepropertymapping` -
        /// `authentik_sources_plex.userplexsourceconnection` - `authentik_sources_plex.groupplexsourceconnection` -
        /// `authentik_sources_saml.samlsource` - `authentik_sources_saml.samlsourcepropertymapping` -
        /// `authentik_sources_saml.usersamlsourceconnection` - `authentik_sources_saml.groupsamlsourceconnection` -
        /// `authentik_sources_scim.scimsource` - `authentik_sources_scim.scimsourcepropertymapping` -
        /// `authentik_stages_authenticator_duo.authenticatorduostage` - `authentik_stages_authenticator_duo.duodevice` -
        /// `authentik_stages_authenticator_sms.authenticatorsmsstage` - `authentik_stages_authenticator_sms.smsdevice` -
        /// `authentik_stages_authenticator_static.authenticatorstaticstage` - `authentik_stages_authenticator_static.staticdevice`
        /// - `authentik_stages_authenticator_totp.authenticatortotpstage` - `authentik_stages_authenticator_totp.totpdevice` -
        /// `authentik_stages_authenticator_validate.authenticatorvalidatestage` -
        /// `authentik_stages_authenticator_webauthn.authenticatorwebauthnstage` -
        /// `authentik_stages_authenticator_webauthn.webauthndevice` - `authentik_stages_captcha.captchastage` -
        /// `authentik_stages_consent.consentstage` - `authentik_stages_consent.userconsent` - `authentik_stages_deny.denystage` -
        /// `authentik_stages_dummy.dummystage` - `authentik_stages_email.emailstage` -
        /// `authentik_stages_identification.identificationstage` - `authentik_stages_invitation.invitationstage` -
        /// `authentik_stages_invitation.invitation` - `authentik_stages_password.passwordstage` - `authentik_stages_prompt.prompt`
        /// - `authentik_stages_prompt.promptstage` - `authentik_stages_user_delete.userdeletestage` -
        /// `authentik_stages_user_login.userloginstage` - `authentik_stages_user_logout.userlogoutstage` -
        /// `authentik_stages_user_write.userwritestage` - `authentik_brands.brand` - `authentik_blueprints.blueprintinstance` -
        /// `authentik_core.group` - `authentik_core.user` - `authentik_core.application` - `authentik_core.token` -
        /// `authentik_enterprise.license` - `authentik_providers_google_workspace.googleworkspaceprovider` -
        /// `authentik_providers_google_workspace.googleworkspaceprovidermapping` -
        /// `authentik_providers_microsoft_entra.microsoftentraprovider` -
        /// `authentik_providers_microsoft_entra.microsoftentraprovidermapping` - `authentik_providers_rac.racprovider` -
        /// `authentik_providers_rac.endpoint` - `authentik_providers_rac.racpropertymapping` -
        /// `authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage` - `authentik_stages_source.sourcestage` -
        /// `authentik_events.event` - `authentik_events.notificationtransport` - `authentik_events.notification` -
        /// `authentik_events.notificationrule` - `authentik_events.notificationwebhookmapping`
        /// </summary>
        [Input("model")]
        public Input<string>? Model { get; set; }

        [Input("objectId")]
        public Input<string>? ObjectId { get; set; }

        [Input("permission", required: true)]
        public Input<string> Permission { get; set; } = null!;

        [Input("user", required: true)]
        public Input<int> User { get; set; } = null!;

        public RbacPermissionUserArgs()
        {
        }
        public static new RbacPermissionUserArgs Empty => new RbacPermissionUserArgs();
    }

    public sealed class RbacPermissionUserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allowed values: - `authentik_tenants.domain` - `authentik_crypto.certificatekeypair` - `authentik_flows.flow` -
        /// `authentik_flows.flowstagebinding` - `authentik_outposts.dockerserviceconnection` -
        /// `authentik_outposts.kubernetesserviceconnection` - `authentik_outposts.outpost` - `authentik_policies_dummy.dummypolicy`
        /// - `authentik_policies_event_matcher.eventmatcherpolicy` - `authentik_policies_expiry.passwordexpirypolicy` -
        /// `authentik_policies_expression.expressionpolicy` - `authentik_policies_geoip.geoippolicy` -
        /// `authentik_policies_password.passwordpolicy` - `authentik_policies_reputation.reputationpolicy` -
        /// `authentik_policies.policybinding` - `authentik_providers_ldap.ldapprovider` - `authentik_providers_oauth2.scopemapping`
        /// - `authentik_providers_oauth2.oauth2provider` - `authentik_providers_proxy.proxyprovider` -
        /// `authentik_providers_radius.radiusprovider` - `authentik_providers_radius.radiusproviderpropertymapping` -
        /// `authentik_providers_saml.samlprovider` - `authentik_providers_saml.samlpropertymapping` -
        /// `authentik_providers_scim.scimprovider` - `authentik_providers_scim.scimmapping` - `authentik_rbac.role` -
        /// `authentik_sources_kerberos.kerberossource` - `authentik_sources_kerberos.kerberossourcepropertymapping` -
        /// `authentik_sources_kerberos.userkerberossourceconnection` - `authentik_sources_kerberos.groupkerberossourceconnection` -
        /// `authentik_sources_ldap.ldapsource` - `authentik_sources_ldap.ldapsourcepropertymapping` -
        /// `authentik_sources_oauth.oauthsource` - `authentik_sources_oauth.oauthsourcepropertymapping` -
        /// `authentik_sources_oauth.useroauthsourceconnection` - `authentik_sources_oauth.groupoauthsourceconnection` -
        /// `authentik_sources_plex.plexsource` - `authentik_sources_plex.plexsourcepropertymapping` -
        /// `authentik_sources_plex.userplexsourceconnection` - `authentik_sources_plex.groupplexsourceconnection` -
        /// `authentik_sources_saml.samlsource` - `authentik_sources_saml.samlsourcepropertymapping` -
        /// `authentik_sources_saml.usersamlsourceconnection` - `authentik_sources_saml.groupsamlsourceconnection` -
        /// `authentik_sources_scim.scimsource` - `authentik_sources_scim.scimsourcepropertymapping` -
        /// `authentik_stages_authenticator_duo.authenticatorduostage` - `authentik_stages_authenticator_duo.duodevice` -
        /// `authentik_stages_authenticator_sms.authenticatorsmsstage` - `authentik_stages_authenticator_sms.smsdevice` -
        /// `authentik_stages_authenticator_static.authenticatorstaticstage` - `authentik_stages_authenticator_static.staticdevice`
        /// - `authentik_stages_authenticator_totp.authenticatortotpstage` - `authentik_stages_authenticator_totp.totpdevice` -
        /// `authentik_stages_authenticator_validate.authenticatorvalidatestage` -
        /// `authentik_stages_authenticator_webauthn.authenticatorwebauthnstage` -
        /// `authentik_stages_authenticator_webauthn.webauthndevice` - `authentik_stages_captcha.captchastage` -
        /// `authentik_stages_consent.consentstage` - `authentik_stages_consent.userconsent` - `authentik_stages_deny.denystage` -
        /// `authentik_stages_dummy.dummystage` - `authentik_stages_email.emailstage` -
        /// `authentik_stages_identification.identificationstage` - `authentik_stages_invitation.invitationstage` -
        /// `authentik_stages_invitation.invitation` - `authentik_stages_password.passwordstage` - `authentik_stages_prompt.prompt`
        /// - `authentik_stages_prompt.promptstage` - `authentik_stages_user_delete.userdeletestage` -
        /// `authentik_stages_user_login.userloginstage` - `authentik_stages_user_logout.userlogoutstage` -
        /// `authentik_stages_user_write.userwritestage` - `authentik_brands.brand` - `authentik_blueprints.blueprintinstance` -
        /// `authentik_core.group` - `authentik_core.user` - `authentik_core.application` - `authentik_core.token` -
        /// `authentik_enterprise.license` - `authentik_providers_google_workspace.googleworkspaceprovider` -
        /// `authentik_providers_google_workspace.googleworkspaceprovidermapping` -
        /// `authentik_providers_microsoft_entra.microsoftentraprovider` -
        /// `authentik_providers_microsoft_entra.microsoftentraprovidermapping` - `authentik_providers_rac.racprovider` -
        /// `authentik_providers_rac.endpoint` - `authentik_providers_rac.racpropertymapping` -
        /// `authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage` - `authentik_stages_source.sourcestage` -
        /// `authentik_events.event` - `authentik_events.notificationtransport` - `authentik_events.notification` -
        /// `authentik_events.notificationrule` - `authentik_events.notificationwebhookmapping`
        /// </summary>
        [Input("model")]
        public Input<string>? Model { get; set; }

        [Input("objectId")]
        public Input<string>? ObjectId { get; set; }

        [Input("permission")]
        public Input<string>? Permission { get; set; }

        [Input("user")]
        public Input<int>? User { get; set; }

        public RbacPermissionUserState()
        {
        }
        public static new RbacPermissionUserState Empty => new RbacPermissionUserState();
    }
}
