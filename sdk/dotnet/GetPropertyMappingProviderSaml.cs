// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace OSMIT_GmbH.Authentik
{
    public static class GetPropertyMappingProviderSaml
    {
        /// <summary>
        /// Get SAML Provider Property mappings
        /// </summary>
        public static Task<GetPropertyMappingProviderSamlResult> InvokeAsync(GetPropertyMappingProviderSamlArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPropertyMappingProviderSamlResult>("authentik:index/getPropertyMappingProviderSaml:getPropertyMappingProviderSaml", args ?? new GetPropertyMappingProviderSamlArgs(), options.WithDefaults());

        /// <summary>
        /// Get SAML Provider Property mappings
        /// </summary>
        public static Output<GetPropertyMappingProviderSamlResult> Invoke(GetPropertyMappingProviderSamlInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPropertyMappingProviderSamlResult>("authentik:index/getPropertyMappingProviderSaml:getPropertyMappingProviderSaml", args ?? new GetPropertyMappingProviderSamlInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPropertyMappingProviderSamlArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Generated.
        /// </summary>
        [Input("expression")]
        public string? Expression { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("friendlyName")]
        public string? FriendlyName { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// List of ids when `managed_list` is set. Generated.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("managed")]
        public string? Managed { get; set; }

        [Input("managedLists")]
        private List<string>? _managedLists;

        /// <summary>
        /// Retrieve multiple property mappings
        /// </summary>
        public List<string> ManagedLists
        {
            get => _managedLists ?? (_managedLists = new List<string>());
            set => _managedLists = value;
        }

        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("samlName")]
        public string? SamlName { get; set; }

        public GetPropertyMappingProviderSamlArgs()
        {
        }
        public static new GetPropertyMappingProviderSamlArgs Empty => new GetPropertyMappingProviderSamlArgs();
    }

    public sealed class GetPropertyMappingProviderSamlInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Generated.
        /// </summary>
        [Input("expression")]
        public Input<string>? Expression { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// List of ids when `managed_list` is set. Generated.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("managed")]
        public Input<string>? Managed { get; set; }

        [Input("managedLists")]
        private InputList<string>? _managedLists;

        /// <summary>
        /// Retrieve multiple property mappings
        /// </summary>
        public InputList<string> ManagedLists
        {
            get => _managedLists ?? (_managedLists = new InputList<string>());
            set => _managedLists = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("samlName")]
        public Input<string>? SamlName { get; set; }

        public GetPropertyMappingProviderSamlInvokeArgs()
        {
        }
        public static new GetPropertyMappingProviderSamlInvokeArgs Empty => new GetPropertyMappingProviderSamlInvokeArgs();
    }


    [OutputType]
    public sealed class GetPropertyMappingProviderSamlResult
    {
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string Expression;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string FriendlyName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of ids when `managed_list` is set. Generated.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? Managed;
        /// <summary>
        /// Retrieve multiple property mappings
        /// </summary>
        public readonly ImmutableArray<string> ManagedLists;
        public readonly string? Name;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string SamlName;

        [OutputConstructor]
        private GetPropertyMappingProviderSamlResult(
            string expression,

            string friendlyName,

            string id,

            ImmutableArray<string> ids,

            string? managed,

            ImmutableArray<string> managedLists,

            string? name,

            string samlName)
        {
            Expression = expression;
            FriendlyName = friendlyName;
            Id = id;
            Ids = ids;
            Managed = managed;
            ManagedLists = managedLists;
            Name = name;
            SamlName = samlName;
        }
    }
}
