// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace OSMIT_GmbH.Authentik
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Authentik = OSMIT_GmbH.Authentik;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a flow with a stage attached
    ///     var name = new Authentik.StageDummy("name", new()
    ///     {
    ///         Name = "test-stage",
    ///     });
    /// 
    ///     var flow = new Authentik.Flow("flow", new()
    ///     {
    ///         Name = "test-flow",
    ///         Title = "Test flow",
    ///         Slug = "test-flow",
    ///         Designation = "authorization",
    ///     });
    /// 
    ///     var dummy_flow = new Authentik.FlowStageBinding("dummy-flow", new()
    ///     {
    ///         Target = flow.Uuid,
    ///         Stage = name.Id,
    ///         Order = 0,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AuthentikResourceType("authentik:index/flowStageBinding:FlowStageBinding")]
    public partial class FlowStageBinding : global::Pulumi.CustomResource
    {
        [Output("evaluateOnPlan")]
        public Output<bool?> EvaluateOnPlan { get; private set; } = null!;

        /// <summary>
        /// Allowed values: - `retry` - `restart` - `restart_with_context`
        /// </summary>
        [Output("invalidResponseAction")]
        public Output<string?> InvalidResponseAction { get; private set; } = null!;

        [Output("order")]
        public Output<int> Order { get; private set; } = null!;

        /// <summary>
        /// Allowed values: - `all` - `any`
        /// </summary>
        [Output("policyEngineMode")]
        public Output<string?> PolicyEngineMode { get; private set; } = null!;

        [Output("reEvaluatePolicies")]
        public Output<bool?> ReEvaluatePolicies { get; private set; } = null!;

        [Output("stage")]
        public Output<string> Stage { get; private set; } = null!;

        [Output("target")]
        public Output<string> Target { get; private set; } = null!;


        /// <summary>
        /// Create a FlowStageBinding resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FlowStageBinding(string name, FlowStageBindingArgs args, CustomResourceOptions? options = null)
            : base("authentik:index/flowStageBinding:FlowStageBinding", name, args ?? new FlowStageBindingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FlowStageBinding(string name, Input<string> id, FlowStageBindingState? state = null, CustomResourceOptions? options = null)
            : base("authentik:index/flowStageBinding:FlowStageBinding", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/OSMIT-GmbH/pulumi-authentik/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FlowStageBinding resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FlowStageBinding Get(string name, Input<string> id, FlowStageBindingState? state = null, CustomResourceOptions? options = null)
        {
            return new FlowStageBinding(name, id, state, options);
        }
    }

    public sealed class FlowStageBindingArgs : global::Pulumi.ResourceArgs
    {
        [Input("evaluateOnPlan")]
        public Input<bool>? EvaluateOnPlan { get; set; }

        /// <summary>
        /// Allowed values: - `retry` - `restart` - `restart_with_context`
        /// </summary>
        [Input("invalidResponseAction")]
        public Input<string>? InvalidResponseAction { get; set; }

        [Input("order", required: true)]
        public Input<int> Order { get; set; } = null!;

        /// <summary>
        /// Allowed values: - `all` - `any`
        /// </summary>
        [Input("policyEngineMode")]
        public Input<string>? PolicyEngineMode { get; set; }

        [Input("reEvaluatePolicies")]
        public Input<bool>? ReEvaluatePolicies { get; set; }

        [Input("stage", required: true)]
        public Input<string> Stage { get; set; } = null!;

        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public FlowStageBindingArgs()
        {
        }
        public static new FlowStageBindingArgs Empty => new FlowStageBindingArgs();
    }

    public sealed class FlowStageBindingState : global::Pulumi.ResourceArgs
    {
        [Input("evaluateOnPlan")]
        public Input<bool>? EvaluateOnPlan { get; set; }

        /// <summary>
        /// Allowed values: - `retry` - `restart` - `restart_with_context`
        /// </summary>
        [Input("invalidResponseAction")]
        public Input<string>? InvalidResponseAction { get; set; }

        [Input("order")]
        public Input<int>? Order { get; set; }

        /// <summary>
        /// Allowed values: - `all` - `any`
        /// </summary>
        [Input("policyEngineMode")]
        public Input<string>? PolicyEngineMode { get; set; }

        [Input("reEvaluatePolicies")]
        public Input<bool>? ReEvaluatePolicies { get; set; }

        [Input("stage")]
        public Input<string>? Stage { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        public FlowStageBindingState()
        {
        }
        public static new FlowStageBindingState Empty => new FlowStageBindingState();
    }
}
