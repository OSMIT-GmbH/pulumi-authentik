// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace OSMIT_GmbH.Authentik
{
    public static class GetBrand
    {
        /// <summary>
        /// Get brands by domain
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Authentik = Pulumi.Authentik;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // To get the details of a brand by domain
        ///     var authentik_default = Authentik.GetBrand.Invoke(new()
        ///     {
        ///         Domain = "authentik-default",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBrandResult> InvokeAsync(GetBrandArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBrandResult>("authentik:index/getBrand:getBrand", args ?? new GetBrandArgs(), options.WithDefaults());

        /// <summary>
        /// Get brands by domain
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Authentik = Pulumi.Authentik;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // To get the details of a brand by domain
        ///     var authentik_default = Authentik.GetBrand.Invoke(new()
        ///     {
        ///         Domain = "authentik-default",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBrandResult> Invoke(GetBrandInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBrandResult>("authentik:index/getBrand:getBrand", args ?? new GetBrandInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBrandArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Generated.
        /// </summary>
        [Input("brandingFavicon")]
        public string? BrandingFavicon { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("brandingLogo")]
        public string? BrandingLogo { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("brandingTitle")]
        public string? BrandingTitle { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("default")]
        public bool? Default { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("defaultApplication")]
        public string? DefaultApplication { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("domain")]
        public string? Domain { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("flowAuthentication")]
        public string? FlowAuthentication { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("flowDeviceCode")]
        public string? FlowDeviceCode { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("flowInvalidation")]
        public string? FlowInvalidation { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("flowRecovery")]
        public string? FlowRecovery { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("flowUnenrollment")]
        public string? FlowUnenrollment { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("flowUserSettings")]
        public string? FlowUserSettings { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("webCertificate")]
        public string? WebCertificate { get; set; }

        public GetBrandArgs()
        {
        }
        public static new GetBrandArgs Empty => new GetBrandArgs();
    }

    public sealed class GetBrandInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Generated.
        /// </summary>
        [Input("brandingFavicon")]
        public Input<string>? BrandingFavicon { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("brandingLogo")]
        public Input<string>? BrandingLogo { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("brandingTitle")]
        public Input<string>? BrandingTitle { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("default")]
        public Input<bool>? Default { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("defaultApplication")]
        public Input<string>? DefaultApplication { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("flowAuthentication")]
        public Input<string>? FlowAuthentication { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("flowDeviceCode")]
        public Input<string>? FlowDeviceCode { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("flowInvalidation")]
        public Input<string>? FlowInvalidation { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("flowRecovery")]
        public Input<string>? FlowRecovery { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("flowUnenrollment")]
        public Input<string>? FlowUnenrollment { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("flowUserSettings")]
        public Input<string>? FlowUserSettings { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("webCertificate")]
        public Input<string>? WebCertificate { get; set; }

        public GetBrandInvokeArgs()
        {
        }
        public static new GetBrandInvokeArgs Empty => new GetBrandInvokeArgs();
    }


    [OutputType]
    public sealed class GetBrandResult
    {
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string BrandingFavicon;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string BrandingLogo;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string BrandingTitle;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly bool Default;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string DefaultApplication;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string FlowAuthentication;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string FlowDeviceCode;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string FlowInvalidation;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string FlowRecovery;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string FlowUnenrollment;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string FlowUserSettings;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Generated.
        /// </summary>
        public readonly string WebCertificate;

        [OutputConstructor]
        private GetBrandResult(
            string brandingFavicon,

            string brandingLogo,

            string brandingTitle,

            bool @default,

            string defaultApplication,

            string domain,

            string flowAuthentication,

            string flowDeviceCode,

            string flowInvalidation,

            string flowRecovery,

            string flowUnenrollment,

            string flowUserSettings,

            string id,

            string webCertificate)
        {
            BrandingFavicon = brandingFavicon;
            BrandingLogo = brandingLogo;
            BrandingTitle = brandingTitle;
            Default = @default;
            DefaultApplication = defaultApplication;
            Domain = domain;
            FlowAuthentication = flowAuthentication;
            FlowDeviceCode = flowDeviceCode;
            FlowInvalidation = flowInvalidation;
            FlowRecovery = flowRecovery;
            FlowUnenrollment = flowUnenrollment;
            FlowUserSettings = flowUserSettings;
            Id = id;
            WebCertificate = webCertificate;
        }
    }
}
