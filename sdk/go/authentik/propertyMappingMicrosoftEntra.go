// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentik

import (
	"context"
	"reflect"

	"errors"
	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manage Microsoft Entra Provider Property mappings
//
// > This resource is deprecated. Migrate to `PropertyMappingProviderMicrosoftEntra`.
type PropertyMappingMicrosoftEntra struct {
	pulumi.CustomResourceState

	Expression pulumi.StringOutput `pulumi:"expression"`
	Name       pulumi.StringOutput `pulumi:"name"`
}

// NewPropertyMappingMicrosoftEntra registers a new resource with the given unique name, arguments, and options.
func NewPropertyMappingMicrosoftEntra(ctx *pulumi.Context,
	name string, args *PropertyMappingMicrosoftEntraArgs, opts ...pulumi.ResourceOption) (*PropertyMappingMicrosoftEntra, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Expression == nil {
		return nil, errors.New("invalid value for required argument 'Expression'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PropertyMappingMicrosoftEntra
	err := ctx.RegisterResource("authentik:index/propertyMappingMicrosoftEntra:PropertyMappingMicrosoftEntra", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPropertyMappingMicrosoftEntra gets an existing PropertyMappingMicrosoftEntra resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPropertyMappingMicrosoftEntra(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PropertyMappingMicrosoftEntraState, opts ...pulumi.ResourceOption) (*PropertyMappingMicrosoftEntra, error) {
	var resource PropertyMappingMicrosoftEntra
	err := ctx.ReadResource("authentik:index/propertyMappingMicrosoftEntra:PropertyMappingMicrosoftEntra", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PropertyMappingMicrosoftEntra resources.
type propertyMappingMicrosoftEntraState struct {
	Expression *string `pulumi:"expression"`
	Name       *string `pulumi:"name"`
}

type PropertyMappingMicrosoftEntraState struct {
	Expression pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
}

func (PropertyMappingMicrosoftEntraState) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyMappingMicrosoftEntraState)(nil)).Elem()
}

type propertyMappingMicrosoftEntraArgs struct {
	Expression string  `pulumi:"expression"`
	Name       *string `pulumi:"name"`
}

// The set of arguments for constructing a PropertyMappingMicrosoftEntra resource.
type PropertyMappingMicrosoftEntraArgs struct {
	Expression pulumi.StringInput
	Name       pulumi.StringPtrInput
}

func (PropertyMappingMicrosoftEntraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyMappingMicrosoftEntraArgs)(nil)).Elem()
}

type PropertyMappingMicrosoftEntraInput interface {
	pulumi.Input

	ToPropertyMappingMicrosoftEntraOutput() PropertyMappingMicrosoftEntraOutput
	ToPropertyMappingMicrosoftEntraOutputWithContext(ctx context.Context) PropertyMappingMicrosoftEntraOutput
}

func (*PropertyMappingMicrosoftEntra) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyMappingMicrosoftEntra)(nil)).Elem()
}

func (i *PropertyMappingMicrosoftEntra) ToPropertyMappingMicrosoftEntraOutput() PropertyMappingMicrosoftEntraOutput {
	return i.ToPropertyMappingMicrosoftEntraOutputWithContext(context.Background())
}

func (i *PropertyMappingMicrosoftEntra) ToPropertyMappingMicrosoftEntraOutputWithContext(ctx context.Context) PropertyMappingMicrosoftEntraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyMappingMicrosoftEntraOutput)
}

// PropertyMappingMicrosoftEntraArrayInput is an input type that accepts PropertyMappingMicrosoftEntraArray and PropertyMappingMicrosoftEntraArrayOutput values.
// You can construct a concrete instance of `PropertyMappingMicrosoftEntraArrayInput` via:
//
//	PropertyMappingMicrosoftEntraArray{ PropertyMappingMicrosoftEntraArgs{...} }
type PropertyMappingMicrosoftEntraArrayInput interface {
	pulumi.Input

	ToPropertyMappingMicrosoftEntraArrayOutput() PropertyMappingMicrosoftEntraArrayOutput
	ToPropertyMappingMicrosoftEntraArrayOutputWithContext(context.Context) PropertyMappingMicrosoftEntraArrayOutput
}

type PropertyMappingMicrosoftEntraArray []PropertyMappingMicrosoftEntraInput

func (PropertyMappingMicrosoftEntraArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PropertyMappingMicrosoftEntra)(nil)).Elem()
}

func (i PropertyMappingMicrosoftEntraArray) ToPropertyMappingMicrosoftEntraArrayOutput() PropertyMappingMicrosoftEntraArrayOutput {
	return i.ToPropertyMappingMicrosoftEntraArrayOutputWithContext(context.Background())
}

func (i PropertyMappingMicrosoftEntraArray) ToPropertyMappingMicrosoftEntraArrayOutputWithContext(ctx context.Context) PropertyMappingMicrosoftEntraArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyMappingMicrosoftEntraArrayOutput)
}

// PropertyMappingMicrosoftEntraMapInput is an input type that accepts PropertyMappingMicrosoftEntraMap and PropertyMappingMicrosoftEntraMapOutput values.
// You can construct a concrete instance of `PropertyMappingMicrosoftEntraMapInput` via:
//
//	PropertyMappingMicrosoftEntraMap{ "key": PropertyMappingMicrosoftEntraArgs{...} }
type PropertyMappingMicrosoftEntraMapInput interface {
	pulumi.Input

	ToPropertyMappingMicrosoftEntraMapOutput() PropertyMappingMicrosoftEntraMapOutput
	ToPropertyMappingMicrosoftEntraMapOutputWithContext(context.Context) PropertyMappingMicrosoftEntraMapOutput
}

type PropertyMappingMicrosoftEntraMap map[string]PropertyMappingMicrosoftEntraInput

func (PropertyMappingMicrosoftEntraMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PropertyMappingMicrosoftEntra)(nil)).Elem()
}

func (i PropertyMappingMicrosoftEntraMap) ToPropertyMappingMicrosoftEntraMapOutput() PropertyMappingMicrosoftEntraMapOutput {
	return i.ToPropertyMappingMicrosoftEntraMapOutputWithContext(context.Background())
}

func (i PropertyMappingMicrosoftEntraMap) ToPropertyMappingMicrosoftEntraMapOutputWithContext(ctx context.Context) PropertyMappingMicrosoftEntraMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyMappingMicrosoftEntraMapOutput)
}

type PropertyMappingMicrosoftEntraOutput struct{ *pulumi.OutputState }

func (PropertyMappingMicrosoftEntraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyMappingMicrosoftEntra)(nil)).Elem()
}

func (o PropertyMappingMicrosoftEntraOutput) ToPropertyMappingMicrosoftEntraOutput() PropertyMappingMicrosoftEntraOutput {
	return o
}

func (o PropertyMappingMicrosoftEntraOutput) ToPropertyMappingMicrosoftEntraOutputWithContext(ctx context.Context) PropertyMappingMicrosoftEntraOutput {
	return o
}

func (o PropertyMappingMicrosoftEntraOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyMappingMicrosoftEntra) pulumi.StringOutput { return v.Expression }).(pulumi.StringOutput)
}

func (o PropertyMappingMicrosoftEntraOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyMappingMicrosoftEntra) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type PropertyMappingMicrosoftEntraArrayOutput struct{ *pulumi.OutputState }

func (PropertyMappingMicrosoftEntraArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PropertyMappingMicrosoftEntra)(nil)).Elem()
}

func (o PropertyMappingMicrosoftEntraArrayOutput) ToPropertyMappingMicrosoftEntraArrayOutput() PropertyMappingMicrosoftEntraArrayOutput {
	return o
}

func (o PropertyMappingMicrosoftEntraArrayOutput) ToPropertyMappingMicrosoftEntraArrayOutputWithContext(ctx context.Context) PropertyMappingMicrosoftEntraArrayOutput {
	return o
}

func (o PropertyMappingMicrosoftEntraArrayOutput) Index(i pulumi.IntInput) PropertyMappingMicrosoftEntraOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PropertyMappingMicrosoftEntra {
		return vs[0].([]*PropertyMappingMicrosoftEntra)[vs[1].(int)]
	}).(PropertyMappingMicrosoftEntraOutput)
}

type PropertyMappingMicrosoftEntraMapOutput struct{ *pulumi.OutputState }

func (PropertyMappingMicrosoftEntraMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PropertyMappingMicrosoftEntra)(nil)).Elem()
}

func (o PropertyMappingMicrosoftEntraMapOutput) ToPropertyMappingMicrosoftEntraMapOutput() PropertyMappingMicrosoftEntraMapOutput {
	return o
}

func (o PropertyMappingMicrosoftEntraMapOutput) ToPropertyMappingMicrosoftEntraMapOutputWithContext(ctx context.Context) PropertyMappingMicrosoftEntraMapOutput {
	return o
}

func (o PropertyMappingMicrosoftEntraMapOutput) MapIndex(k pulumi.StringInput) PropertyMappingMicrosoftEntraOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PropertyMappingMicrosoftEntra {
		return vs[0].(map[string]*PropertyMappingMicrosoftEntra)[vs[1].(string)]
	}).(PropertyMappingMicrosoftEntraOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyMappingMicrosoftEntraInput)(nil)).Elem(), &PropertyMappingMicrosoftEntra{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyMappingMicrosoftEntraArrayInput)(nil)).Elem(), PropertyMappingMicrosoftEntraArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyMappingMicrosoftEntraMapInput)(nil)).Elem(), PropertyMappingMicrosoftEntraMap{})
	pulumi.RegisterOutputType(PropertyMappingMicrosoftEntraOutput{})
	pulumi.RegisterOutputType(PropertyMappingMicrosoftEntraArrayOutput{})
	pulumi.RegisterOutputType(PropertyMappingMicrosoftEntraMapOutput{})
}
