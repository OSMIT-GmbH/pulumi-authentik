// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentik

import (
	"context"
	"reflect"

	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/v2024/go/authentik/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PolicyGeoip struct {
	pulumi.CustomResourceState

	Action   pulumi.StringPtrOutput `pulumi:"action"`
	Asns     pulumi.IntArrayOutput  `pulumi:"asns"`
	ClientIp pulumi.StringPtrOutput `pulumi:"clientIp"`
	// Allowed values: - `AF` - `AX` - `AL` - `DZ` - `AS` - `AD` - `AO` - `AI` - `AQ` - `AG` - `AR` - `AM` - `AW` - `AU` - `AT`
	// - `AZ` - `BS` - `BH` - `BD` - `BB` - `BY` - `BE` - `BZ` - `BJ` - `BM` - `BT` - `BO` - `BQ` - `BA` - `BW` - `BV` - `BR` -
	//   `IO` - `BN` - `BG` - `BF` - `BI` - `CV` - `KH` - `CM` - `CA` - `KY` - `CF` - `TD` - `CL` - `CN` - `CX` - `CC` - `CO` -
	//   `KM` - `CG` - `CD` - `CK` - `CR` - `CI` - `HR` - `CU` - `CW` - `CY` - `CZ` - `DK` - `DJ` - `DM` - `DO` - `EC` - `EG` -
	//   `SV` - `GQ` - `ER` - `EE` - `SZ` - `ET` - `FK` - `FO` - `FJ` - `FI` - `FR` - `GF` - `PF` - `TF` - `GA` - `GM` - `GE` -
	//   `DE` - `GH` - `GI` - `GR` - `GL` - `GD` - `GP` - `GU` - `GT` - `GG` - `GN` - `GW` - `GY` - `HT` - `HM` - `VA` - `HN` -
	//   `HK` - `HU` - `IS` - `IN` - `ID` - `IR` - `IQ` - `IE` - `IM` - `IL` - `IT` - `JM` - `JP` - `JE` - `JO` - `KZ` - `KE` -
	//   `KI` - `KW` - `KG` - `LA` - `LV` - `LB` - `LS` - `LR` - `LY` - `LI` - `LT` - `LU` - `MO` - `MG` - `MW` - `MY` - `MV` -
	//   `ML` - `MT` - `MH` - `MQ` - `MR` - `MU` - `YT` - `MX` - `FM` - `MD` - `MC` - `MN` - `ME` - `MS` - `MA` - `MZ` - `MM` -
	//   `NA` - `NR` - `NP` - `NL` - `NC` - `NZ` - `NI` - `NE` - `NG` - `NU` - `NF` - `KP` - `MK` - `MP` - `NO` - `OM` - `PK` -
	//   `PW` - `PS` - `PA` - `PG` - `PY` - `PE` - `PH` - `PN` - `PL` - `PT` - `PR` - `QA` - `RE` - `RO` - `RU` - `RW` - `BL` -
	//   `SH` - `KN` - `LC` - `MF` - `PM` - `VC` - `WS` - `SM` - `ST` - `SA` - `SN` - `RS` - `SC` - `SL` - `SG` - `SX` - `SK` -
	//   `SI` - `SB` - `SO` - `ZA` - `GS` - `KR` - `SS` - `ES` - `LK` - `SD` - `SR` - `SJ` - `SE` - `CH` - `SY` - `TW` - `TJ` -
	//   `TZ` - `TH` - `TL` - `TG` - `TK` - `TO` - `TT` - `TN` - `TR` - `TM` - `TC` - `TV` - `UG` - `UA` - `AE` - `GB` - `UM` -
	//   `US` - `UY` - `UZ` - `VU` - `VE` - `VN` - `VG` - `VI` - `WF` - `EH` - `YE` - `ZM` - `ZW`
	Countries        pulumi.StringArrayOutput `pulumi:"countries"`
	ExecutionLogging pulumi.BoolPtrOutput     `pulumi:"executionLogging"`
	Name             pulumi.StringOutput      `pulumi:"name"`
}

// NewPolicyGeoip registers a new resource with the given unique name, arguments, and options.
func NewPolicyGeoip(ctx *pulumi.Context,
	name string, args *PolicyGeoipArgs, opts ...pulumi.ResourceOption) (*PolicyGeoip, error) {
	if args == nil {
		args = &PolicyGeoipArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyGeoip
	err := ctx.RegisterResource("authentik:index/policyGeoip:PolicyGeoip", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyGeoip gets an existing PolicyGeoip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyGeoip(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyGeoipState, opts ...pulumi.ResourceOption) (*PolicyGeoip, error) {
	var resource PolicyGeoip
	err := ctx.ReadResource("authentik:index/policyGeoip:PolicyGeoip", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyGeoip resources.
type policyGeoipState struct {
	Action   *string `pulumi:"action"`
	Asns     []int   `pulumi:"asns"`
	ClientIp *string `pulumi:"clientIp"`
	// Allowed values: - `AF` - `AX` - `AL` - `DZ` - `AS` - `AD` - `AO` - `AI` - `AQ` - `AG` - `AR` - `AM` - `AW` - `AU` - `AT`
	// - `AZ` - `BS` - `BH` - `BD` - `BB` - `BY` - `BE` - `BZ` - `BJ` - `BM` - `BT` - `BO` - `BQ` - `BA` - `BW` - `BV` - `BR` -
	//   `IO` - `BN` - `BG` - `BF` - `BI` - `CV` - `KH` - `CM` - `CA` - `KY` - `CF` - `TD` - `CL` - `CN` - `CX` - `CC` - `CO` -
	//   `KM` - `CG` - `CD` - `CK` - `CR` - `CI` - `HR` - `CU` - `CW` - `CY` - `CZ` - `DK` - `DJ` - `DM` - `DO` - `EC` - `EG` -
	//   `SV` - `GQ` - `ER` - `EE` - `SZ` - `ET` - `FK` - `FO` - `FJ` - `FI` - `FR` - `GF` - `PF` - `TF` - `GA` - `GM` - `GE` -
	//   `DE` - `GH` - `GI` - `GR` - `GL` - `GD` - `GP` - `GU` - `GT` - `GG` - `GN` - `GW` - `GY` - `HT` - `HM` - `VA` - `HN` -
	//   `HK` - `HU` - `IS` - `IN` - `ID` - `IR` - `IQ` - `IE` - `IM` - `IL` - `IT` - `JM` - `JP` - `JE` - `JO` - `KZ` - `KE` -
	//   `KI` - `KW` - `KG` - `LA` - `LV` - `LB` - `LS` - `LR` - `LY` - `LI` - `LT` - `LU` - `MO` - `MG` - `MW` - `MY` - `MV` -
	//   `ML` - `MT` - `MH` - `MQ` - `MR` - `MU` - `YT` - `MX` - `FM` - `MD` - `MC` - `MN` - `ME` - `MS` - `MA` - `MZ` - `MM` -
	//   `NA` - `NR` - `NP` - `NL` - `NC` - `NZ` - `NI` - `NE` - `NG` - `NU` - `NF` - `KP` - `MK` - `MP` - `NO` - `OM` - `PK` -
	//   `PW` - `PS` - `PA` - `PG` - `PY` - `PE` - `PH` - `PN` - `PL` - `PT` - `PR` - `QA` - `RE` - `RO` - `RU` - `RW` - `BL` -
	//   `SH` - `KN` - `LC` - `MF` - `PM` - `VC` - `WS` - `SM` - `ST` - `SA` - `SN` - `RS` - `SC` - `SL` - `SG` - `SX` - `SK` -
	//   `SI` - `SB` - `SO` - `ZA` - `GS` - `KR` - `SS` - `ES` - `LK` - `SD` - `SR` - `SJ` - `SE` - `CH` - `SY` - `TW` - `TJ` -
	//   `TZ` - `TH` - `TL` - `TG` - `TK` - `TO` - `TT` - `TN` - `TR` - `TM` - `TC` - `TV` - `UG` - `UA` - `AE` - `GB` - `UM` -
	//   `US` - `UY` - `UZ` - `VU` - `VE` - `VN` - `VG` - `VI` - `WF` - `EH` - `YE` - `ZM` - `ZW`
	Countries        []string `pulumi:"countries"`
	ExecutionLogging *bool    `pulumi:"executionLogging"`
	Name             *string  `pulumi:"name"`
}

type PolicyGeoipState struct {
	Action   pulumi.StringPtrInput
	Asns     pulumi.IntArrayInput
	ClientIp pulumi.StringPtrInput
	// Allowed values: - `AF` - `AX` - `AL` - `DZ` - `AS` - `AD` - `AO` - `AI` - `AQ` - `AG` - `AR` - `AM` - `AW` - `AU` - `AT`
	// - `AZ` - `BS` - `BH` - `BD` - `BB` - `BY` - `BE` - `BZ` - `BJ` - `BM` - `BT` - `BO` - `BQ` - `BA` - `BW` - `BV` - `BR` -
	//   `IO` - `BN` - `BG` - `BF` - `BI` - `CV` - `KH` - `CM` - `CA` - `KY` - `CF` - `TD` - `CL` - `CN` - `CX` - `CC` - `CO` -
	//   `KM` - `CG` - `CD` - `CK` - `CR` - `CI` - `HR` - `CU` - `CW` - `CY` - `CZ` - `DK` - `DJ` - `DM` - `DO` - `EC` - `EG` -
	//   `SV` - `GQ` - `ER` - `EE` - `SZ` - `ET` - `FK` - `FO` - `FJ` - `FI` - `FR` - `GF` - `PF` - `TF` - `GA` - `GM` - `GE` -
	//   `DE` - `GH` - `GI` - `GR` - `GL` - `GD` - `GP` - `GU` - `GT` - `GG` - `GN` - `GW` - `GY` - `HT` - `HM` - `VA` - `HN` -
	//   `HK` - `HU` - `IS` - `IN` - `ID` - `IR` - `IQ` - `IE` - `IM` - `IL` - `IT` - `JM` - `JP` - `JE` - `JO` - `KZ` - `KE` -
	//   `KI` - `KW` - `KG` - `LA` - `LV` - `LB` - `LS` - `LR` - `LY` - `LI` - `LT` - `LU` - `MO` - `MG` - `MW` - `MY` - `MV` -
	//   `ML` - `MT` - `MH` - `MQ` - `MR` - `MU` - `YT` - `MX` - `FM` - `MD` - `MC` - `MN` - `ME` - `MS` - `MA` - `MZ` - `MM` -
	//   `NA` - `NR` - `NP` - `NL` - `NC` - `NZ` - `NI` - `NE` - `NG` - `NU` - `NF` - `KP` - `MK` - `MP` - `NO` - `OM` - `PK` -
	//   `PW` - `PS` - `PA` - `PG` - `PY` - `PE` - `PH` - `PN` - `PL` - `PT` - `PR` - `QA` - `RE` - `RO` - `RU` - `RW` - `BL` -
	//   `SH` - `KN` - `LC` - `MF` - `PM` - `VC` - `WS` - `SM` - `ST` - `SA` - `SN` - `RS` - `SC` - `SL` - `SG` - `SX` - `SK` -
	//   `SI` - `SB` - `SO` - `ZA` - `GS` - `KR` - `SS` - `ES` - `LK` - `SD` - `SR` - `SJ` - `SE` - `CH` - `SY` - `TW` - `TJ` -
	//   `TZ` - `TH` - `TL` - `TG` - `TK` - `TO` - `TT` - `TN` - `TR` - `TM` - `TC` - `TV` - `UG` - `UA` - `AE` - `GB` - `UM` -
	//   `US` - `UY` - `UZ` - `VU` - `VE` - `VN` - `VG` - `VI` - `WF` - `EH` - `YE` - `ZM` - `ZW`
	Countries        pulumi.StringArrayInput
	ExecutionLogging pulumi.BoolPtrInput
	Name             pulumi.StringPtrInput
}

func (PolicyGeoipState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyGeoipState)(nil)).Elem()
}

type policyGeoipArgs struct {
	Action   *string `pulumi:"action"`
	Asns     []int   `pulumi:"asns"`
	ClientIp *string `pulumi:"clientIp"`
	// Allowed values: - `AF` - `AX` - `AL` - `DZ` - `AS` - `AD` - `AO` - `AI` - `AQ` - `AG` - `AR` - `AM` - `AW` - `AU` - `AT`
	// - `AZ` - `BS` - `BH` - `BD` - `BB` - `BY` - `BE` - `BZ` - `BJ` - `BM` - `BT` - `BO` - `BQ` - `BA` - `BW` - `BV` - `BR` -
	//   `IO` - `BN` - `BG` - `BF` - `BI` - `CV` - `KH` - `CM` - `CA` - `KY` - `CF` - `TD` - `CL` - `CN` - `CX` - `CC` - `CO` -
	//   `KM` - `CG` - `CD` - `CK` - `CR` - `CI` - `HR` - `CU` - `CW` - `CY` - `CZ` - `DK` - `DJ` - `DM` - `DO` - `EC` - `EG` -
	//   `SV` - `GQ` - `ER` - `EE` - `SZ` - `ET` - `FK` - `FO` - `FJ` - `FI` - `FR` - `GF` - `PF` - `TF` - `GA` - `GM` - `GE` -
	//   `DE` - `GH` - `GI` - `GR` - `GL` - `GD` - `GP` - `GU` - `GT` - `GG` - `GN` - `GW` - `GY` - `HT` - `HM` - `VA` - `HN` -
	//   `HK` - `HU` - `IS` - `IN` - `ID` - `IR` - `IQ` - `IE` - `IM` - `IL` - `IT` - `JM` - `JP` - `JE` - `JO` - `KZ` - `KE` -
	//   `KI` - `KW` - `KG` - `LA` - `LV` - `LB` - `LS` - `LR` - `LY` - `LI` - `LT` - `LU` - `MO` - `MG` - `MW` - `MY` - `MV` -
	//   `ML` - `MT` - `MH` - `MQ` - `MR` - `MU` - `YT` - `MX` - `FM` - `MD` - `MC` - `MN` - `ME` - `MS` - `MA` - `MZ` - `MM` -
	//   `NA` - `NR` - `NP` - `NL` - `NC` - `NZ` - `NI` - `NE` - `NG` - `NU` - `NF` - `KP` - `MK` - `MP` - `NO` - `OM` - `PK` -
	//   `PW` - `PS` - `PA` - `PG` - `PY` - `PE` - `PH` - `PN` - `PL` - `PT` - `PR` - `QA` - `RE` - `RO` - `RU` - `RW` - `BL` -
	//   `SH` - `KN` - `LC` - `MF` - `PM` - `VC` - `WS` - `SM` - `ST` - `SA` - `SN` - `RS` - `SC` - `SL` - `SG` - `SX` - `SK` -
	//   `SI` - `SB` - `SO` - `ZA` - `GS` - `KR` - `SS` - `ES` - `LK` - `SD` - `SR` - `SJ` - `SE` - `CH` - `SY` - `TW` - `TJ` -
	//   `TZ` - `TH` - `TL` - `TG` - `TK` - `TO` - `TT` - `TN` - `TR` - `TM` - `TC` - `TV` - `UG` - `UA` - `AE` - `GB` - `UM` -
	//   `US` - `UY` - `UZ` - `VU` - `VE` - `VN` - `VG` - `VI` - `WF` - `EH` - `YE` - `ZM` - `ZW`
	Countries        []string `pulumi:"countries"`
	ExecutionLogging *bool    `pulumi:"executionLogging"`
	Name             *string  `pulumi:"name"`
}

// The set of arguments for constructing a PolicyGeoip resource.
type PolicyGeoipArgs struct {
	Action   pulumi.StringPtrInput
	Asns     pulumi.IntArrayInput
	ClientIp pulumi.StringPtrInput
	// Allowed values: - `AF` - `AX` - `AL` - `DZ` - `AS` - `AD` - `AO` - `AI` - `AQ` - `AG` - `AR` - `AM` - `AW` - `AU` - `AT`
	// - `AZ` - `BS` - `BH` - `BD` - `BB` - `BY` - `BE` - `BZ` - `BJ` - `BM` - `BT` - `BO` - `BQ` - `BA` - `BW` - `BV` - `BR` -
	//   `IO` - `BN` - `BG` - `BF` - `BI` - `CV` - `KH` - `CM` - `CA` - `KY` - `CF` - `TD` - `CL` - `CN` - `CX` - `CC` - `CO` -
	//   `KM` - `CG` - `CD` - `CK` - `CR` - `CI` - `HR` - `CU` - `CW` - `CY` - `CZ` - `DK` - `DJ` - `DM` - `DO` - `EC` - `EG` -
	//   `SV` - `GQ` - `ER` - `EE` - `SZ` - `ET` - `FK` - `FO` - `FJ` - `FI` - `FR` - `GF` - `PF` - `TF` - `GA` - `GM` - `GE` -
	//   `DE` - `GH` - `GI` - `GR` - `GL` - `GD` - `GP` - `GU` - `GT` - `GG` - `GN` - `GW` - `GY` - `HT` - `HM` - `VA` - `HN` -
	//   `HK` - `HU` - `IS` - `IN` - `ID` - `IR` - `IQ` - `IE` - `IM` - `IL` - `IT` - `JM` - `JP` - `JE` - `JO` - `KZ` - `KE` -
	//   `KI` - `KW` - `KG` - `LA` - `LV` - `LB` - `LS` - `LR` - `LY` - `LI` - `LT` - `LU` - `MO` - `MG` - `MW` - `MY` - `MV` -
	//   `ML` - `MT` - `MH` - `MQ` - `MR` - `MU` - `YT` - `MX` - `FM` - `MD` - `MC` - `MN` - `ME` - `MS` - `MA` - `MZ` - `MM` -
	//   `NA` - `NR` - `NP` - `NL` - `NC` - `NZ` - `NI` - `NE` - `NG` - `NU` - `NF` - `KP` - `MK` - `MP` - `NO` - `OM` - `PK` -
	//   `PW` - `PS` - `PA` - `PG` - `PY` - `PE` - `PH` - `PN` - `PL` - `PT` - `PR` - `QA` - `RE` - `RO` - `RU` - `RW` - `BL` -
	//   `SH` - `KN` - `LC` - `MF` - `PM` - `VC` - `WS` - `SM` - `ST` - `SA` - `SN` - `RS` - `SC` - `SL` - `SG` - `SX` - `SK` -
	//   `SI` - `SB` - `SO` - `ZA` - `GS` - `KR` - `SS` - `ES` - `LK` - `SD` - `SR` - `SJ` - `SE` - `CH` - `SY` - `TW` - `TJ` -
	//   `TZ` - `TH` - `TL` - `TG` - `TK` - `TO` - `TT` - `TN` - `TR` - `TM` - `TC` - `TV` - `UG` - `UA` - `AE` - `GB` - `UM` -
	//   `US` - `UY` - `UZ` - `VU` - `VE` - `VN` - `VG` - `VI` - `WF` - `EH` - `YE` - `ZM` - `ZW`
	Countries        pulumi.StringArrayInput
	ExecutionLogging pulumi.BoolPtrInput
	Name             pulumi.StringPtrInput
}

func (PolicyGeoipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyGeoipArgs)(nil)).Elem()
}

type PolicyGeoipInput interface {
	pulumi.Input

	ToPolicyGeoipOutput() PolicyGeoipOutput
	ToPolicyGeoipOutputWithContext(ctx context.Context) PolicyGeoipOutput
}

func (*PolicyGeoip) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyGeoip)(nil)).Elem()
}

func (i *PolicyGeoip) ToPolicyGeoipOutput() PolicyGeoipOutput {
	return i.ToPolicyGeoipOutputWithContext(context.Background())
}

func (i *PolicyGeoip) ToPolicyGeoipOutputWithContext(ctx context.Context) PolicyGeoipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGeoipOutput)
}

// PolicyGeoipArrayInput is an input type that accepts PolicyGeoipArray and PolicyGeoipArrayOutput values.
// You can construct a concrete instance of `PolicyGeoipArrayInput` via:
//
//	PolicyGeoipArray{ PolicyGeoipArgs{...} }
type PolicyGeoipArrayInput interface {
	pulumi.Input

	ToPolicyGeoipArrayOutput() PolicyGeoipArrayOutput
	ToPolicyGeoipArrayOutputWithContext(context.Context) PolicyGeoipArrayOutput
}

type PolicyGeoipArray []PolicyGeoipInput

func (PolicyGeoipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyGeoip)(nil)).Elem()
}

func (i PolicyGeoipArray) ToPolicyGeoipArrayOutput() PolicyGeoipArrayOutput {
	return i.ToPolicyGeoipArrayOutputWithContext(context.Background())
}

func (i PolicyGeoipArray) ToPolicyGeoipArrayOutputWithContext(ctx context.Context) PolicyGeoipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGeoipArrayOutput)
}

// PolicyGeoipMapInput is an input type that accepts PolicyGeoipMap and PolicyGeoipMapOutput values.
// You can construct a concrete instance of `PolicyGeoipMapInput` via:
//
//	PolicyGeoipMap{ "key": PolicyGeoipArgs{...} }
type PolicyGeoipMapInput interface {
	pulumi.Input

	ToPolicyGeoipMapOutput() PolicyGeoipMapOutput
	ToPolicyGeoipMapOutputWithContext(context.Context) PolicyGeoipMapOutput
}

type PolicyGeoipMap map[string]PolicyGeoipInput

func (PolicyGeoipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyGeoip)(nil)).Elem()
}

func (i PolicyGeoipMap) ToPolicyGeoipMapOutput() PolicyGeoipMapOutput {
	return i.ToPolicyGeoipMapOutputWithContext(context.Background())
}

func (i PolicyGeoipMap) ToPolicyGeoipMapOutputWithContext(ctx context.Context) PolicyGeoipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGeoipMapOutput)
}

type PolicyGeoipOutput struct{ *pulumi.OutputState }

func (PolicyGeoipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyGeoip)(nil)).Elem()
}

func (o PolicyGeoipOutput) ToPolicyGeoipOutput() PolicyGeoipOutput {
	return o
}

func (o PolicyGeoipOutput) ToPolicyGeoipOutputWithContext(ctx context.Context) PolicyGeoipOutput {
	return o
}

func (o PolicyGeoipOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyGeoip) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

func (o PolicyGeoipOutput) Asns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *PolicyGeoip) pulumi.IntArrayOutput { return v.Asns }).(pulumi.IntArrayOutput)
}

func (o PolicyGeoipOutput) ClientIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyGeoip) pulumi.StringPtrOutput { return v.ClientIp }).(pulumi.StringPtrOutput)
}

// Allowed values: - `AF` - `AX` - `AL` - `DZ` - `AS` - `AD` - `AO` - `AI` - `AQ` - `AG` - `AR` - `AM` - `AW` - `AU` - `AT`
//   - `AZ` - `BS` - `BH` - `BD` - `BB` - `BY` - `BE` - `BZ` - `BJ` - `BM` - `BT` - `BO` - `BQ` - `BA` - `BW` - `BV` - `BR` -
//     `IO` - `BN` - `BG` - `BF` - `BI` - `CV` - `KH` - `CM` - `CA` - `KY` - `CF` - `TD` - `CL` - `CN` - `CX` - `CC` - `CO` -
//     `KM` - `CG` - `CD` - `CK` - `CR` - `CI` - `HR` - `CU` - `CW` - `CY` - `CZ` - `DK` - `DJ` - `DM` - `DO` - `EC` - `EG` -
//     `SV` - `GQ` - `ER` - `EE` - `SZ` - `ET` - `FK` - `FO` - `FJ` - `FI` - `FR` - `GF` - `PF` - `TF` - `GA` - `GM` - `GE` -
//     `DE` - `GH` - `GI` - `GR` - `GL` - `GD` - `GP` - `GU` - `GT` - `GG` - `GN` - `GW` - `GY` - `HT` - `HM` - `VA` - `HN` -
//     `HK` - `HU` - `IS` - `IN` - `ID` - `IR` - `IQ` - `IE` - `IM` - `IL` - `IT` - `JM` - `JP` - `JE` - `JO` - `KZ` - `KE` -
//     `KI` - `KW` - `KG` - `LA` - `LV` - `LB` - `LS` - `LR` - `LY` - `LI` - `LT` - `LU` - `MO` - `MG` - `MW` - `MY` - `MV` -
//     `ML` - `MT` - `MH` - `MQ` - `MR` - `MU` - `YT` - `MX` - `FM` - `MD` - `MC` - `MN` - `ME` - `MS` - `MA` - `MZ` - `MM` -
//     `NA` - `NR` - `NP` - `NL` - `NC` - `NZ` - `NI` - `NE` - `NG` - `NU` - `NF` - `KP` - `MK` - `MP` - `NO` - `OM` - `PK` -
//     `PW` - `PS` - `PA` - `PG` - `PY` - `PE` - `PH` - `PN` - `PL` - `PT` - `PR` - `QA` - `RE` - `RO` - `RU` - `RW` - `BL` -
//     `SH` - `KN` - `LC` - `MF` - `PM` - `VC` - `WS` - `SM` - `ST` - `SA` - `SN` - `RS` - `SC` - `SL` - `SG` - `SX` - `SK` -
//     `SI` - `SB` - `SO` - `ZA` - `GS` - `KR` - `SS` - `ES` - `LK` - `SD` - `SR` - `SJ` - `SE` - `CH` - `SY` - `TW` - `TJ` -
//     `TZ` - `TH` - `TL` - `TG` - `TK` - `TO` - `TT` - `TN` - `TR` - `TM` - `TC` - `TV` - `UG` - `UA` - `AE` - `GB` - `UM` -
//     `US` - `UY` - `UZ` - `VU` - `VE` - `VN` - `VG` - `VI` - `WF` - `EH` - `YE` - `ZM` - `ZW`
func (o PolicyGeoipOutput) Countries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyGeoip) pulumi.StringArrayOutput { return v.Countries }).(pulumi.StringArrayOutput)
}

func (o PolicyGeoipOutput) ExecutionLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyGeoip) pulumi.BoolPtrOutput { return v.ExecutionLogging }).(pulumi.BoolPtrOutput)
}

func (o PolicyGeoipOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyGeoip) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type PolicyGeoipArrayOutput struct{ *pulumi.OutputState }

func (PolicyGeoipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyGeoip)(nil)).Elem()
}

func (o PolicyGeoipArrayOutput) ToPolicyGeoipArrayOutput() PolicyGeoipArrayOutput {
	return o
}

func (o PolicyGeoipArrayOutput) ToPolicyGeoipArrayOutputWithContext(ctx context.Context) PolicyGeoipArrayOutput {
	return o
}

func (o PolicyGeoipArrayOutput) Index(i pulumi.IntInput) PolicyGeoipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyGeoip {
		return vs[0].([]*PolicyGeoip)[vs[1].(int)]
	}).(PolicyGeoipOutput)
}

type PolicyGeoipMapOutput struct{ *pulumi.OutputState }

func (PolicyGeoipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyGeoip)(nil)).Elem()
}

func (o PolicyGeoipMapOutput) ToPolicyGeoipMapOutput() PolicyGeoipMapOutput {
	return o
}

func (o PolicyGeoipMapOutput) ToPolicyGeoipMapOutputWithContext(ctx context.Context) PolicyGeoipMapOutput {
	return o
}

func (o PolicyGeoipMapOutput) MapIndex(k pulumi.StringInput) PolicyGeoipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyGeoip {
		return vs[0].(map[string]*PolicyGeoip)[vs[1].(string)]
	}).(PolicyGeoipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGeoipInput)(nil)).Elem(), &PolicyGeoip{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGeoipArrayInput)(nil)).Elem(), PolicyGeoipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGeoipMapInput)(nil)).Elem(), PolicyGeoipMap{})
	pulumi.RegisterOutputType(PolicyGeoipOutput{})
	pulumi.RegisterOutputType(PolicyGeoipArrayOutput{})
	pulumi.RegisterOutputType(PolicyGeoipMapOutput{})
}
