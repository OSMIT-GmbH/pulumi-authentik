// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentik

import (
	"context"
	"reflect"

	"errors"
	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProviderSaml struct {
	pulumi.CustomResourceState

	AcsUrl                     pulumi.StringOutput      `pulumi:"acsUrl"`
	AssertionValidNotBefore    pulumi.StringPtrOutput   `pulumi:"assertionValidNotBefore"`
	AssertionValidNotOnOrAfter pulumi.StringPtrOutput   `pulumi:"assertionValidNotOnOrAfter"`
	Audience                   pulumi.StringPtrOutput   `pulumi:"audience"`
	AuthenticationFlow         pulumi.StringPtrOutput   `pulumi:"authenticationFlow"`
	AuthorizationFlow          pulumi.StringOutput      `pulumi:"authorizationFlow"`
	DigestAlgorithm            pulumi.StringPtrOutput   `pulumi:"digestAlgorithm"`
	Issuer                     pulumi.StringPtrOutput   `pulumi:"issuer"`
	Name                       pulumi.StringOutput      `pulumi:"name"`
	NameIdMapping              pulumi.StringPtrOutput   `pulumi:"nameIdMapping"`
	PropertyMappings           pulumi.StringArrayOutput `pulumi:"propertyMappings"`
	SessionValidNotOnOrAfter   pulumi.StringPtrOutput   `pulumi:"sessionValidNotOnOrAfter"`
	SignatureAlgorithm         pulumi.StringPtrOutput   `pulumi:"signatureAlgorithm"`
	SigningKp                  pulumi.StringPtrOutput   `pulumi:"signingKp"`
	SpBinding                  pulumi.StringPtrOutput   `pulumi:"spBinding"`
	UrlSloPost                 pulumi.StringOutput      `pulumi:"urlSloPost"`
	UrlSloRedirect             pulumi.StringOutput      `pulumi:"urlSloRedirect"`
	UrlSsoInit                 pulumi.StringOutput      `pulumi:"urlSsoInit"`
	UrlSsoPost                 pulumi.StringOutput      `pulumi:"urlSsoPost"`
	UrlSsoRedirect             pulumi.StringOutput      `pulumi:"urlSsoRedirect"`
	VerificationKp             pulumi.StringPtrOutput   `pulumi:"verificationKp"`
}

// NewProviderSaml registers a new resource with the given unique name, arguments, and options.
func NewProviderSaml(ctx *pulumi.Context,
	name string, args *ProviderSamlArgs, opts ...pulumi.ResourceOption) (*ProviderSaml, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AcsUrl == nil {
		return nil, errors.New("invalid value for required argument 'AcsUrl'")
	}
	if args.AuthorizationFlow == nil {
		return nil, errors.New("invalid value for required argument 'AuthorizationFlow'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProviderSaml
	err := ctx.RegisterResource("authentik:index/providerSaml:ProviderSaml", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProviderSaml gets an existing ProviderSaml resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProviderSaml(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProviderSamlState, opts ...pulumi.ResourceOption) (*ProviderSaml, error) {
	var resource ProviderSaml
	err := ctx.ReadResource("authentik:index/providerSaml:ProviderSaml", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProviderSaml resources.
type providerSamlState struct {
	AcsUrl                     *string  `pulumi:"acsUrl"`
	AssertionValidNotBefore    *string  `pulumi:"assertionValidNotBefore"`
	AssertionValidNotOnOrAfter *string  `pulumi:"assertionValidNotOnOrAfter"`
	Audience                   *string  `pulumi:"audience"`
	AuthenticationFlow         *string  `pulumi:"authenticationFlow"`
	AuthorizationFlow          *string  `pulumi:"authorizationFlow"`
	DigestAlgorithm            *string  `pulumi:"digestAlgorithm"`
	Issuer                     *string  `pulumi:"issuer"`
	Name                       *string  `pulumi:"name"`
	NameIdMapping              *string  `pulumi:"nameIdMapping"`
	PropertyMappings           []string `pulumi:"propertyMappings"`
	SessionValidNotOnOrAfter   *string  `pulumi:"sessionValidNotOnOrAfter"`
	SignatureAlgorithm         *string  `pulumi:"signatureAlgorithm"`
	SigningKp                  *string  `pulumi:"signingKp"`
	SpBinding                  *string  `pulumi:"spBinding"`
	UrlSloPost                 *string  `pulumi:"urlSloPost"`
	UrlSloRedirect             *string  `pulumi:"urlSloRedirect"`
	UrlSsoInit                 *string  `pulumi:"urlSsoInit"`
	UrlSsoPost                 *string  `pulumi:"urlSsoPost"`
	UrlSsoRedirect             *string  `pulumi:"urlSsoRedirect"`
	VerificationKp             *string  `pulumi:"verificationKp"`
}

type ProviderSamlState struct {
	AcsUrl                     pulumi.StringPtrInput
	AssertionValidNotBefore    pulumi.StringPtrInput
	AssertionValidNotOnOrAfter pulumi.StringPtrInput
	Audience                   pulumi.StringPtrInput
	AuthenticationFlow         pulumi.StringPtrInput
	AuthorizationFlow          pulumi.StringPtrInput
	DigestAlgorithm            pulumi.StringPtrInput
	Issuer                     pulumi.StringPtrInput
	Name                       pulumi.StringPtrInput
	NameIdMapping              pulumi.StringPtrInput
	PropertyMappings           pulumi.StringArrayInput
	SessionValidNotOnOrAfter   pulumi.StringPtrInput
	SignatureAlgorithm         pulumi.StringPtrInput
	SigningKp                  pulumi.StringPtrInput
	SpBinding                  pulumi.StringPtrInput
	UrlSloPost                 pulumi.StringPtrInput
	UrlSloRedirect             pulumi.StringPtrInput
	UrlSsoInit                 pulumi.StringPtrInput
	UrlSsoPost                 pulumi.StringPtrInput
	UrlSsoRedirect             pulumi.StringPtrInput
	VerificationKp             pulumi.StringPtrInput
}

func (ProviderSamlState) ElementType() reflect.Type {
	return reflect.TypeOf((*providerSamlState)(nil)).Elem()
}

type providerSamlArgs struct {
	AcsUrl                     string   `pulumi:"acsUrl"`
	AssertionValidNotBefore    *string  `pulumi:"assertionValidNotBefore"`
	AssertionValidNotOnOrAfter *string  `pulumi:"assertionValidNotOnOrAfter"`
	Audience                   *string  `pulumi:"audience"`
	AuthenticationFlow         *string  `pulumi:"authenticationFlow"`
	AuthorizationFlow          string   `pulumi:"authorizationFlow"`
	DigestAlgorithm            *string  `pulumi:"digestAlgorithm"`
	Issuer                     *string  `pulumi:"issuer"`
	Name                       *string  `pulumi:"name"`
	NameIdMapping              *string  `pulumi:"nameIdMapping"`
	PropertyMappings           []string `pulumi:"propertyMappings"`
	SessionValidNotOnOrAfter   *string  `pulumi:"sessionValidNotOnOrAfter"`
	SignatureAlgorithm         *string  `pulumi:"signatureAlgorithm"`
	SigningKp                  *string  `pulumi:"signingKp"`
	SpBinding                  *string  `pulumi:"spBinding"`
	UrlSloPost                 *string  `pulumi:"urlSloPost"`
	UrlSloRedirect             *string  `pulumi:"urlSloRedirect"`
	UrlSsoInit                 *string  `pulumi:"urlSsoInit"`
	UrlSsoPost                 *string  `pulumi:"urlSsoPost"`
	UrlSsoRedirect             *string  `pulumi:"urlSsoRedirect"`
	VerificationKp             *string  `pulumi:"verificationKp"`
}

// The set of arguments for constructing a ProviderSaml resource.
type ProviderSamlArgs struct {
	AcsUrl                     pulumi.StringInput
	AssertionValidNotBefore    pulumi.StringPtrInput
	AssertionValidNotOnOrAfter pulumi.StringPtrInput
	Audience                   pulumi.StringPtrInput
	AuthenticationFlow         pulumi.StringPtrInput
	AuthorizationFlow          pulumi.StringInput
	DigestAlgorithm            pulumi.StringPtrInput
	Issuer                     pulumi.StringPtrInput
	Name                       pulumi.StringPtrInput
	NameIdMapping              pulumi.StringPtrInput
	PropertyMappings           pulumi.StringArrayInput
	SessionValidNotOnOrAfter   pulumi.StringPtrInput
	SignatureAlgorithm         pulumi.StringPtrInput
	SigningKp                  pulumi.StringPtrInput
	SpBinding                  pulumi.StringPtrInput
	UrlSloPost                 pulumi.StringPtrInput
	UrlSloRedirect             pulumi.StringPtrInput
	UrlSsoInit                 pulumi.StringPtrInput
	UrlSsoPost                 pulumi.StringPtrInput
	UrlSsoRedirect             pulumi.StringPtrInput
	VerificationKp             pulumi.StringPtrInput
}

func (ProviderSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerSamlArgs)(nil)).Elem()
}

type ProviderSamlInput interface {
	pulumi.Input

	ToProviderSamlOutput() ProviderSamlOutput
	ToProviderSamlOutputWithContext(ctx context.Context) ProviderSamlOutput
}

func (*ProviderSaml) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSaml)(nil)).Elem()
}

func (i *ProviderSaml) ToProviderSamlOutput() ProviderSamlOutput {
	return i.ToProviderSamlOutputWithContext(context.Background())
}

func (i *ProviderSaml) ToProviderSamlOutputWithContext(ctx context.Context) ProviderSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSamlOutput)
}

// ProviderSamlArrayInput is an input type that accepts ProviderSamlArray and ProviderSamlArrayOutput values.
// You can construct a concrete instance of `ProviderSamlArrayInput` via:
//
//	ProviderSamlArray{ ProviderSamlArgs{...} }
type ProviderSamlArrayInput interface {
	pulumi.Input

	ToProviderSamlArrayOutput() ProviderSamlArrayOutput
	ToProviderSamlArrayOutputWithContext(context.Context) ProviderSamlArrayOutput
}

type ProviderSamlArray []ProviderSamlInput

func (ProviderSamlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProviderSaml)(nil)).Elem()
}

func (i ProviderSamlArray) ToProviderSamlArrayOutput() ProviderSamlArrayOutput {
	return i.ToProviderSamlArrayOutputWithContext(context.Background())
}

func (i ProviderSamlArray) ToProviderSamlArrayOutputWithContext(ctx context.Context) ProviderSamlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSamlArrayOutput)
}

// ProviderSamlMapInput is an input type that accepts ProviderSamlMap and ProviderSamlMapOutput values.
// You can construct a concrete instance of `ProviderSamlMapInput` via:
//
//	ProviderSamlMap{ "key": ProviderSamlArgs{...} }
type ProviderSamlMapInput interface {
	pulumi.Input

	ToProviderSamlMapOutput() ProviderSamlMapOutput
	ToProviderSamlMapOutputWithContext(context.Context) ProviderSamlMapOutput
}

type ProviderSamlMap map[string]ProviderSamlInput

func (ProviderSamlMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProviderSaml)(nil)).Elem()
}

func (i ProviderSamlMap) ToProviderSamlMapOutput() ProviderSamlMapOutput {
	return i.ToProviderSamlMapOutputWithContext(context.Background())
}

func (i ProviderSamlMap) ToProviderSamlMapOutputWithContext(ctx context.Context) ProviderSamlMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSamlMapOutput)
}

type ProviderSamlOutput struct{ *pulumi.OutputState }

func (ProviderSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSaml)(nil)).Elem()
}

func (o ProviderSamlOutput) ToProviderSamlOutput() ProviderSamlOutput {
	return o
}

func (o ProviderSamlOutput) ToProviderSamlOutputWithContext(ctx context.Context) ProviderSamlOutput {
	return o
}

func (o ProviderSamlOutput) AcsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringOutput { return v.AcsUrl }).(pulumi.StringOutput)
}

func (o ProviderSamlOutput) AssertionValidNotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringPtrOutput { return v.AssertionValidNotBefore }).(pulumi.StringPtrOutput)
}

func (o ProviderSamlOutput) AssertionValidNotOnOrAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringPtrOutput { return v.AssertionValidNotOnOrAfter }).(pulumi.StringPtrOutput)
}

func (o ProviderSamlOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringPtrOutput { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o ProviderSamlOutput) AuthenticationFlow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringPtrOutput { return v.AuthenticationFlow }).(pulumi.StringPtrOutput)
}

func (o ProviderSamlOutput) AuthorizationFlow() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringOutput { return v.AuthorizationFlow }).(pulumi.StringOutput)
}

func (o ProviderSamlOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringPtrOutput { return v.DigestAlgorithm }).(pulumi.StringPtrOutput)
}

func (o ProviderSamlOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringPtrOutput { return v.Issuer }).(pulumi.StringPtrOutput)
}

func (o ProviderSamlOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ProviderSamlOutput) NameIdMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringPtrOutput { return v.NameIdMapping }).(pulumi.StringPtrOutput)
}

func (o ProviderSamlOutput) PropertyMappings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringArrayOutput { return v.PropertyMappings }).(pulumi.StringArrayOutput)
}

func (o ProviderSamlOutput) SessionValidNotOnOrAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringPtrOutput { return v.SessionValidNotOnOrAfter }).(pulumi.StringPtrOutput)
}

func (o ProviderSamlOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringPtrOutput { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

func (o ProviderSamlOutput) SigningKp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringPtrOutput { return v.SigningKp }).(pulumi.StringPtrOutput)
}

func (o ProviderSamlOutput) SpBinding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringPtrOutput { return v.SpBinding }).(pulumi.StringPtrOutput)
}

func (o ProviderSamlOutput) UrlSloPost() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringOutput { return v.UrlSloPost }).(pulumi.StringOutput)
}

func (o ProviderSamlOutput) UrlSloRedirect() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringOutput { return v.UrlSloRedirect }).(pulumi.StringOutput)
}

func (o ProviderSamlOutput) UrlSsoInit() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringOutput { return v.UrlSsoInit }).(pulumi.StringOutput)
}

func (o ProviderSamlOutput) UrlSsoPost() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringOutput { return v.UrlSsoPost }).(pulumi.StringOutput)
}

func (o ProviderSamlOutput) UrlSsoRedirect() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringOutput { return v.UrlSsoRedirect }).(pulumi.StringOutput)
}

func (o ProviderSamlOutput) VerificationKp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSaml) pulumi.StringPtrOutput { return v.VerificationKp }).(pulumi.StringPtrOutput)
}

type ProviderSamlArrayOutput struct{ *pulumi.OutputState }

func (ProviderSamlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProviderSaml)(nil)).Elem()
}

func (o ProviderSamlArrayOutput) ToProviderSamlArrayOutput() ProviderSamlArrayOutput {
	return o
}

func (o ProviderSamlArrayOutput) ToProviderSamlArrayOutputWithContext(ctx context.Context) ProviderSamlArrayOutput {
	return o
}

func (o ProviderSamlArrayOutput) Index(i pulumi.IntInput) ProviderSamlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProviderSaml {
		return vs[0].([]*ProviderSaml)[vs[1].(int)]
	}).(ProviderSamlOutput)
}

type ProviderSamlMapOutput struct{ *pulumi.OutputState }

func (ProviderSamlMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProviderSaml)(nil)).Elem()
}

func (o ProviderSamlMapOutput) ToProviderSamlMapOutput() ProviderSamlMapOutput {
	return o
}

func (o ProviderSamlMapOutput) ToProviderSamlMapOutputWithContext(ctx context.Context) ProviderSamlMapOutput {
	return o
}

func (o ProviderSamlMapOutput) MapIndex(k pulumi.StringInput) ProviderSamlOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProviderSaml {
		return vs[0].(map[string]*ProviderSaml)[vs[1].(string)]
	}).(ProviderSamlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSamlInput)(nil)).Elem(), &ProviderSaml{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSamlArrayInput)(nil)).Elem(), ProviderSamlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSamlMapInput)(nil)).Elem(), ProviderSamlMap{})
	pulumi.RegisterOutputType(ProviderSamlOutput{})
	pulumi.RegisterOutputType(ProviderSamlArrayOutput{})
	pulumi.RegisterOutputType(ProviderSamlMapOutput{})
}
