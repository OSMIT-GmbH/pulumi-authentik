// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentik

import (
	"context"
	"reflect"

	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create a user login stage
//			_, err := authentik.NewStageUserLogin(ctx, "name", &authentik.StageUserLoginArgs{
//				Name: pulumi.String("user-login"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type StageUserLogin struct {
	pulumi.CustomResourceState

	// Allowed values: - `noBinding` - `bindContinent` - `bindContinentCountry` - `bindContinentCountryCity`
	GeoipBinding pulumi.StringPtrOutput `pulumi:"geoipBinding"`
	Name         pulumi.StringOutput    `pulumi:"name"`
	// Allowed values: - `noBinding` - `bindAsn` - `bindAsnNetwork` - `bindAsnNetworkIp`
	NetworkBinding         pulumi.StringPtrOutput `pulumi:"networkBinding"`
	RememberMeOffset       pulumi.StringPtrOutput `pulumi:"rememberMeOffset"`
	SessionDuration        pulumi.StringPtrOutput `pulumi:"sessionDuration"`
	TerminateOtherSessions pulumi.BoolPtrOutput   `pulumi:"terminateOtherSessions"`
}

// NewStageUserLogin registers a new resource with the given unique name, arguments, and options.
func NewStageUserLogin(ctx *pulumi.Context,
	name string, args *StageUserLoginArgs, opts ...pulumi.ResourceOption) (*StageUserLogin, error) {
	if args == nil {
		args = &StageUserLoginArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StageUserLogin
	err := ctx.RegisterResource("authentik:index/stageUserLogin:StageUserLogin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStageUserLogin gets an existing StageUserLogin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStageUserLogin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StageUserLoginState, opts ...pulumi.ResourceOption) (*StageUserLogin, error) {
	var resource StageUserLogin
	err := ctx.ReadResource("authentik:index/stageUserLogin:StageUserLogin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StageUserLogin resources.
type stageUserLoginState struct {
	// Allowed values: - `noBinding` - `bindContinent` - `bindContinentCountry` - `bindContinentCountryCity`
	GeoipBinding *string `pulumi:"geoipBinding"`
	Name         *string `pulumi:"name"`
	// Allowed values: - `noBinding` - `bindAsn` - `bindAsnNetwork` - `bindAsnNetworkIp`
	NetworkBinding         *string `pulumi:"networkBinding"`
	RememberMeOffset       *string `pulumi:"rememberMeOffset"`
	SessionDuration        *string `pulumi:"sessionDuration"`
	TerminateOtherSessions *bool   `pulumi:"terminateOtherSessions"`
}

type StageUserLoginState struct {
	// Allowed values: - `noBinding` - `bindContinent` - `bindContinentCountry` - `bindContinentCountryCity`
	GeoipBinding pulumi.StringPtrInput
	Name         pulumi.StringPtrInput
	// Allowed values: - `noBinding` - `bindAsn` - `bindAsnNetwork` - `bindAsnNetworkIp`
	NetworkBinding         pulumi.StringPtrInput
	RememberMeOffset       pulumi.StringPtrInput
	SessionDuration        pulumi.StringPtrInput
	TerminateOtherSessions pulumi.BoolPtrInput
}

func (StageUserLoginState) ElementType() reflect.Type {
	return reflect.TypeOf((*stageUserLoginState)(nil)).Elem()
}

type stageUserLoginArgs struct {
	// Allowed values: - `noBinding` - `bindContinent` - `bindContinentCountry` - `bindContinentCountryCity`
	GeoipBinding *string `pulumi:"geoipBinding"`
	Name         *string `pulumi:"name"`
	// Allowed values: - `noBinding` - `bindAsn` - `bindAsnNetwork` - `bindAsnNetworkIp`
	NetworkBinding         *string `pulumi:"networkBinding"`
	RememberMeOffset       *string `pulumi:"rememberMeOffset"`
	SessionDuration        *string `pulumi:"sessionDuration"`
	TerminateOtherSessions *bool   `pulumi:"terminateOtherSessions"`
}

// The set of arguments for constructing a StageUserLogin resource.
type StageUserLoginArgs struct {
	// Allowed values: - `noBinding` - `bindContinent` - `bindContinentCountry` - `bindContinentCountryCity`
	GeoipBinding pulumi.StringPtrInput
	Name         pulumi.StringPtrInput
	// Allowed values: - `noBinding` - `bindAsn` - `bindAsnNetwork` - `bindAsnNetworkIp`
	NetworkBinding         pulumi.StringPtrInput
	RememberMeOffset       pulumi.StringPtrInput
	SessionDuration        pulumi.StringPtrInput
	TerminateOtherSessions pulumi.BoolPtrInput
}

func (StageUserLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stageUserLoginArgs)(nil)).Elem()
}

type StageUserLoginInput interface {
	pulumi.Input

	ToStageUserLoginOutput() StageUserLoginOutput
	ToStageUserLoginOutputWithContext(ctx context.Context) StageUserLoginOutput
}

func (*StageUserLogin) ElementType() reflect.Type {
	return reflect.TypeOf((**StageUserLogin)(nil)).Elem()
}

func (i *StageUserLogin) ToStageUserLoginOutput() StageUserLoginOutput {
	return i.ToStageUserLoginOutputWithContext(context.Background())
}

func (i *StageUserLogin) ToStageUserLoginOutputWithContext(ctx context.Context) StageUserLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageUserLoginOutput)
}

// StageUserLoginArrayInput is an input type that accepts StageUserLoginArray and StageUserLoginArrayOutput values.
// You can construct a concrete instance of `StageUserLoginArrayInput` via:
//
//	StageUserLoginArray{ StageUserLoginArgs{...} }
type StageUserLoginArrayInput interface {
	pulumi.Input

	ToStageUserLoginArrayOutput() StageUserLoginArrayOutput
	ToStageUserLoginArrayOutputWithContext(context.Context) StageUserLoginArrayOutput
}

type StageUserLoginArray []StageUserLoginInput

func (StageUserLoginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StageUserLogin)(nil)).Elem()
}

func (i StageUserLoginArray) ToStageUserLoginArrayOutput() StageUserLoginArrayOutput {
	return i.ToStageUserLoginArrayOutputWithContext(context.Background())
}

func (i StageUserLoginArray) ToStageUserLoginArrayOutputWithContext(ctx context.Context) StageUserLoginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageUserLoginArrayOutput)
}

// StageUserLoginMapInput is an input type that accepts StageUserLoginMap and StageUserLoginMapOutput values.
// You can construct a concrete instance of `StageUserLoginMapInput` via:
//
//	StageUserLoginMap{ "key": StageUserLoginArgs{...} }
type StageUserLoginMapInput interface {
	pulumi.Input

	ToStageUserLoginMapOutput() StageUserLoginMapOutput
	ToStageUserLoginMapOutputWithContext(context.Context) StageUserLoginMapOutput
}

type StageUserLoginMap map[string]StageUserLoginInput

func (StageUserLoginMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StageUserLogin)(nil)).Elem()
}

func (i StageUserLoginMap) ToStageUserLoginMapOutput() StageUserLoginMapOutput {
	return i.ToStageUserLoginMapOutputWithContext(context.Background())
}

func (i StageUserLoginMap) ToStageUserLoginMapOutputWithContext(ctx context.Context) StageUserLoginMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageUserLoginMapOutput)
}

type StageUserLoginOutput struct{ *pulumi.OutputState }

func (StageUserLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageUserLogin)(nil)).Elem()
}

func (o StageUserLoginOutput) ToStageUserLoginOutput() StageUserLoginOutput {
	return o
}

func (o StageUserLoginOutput) ToStageUserLoginOutputWithContext(ctx context.Context) StageUserLoginOutput {
	return o
}

// Allowed values: - `noBinding` - `bindContinent` - `bindContinentCountry` - `bindContinentCountryCity`
func (o StageUserLoginOutput) GeoipBinding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageUserLogin) pulumi.StringPtrOutput { return v.GeoipBinding }).(pulumi.StringPtrOutput)
}

func (o StageUserLoginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StageUserLogin) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Allowed values: - `noBinding` - `bindAsn` - `bindAsnNetwork` - `bindAsnNetworkIp`
func (o StageUserLoginOutput) NetworkBinding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageUserLogin) pulumi.StringPtrOutput { return v.NetworkBinding }).(pulumi.StringPtrOutput)
}

func (o StageUserLoginOutput) RememberMeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageUserLogin) pulumi.StringPtrOutput { return v.RememberMeOffset }).(pulumi.StringPtrOutput)
}

func (o StageUserLoginOutput) SessionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageUserLogin) pulumi.StringPtrOutput { return v.SessionDuration }).(pulumi.StringPtrOutput)
}

func (o StageUserLoginOutput) TerminateOtherSessions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StageUserLogin) pulumi.BoolPtrOutput { return v.TerminateOtherSessions }).(pulumi.BoolPtrOutput)
}

type StageUserLoginArrayOutput struct{ *pulumi.OutputState }

func (StageUserLoginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StageUserLogin)(nil)).Elem()
}

func (o StageUserLoginArrayOutput) ToStageUserLoginArrayOutput() StageUserLoginArrayOutput {
	return o
}

func (o StageUserLoginArrayOutput) ToStageUserLoginArrayOutputWithContext(ctx context.Context) StageUserLoginArrayOutput {
	return o
}

func (o StageUserLoginArrayOutput) Index(i pulumi.IntInput) StageUserLoginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StageUserLogin {
		return vs[0].([]*StageUserLogin)[vs[1].(int)]
	}).(StageUserLoginOutput)
}

type StageUserLoginMapOutput struct{ *pulumi.OutputState }

func (StageUserLoginMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StageUserLogin)(nil)).Elem()
}

func (o StageUserLoginMapOutput) ToStageUserLoginMapOutput() StageUserLoginMapOutput {
	return o
}

func (o StageUserLoginMapOutput) ToStageUserLoginMapOutputWithContext(ctx context.Context) StageUserLoginMapOutput {
	return o
}

func (o StageUserLoginMapOutput) MapIndex(k pulumi.StringInput) StageUserLoginOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StageUserLogin {
		return vs[0].(map[string]*StageUserLogin)[vs[1].(string)]
	}).(StageUserLoginOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StageUserLoginInput)(nil)).Elem(), &StageUserLogin{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageUserLoginArrayInput)(nil)).Elem(), StageUserLoginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageUserLoginMapInput)(nil)).Elem(), StageUserLoginMap{})
	pulumi.RegisterOutputType(StageUserLoginOutput{})
	pulumi.RegisterOutputType(StageUserLoginArrayOutput{})
	pulumi.RegisterOutputType(StageUserLoginMapOutput{})
}
