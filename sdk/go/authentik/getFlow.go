// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentik

import (
	"context"
	"reflect"

	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/v2024/go/authentik/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get flows by Slug and/or designation
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// To get the ID of a flow by slug
//			_, err := authentik.LookupFlow(ctx, &authentik.LookupFlowArgs{
//				Slug: pulumi.StringRef("default-provider-authorization-implicit-consent"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFlow(ctx *pulumi.Context, args *LookupFlowArgs, opts ...pulumi.InvokeOption) (*LookupFlowResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFlowResult
	err := ctx.Invoke("authentik:index/getFlow:getFlow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlow.
type LookupFlowArgs struct {
	// Generated.
	Authentication *string `pulumi:"authentication"`
	// Generated.
	Designation *string `pulumi:"designation"`
	// Generated.
	Slug *string `pulumi:"slug"`
}

// A collection of values returned by getFlow.
type LookupFlowResult struct {
	// Generated.
	Authentication string `pulumi:"authentication"`
	// Generated.
	Designation string `pulumi:"designation"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Generated.
	Name string `pulumi:"name"`
	// Generated.
	Slug string `pulumi:"slug"`
	// Generated.
	Title string `pulumi:"title"`
}

func LookupFlowOutput(ctx *pulumi.Context, args LookupFlowOutputArgs, opts ...pulumi.InvokeOption) LookupFlowResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFlowResultOutput, error) {
			args := v.(LookupFlowArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupFlowResult
			secret, err := ctx.InvokePackageRaw("authentik:index/getFlow:getFlow", args, &rv, "", opts...)
			if err != nil {
				return LookupFlowResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupFlowResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupFlowResultOutput), nil
			}
			return output, nil
		}).(LookupFlowResultOutput)
}

// A collection of arguments for invoking getFlow.
type LookupFlowOutputArgs struct {
	// Generated.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Generated.
	Designation pulumi.StringPtrInput `pulumi:"designation"`
	// Generated.
	Slug pulumi.StringPtrInput `pulumi:"slug"`
}

func (LookupFlowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowArgs)(nil)).Elem()
}

// A collection of values returned by getFlow.
type LookupFlowResultOutput struct{ *pulumi.OutputState }

func (LookupFlowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowResult)(nil)).Elem()
}

func (o LookupFlowResultOutput) ToLookupFlowResultOutput() LookupFlowResultOutput {
	return o
}

func (o LookupFlowResultOutput) ToLookupFlowResultOutputWithContext(ctx context.Context) LookupFlowResultOutput {
	return o
}

// Generated.
func (o LookupFlowResultOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowResult) string { return v.Authentication }).(pulumi.StringOutput)
}

// Generated.
func (o LookupFlowResultOutput) Designation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowResult) string { return v.Designation }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFlowResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowResult) string { return v.Id }).(pulumi.StringOutput)
}

// Generated.
func (o LookupFlowResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowResult) string { return v.Name }).(pulumi.StringOutput)
}

// Generated.
func (o LookupFlowResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowResult) string { return v.Slug }).(pulumi.StringOutput)
}

// Generated.
func (o LookupFlowResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowResult) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlowResultOutput{})
}
