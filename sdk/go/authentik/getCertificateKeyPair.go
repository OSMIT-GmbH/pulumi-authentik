// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentik

import (
	"context"
	"reflect"

	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCertificateKeyPair(ctx *pulumi.Context, args *LookupCertificateKeyPairArgs, opts ...pulumi.InvokeOption) (*LookupCertificateKeyPairResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCertificateKeyPairResult
	err := ctx.Invoke("authentik:index/getCertificateKeyPair:getCertificateKeyPair", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCertificateKeyPair.
type LookupCertificateKeyPairArgs struct {
	FetchCertificate *bool   `pulumi:"fetchCertificate"`
	FetchKey         *bool   `pulumi:"fetchKey"`
	KeyData          *string `pulumi:"keyData"`
	Name             string  `pulumi:"name"`
}

// A collection of values returned by getCertificateKeyPair.
type LookupCertificateKeyPairResult struct {
	CertificateData  string `pulumi:"certificateData"`
	Expiry           string `pulumi:"expiry"`
	FetchCertificate *bool  `pulumi:"fetchCertificate"`
	FetchKey         *bool  `pulumi:"fetchKey"`
	Fingerprint1     string `pulumi:"fingerprint1"`
	Fingerprint256   string `pulumi:"fingerprint256"`
	Id               string `pulumi:"id"`
	KeyData          string `pulumi:"keyData"`
	Name             string `pulumi:"name"`
	Subject          string `pulumi:"subject"`
}

func LookupCertificateKeyPairOutput(ctx *pulumi.Context, args LookupCertificateKeyPairOutputArgs, opts ...pulumi.InvokeOption) LookupCertificateKeyPairResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCertificateKeyPairResult, error) {
			args := v.(LookupCertificateKeyPairArgs)
			r, err := LookupCertificateKeyPair(ctx, &args, opts...)
			var s LookupCertificateKeyPairResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCertificateKeyPairResultOutput)
}

// A collection of arguments for invoking getCertificateKeyPair.
type LookupCertificateKeyPairOutputArgs struct {
	FetchCertificate pulumi.BoolPtrInput   `pulumi:"fetchCertificate"`
	FetchKey         pulumi.BoolPtrInput   `pulumi:"fetchKey"`
	KeyData          pulumi.StringPtrInput `pulumi:"keyData"`
	Name             pulumi.StringInput    `pulumi:"name"`
}

func (LookupCertificateKeyPairOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCertificateKeyPairArgs)(nil)).Elem()
}

// A collection of values returned by getCertificateKeyPair.
type LookupCertificateKeyPairResultOutput struct{ *pulumi.OutputState }

func (LookupCertificateKeyPairResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCertificateKeyPairResult)(nil)).Elem()
}

func (o LookupCertificateKeyPairResultOutput) ToLookupCertificateKeyPairResultOutput() LookupCertificateKeyPairResultOutput {
	return o
}

func (o LookupCertificateKeyPairResultOutput) ToLookupCertificateKeyPairResultOutputWithContext(ctx context.Context) LookupCertificateKeyPairResultOutput {
	return o
}

func (o LookupCertificateKeyPairResultOutput) CertificateData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateKeyPairResult) string { return v.CertificateData }).(pulumi.StringOutput)
}

func (o LookupCertificateKeyPairResultOutput) Expiry() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateKeyPairResult) string { return v.Expiry }).(pulumi.StringOutput)
}

func (o LookupCertificateKeyPairResultOutput) FetchCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupCertificateKeyPairResult) *bool { return v.FetchCertificate }).(pulumi.BoolPtrOutput)
}

func (o LookupCertificateKeyPairResultOutput) FetchKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupCertificateKeyPairResult) *bool { return v.FetchKey }).(pulumi.BoolPtrOutput)
}

func (o LookupCertificateKeyPairResultOutput) Fingerprint1() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateKeyPairResult) string { return v.Fingerprint1 }).(pulumi.StringOutput)
}

func (o LookupCertificateKeyPairResultOutput) Fingerprint256() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateKeyPairResult) string { return v.Fingerprint256 }).(pulumi.StringOutput)
}

func (o LookupCertificateKeyPairResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateKeyPairResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCertificateKeyPairResultOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateKeyPairResult) string { return v.KeyData }).(pulumi.StringOutput)
}

func (o LookupCertificateKeyPairResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateKeyPairResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCertificateKeyPairResultOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateKeyPairResult) string { return v.Subject }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCertificateKeyPairResultOutput{})
}
