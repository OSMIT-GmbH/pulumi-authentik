// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentik

import (
	"context"
	"reflect"

	"errors"
	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Tenant struct {
	pulumi.CustomResourceState

	// JSON format expected. Use jsonencode() to pass objects.
	Attributes         pulumi.StringPtrOutput `pulumi:"attributes"`
	BrandingFavicon    pulumi.StringPtrOutput `pulumi:"brandingFavicon"`
	BrandingLogo       pulumi.StringPtrOutput `pulumi:"brandingLogo"`
	BrandingTitle      pulumi.StringPtrOutput `pulumi:"brandingTitle"`
	Default            pulumi.BoolPtrOutput   `pulumi:"default"`
	Domain             pulumi.StringOutput    `pulumi:"domain"`
	EventRetention     pulumi.StringPtrOutput `pulumi:"eventRetention"`
	FlowAuthentication pulumi.StringPtrOutput `pulumi:"flowAuthentication"`
	FlowDeviceCode     pulumi.StringPtrOutput `pulumi:"flowDeviceCode"`
	FlowInvalidation   pulumi.StringPtrOutput `pulumi:"flowInvalidation"`
	FlowRecovery       pulumi.StringPtrOutput `pulumi:"flowRecovery"`
	FlowUnenrollment   pulumi.StringPtrOutput `pulumi:"flowUnenrollment"`
	FlowUserSettings   pulumi.StringPtrOutput `pulumi:"flowUserSettings"`
	WebCertificate     pulumi.StringPtrOutput `pulumi:"webCertificate"`
}

// NewTenant registers a new resource with the given unique name, arguments, and options.
func NewTenant(ctx *pulumi.Context,
	name string, args *TenantArgs, opts ...pulumi.ResourceOption) (*Tenant, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Tenant
	err := ctx.RegisterResource("authentik:index/tenant:Tenant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTenant gets an existing Tenant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTenant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TenantState, opts ...pulumi.ResourceOption) (*Tenant, error) {
	var resource Tenant
	err := ctx.ReadResource("authentik:index/tenant:Tenant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Tenant resources.
type tenantState struct {
	// JSON format expected. Use jsonencode() to pass objects.
	Attributes         *string `pulumi:"attributes"`
	BrandingFavicon    *string `pulumi:"brandingFavicon"`
	BrandingLogo       *string `pulumi:"brandingLogo"`
	BrandingTitle      *string `pulumi:"brandingTitle"`
	Default            *bool   `pulumi:"default"`
	Domain             *string `pulumi:"domain"`
	EventRetention     *string `pulumi:"eventRetention"`
	FlowAuthentication *string `pulumi:"flowAuthentication"`
	FlowDeviceCode     *string `pulumi:"flowDeviceCode"`
	FlowInvalidation   *string `pulumi:"flowInvalidation"`
	FlowRecovery       *string `pulumi:"flowRecovery"`
	FlowUnenrollment   *string `pulumi:"flowUnenrollment"`
	FlowUserSettings   *string `pulumi:"flowUserSettings"`
	WebCertificate     *string `pulumi:"webCertificate"`
}

type TenantState struct {
	// JSON format expected. Use jsonencode() to pass objects.
	Attributes         pulumi.StringPtrInput
	BrandingFavicon    pulumi.StringPtrInput
	BrandingLogo       pulumi.StringPtrInput
	BrandingTitle      pulumi.StringPtrInput
	Default            pulumi.BoolPtrInput
	Domain             pulumi.StringPtrInput
	EventRetention     pulumi.StringPtrInput
	FlowAuthentication pulumi.StringPtrInput
	FlowDeviceCode     pulumi.StringPtrInput
	FlowInvalidation   pulumi.StringPtrInput
	FlowRecovery       pulumi.StringPtrInput
	FlowUnenrollment   pulumi.StringPtrInput
	FlowUserSettings   pulumi.StringPtrInput
	WebCertificate     pulumi.StringPtrInput
}

func (TenantState) ElementType() reflect.Type {
	return reflect.TypeOf((*tenantState)(nil)).Elem()
}

type tenantArgs struct {
	// JSON format expected. Use jsonencode() to pass objects.
	Attributes         *string `pulumi:"attributes"`
	BrandingFavicon    *string `pulumi:"brandingFavicon"`
	BrandingLogo       *string `pulumi:"brandingLogo"`
	BrandingTitle      *string `pulumi:"brandingTitle"`
	Default            *bool   `pulumi:"default"`
	Domain             string  `pulumi:"domain"`
	EventRetention     *string `pulumi:"eventRetention"`
	FlowAuthentication *string `pulumi:"flowAuthentication"`
	FlowDeviceCode     *string `pulumi:"flowDeviceCode"`
	FlowInvalidation   *string `pulumi:"flowInvalidation"`
	FlowRecovery       *string `pulumi:"flowRecovery"`
	FlowUnenrollment   *string `pulumi:"flowUnenrollment"`
	FlowUserSettings   *string `pulumi:"flowUserSettings"`
	WebCertificate     *string `pulumi:"webCertificate"`
}

// The set of arguments for constructing a Tenant resource.
type TenantArgs struct {
	// JSON format expected. Use jsonencode() to pass objects.
	Attributes         pulumi.StringPtrInput
	BrandingFavicon    pulumi.StringPtrInput
	BrandingLogo       pulumi.StringPtrInput
	BrandingTitle      pulumi.StringPtrInput
	Default            pulumi.BoolPtrInput
	Domain             pulumi.StringInput
	EventRetention     pulumi.StringPtrInput
	FlowAuthentication pulumi.StringPtrInput
	FlowDeviceCode     pulumi.StringPtrInput
	FlowInvalidation   pulumi.StringPtrInput
	FlowRecovery       pulumi.StringPtrInput
	FlowUnenrollment   pulumi.StringPtrInput
	FlowUserSettings   pulumi.StringPtrInput
	WebCertificate     pulumi.StringPtrInput
}

func (TenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tenantArgs)(nil)).Elem()
}

type TenantInput interface {
	pulumi.Input

	ToTenantOutput() TenantOutput
	ToTenantOutputWithContext(ctx context.Context) TenantOutput
}

func (*Tenant) ElementType() reflect.Type {
	return reflect.TypeOf((**Tenant)(nil)).Elem()
}

func (i *Tenant) ToTenantOutput() TenantOutput {
	return i.ToTenantOutputWithContext(context.Background())
}

func (i *Tenant) ToTenantOutputWithContext(ctx context.Context) TenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantOutput)
}

// TenantArrayInput is an input type that accepts TenantArray and TenantArrayOutput values.
// You can construct a concrete instance of `TenantArrayInput` via:
//
//	TenantArray{ TenantArgs{...} }
type TenantArrayInput interface {
	pulumi.Input

	ToTenantArrayOutput() TenantArrayOutput
	ToTenantArrayOutputWithContext(context.Context) TenantArrayOutput
}

type TenantArray []TenantInput

func (TenantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Tenant)(nil)).Elem()
}

func (i TenantArray) ToTenantArrayOutput() TenantArrayOutput {
	return i.ToTenantArrayOutputWithContext(context.Background())
}

func (i TenantArray) ToTenantArrayOutputWithContext(ctx context.Context) TenantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantArrayOutput)
}

// TenantMapInput is an input type that accepts TenantMap and TenantMapOutput values.
// You can construct a concrete instance of `TenantMapInput` via:
//
//	TenantMap{ "key": TenantArgs{...} }
type TenantMapInput interface {
	pulumi.Input

	ToTenantMapOutput() TenantMapOutput
	ToTenantMapOutputWithContext(context.Context) TenantMapOutput
}

type TenantMap map[string]TenantInput

func (TenantMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Tenant)(nil)).Elem()
}

func (i TenantMap) ToTenantMapOutput() TenantMapOutput {
	return i.ToTenantMapOutputWithContext(context.Background())
}

func (i TenantMap) ToTenantMapOutputWithContext(ctx context.Context) TenantMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantMapOutput)
}

type TenantOutput struct{ *pulumi.OutputState }

func (TenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Tenant)(nil)).Elem()
}

func (o TenantOutput) ToTenantOutput() TenantOutput {
	return o
}

func (o TenantOutput) ToTenantOutputWithContext(ctx context.Context) TenantOutput {
	return o
}

// JSON format expected. Use jsonencode() to pass objects.
func (o TenantOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

func (o TenantOutput) BrandingFavicon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.BrandingFavicon }).(pulumi.StringPtrOutput)
}

func (o TenantOutput) BrandingLogo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.BrandingLogo }).(pulumi.StringPtrOutput)
}

func (o TenantOutput) BrandingTitle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.BrandingTitle }).(pulumi.StringPtrOutput)
}

func (o TenantOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.BoolPtrOutput { return v.Default }).(pulumi.BoolPtrOutput)
}

func (o TenantOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

func (o TenantOutput) EventRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.EventRetention }).(pulumi.StringPtrOutput)
}

func (o TenantOutput) FlowAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.FlowAuthentication }).(pulumi.StringPtrOutput)
}

func (o TenantOutput) FlowDeviceCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.FlowDeviceCode }).(pulumi.StringPtrOutput)
}

func (o TenantOutput) FlowInvalidation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.FlowInvalidation }).(pulumi.StringPtrOutput)
}

func (o TenantOutput) FlowRecovery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.FlowRecovery }).(pulumi.StringPtrOutput)
}

func (o TenantOutput) FlowUnenrollment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.FlowUnenrollment }).(pulumi.StringPtrOutput)
}

func (o TenantOutput) FlowUserSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.FlowUserSettings }).(pulumi.StringPtrOutput)
}

func (o TenantOutput) WebCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.WebCertificate }).(pulumi.StringPtrOutput)
}

type TenantArrayOutput struct{ *pulumi.OutputState }

func (TenantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Tenant)(nil)).Elem()
}

func (o TenantArrayOutput) ToTenantArrayOutput() TenantArrayOutput {
	return o
}

func (o TenantArrayOutput) ToTenantArrayOutputWithContext(ctx context.Context) TenantArrayOutput {
	return o
}

func (o TenantArrayOutput) Index(i pulumi.IntInput) TenantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Tenant {
		return vs[0].([]*Tenant)[vs[1].(int)]
	}).(TenantOutput)
}

type TenantMapOutput struct{ *pulumi.OutputState }

func (TenantMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Tenant)(nil)).Elem()
}

func (o TenantMapOutput) ToTenantMapOutput() TenantMapOutput {
	return o
}

func (o TenantMapOutput) ToTenantMapOutputWithContext(ctx context.Context) TenantMapOutput {
	return o
}

func (o TenantMapOutput) MapIndex(k pulumi.StringInput) TenantOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Tenant {
		return vs[0].(map[string]*Tenant)[vs[1].(string)]
	}).(TenantOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInput)(nil)).Elem(), &Tenant{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantArrayInput)(nil)).Elem(), TenantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantMapInput)(nil)).Elem(), TenantMap{})
	pulumi.RegisterOutputType(TenantOutput{})
	pulumi.RegisterOutputType(TenantArrayOutput{})
	pulumi.RegisterOutputType(TenantMapOutput{})
}
