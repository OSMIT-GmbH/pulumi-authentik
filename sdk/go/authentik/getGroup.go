// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentik

import (
	"context"
	"reflect"

	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/v2024/go/authentik/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get groups by pk or name
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/v2024/go/authentik"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := authentik.LookupGroup(ctx, &authentik.LookupGroupArgs{
//				Name: pulumi.StringRef("authentik Admins"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupGroup(ctx *pulumi.Context, args *LookupGroupArgs, opts ...pulumi.InvokeOption) (*LookupGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGroupResult
	err := ctx.Invoke("authentik:index/getGroup:getGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroup.
type LookupGroupArgs struct {
	IncludeUsers *bool   `pulumi:"includeUsers"`
	Name         *string `pulumi:"name"`
	Pk           *string `pulumi:"pk"`
}

// A collection of values returned by getGroup.
type LookupGroupResult struct {
	// Generated.
	Attributes string `pulumi:"attributes"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	IncludeUsers *bool  `pulumi:"includeUsers"`
	// Generated.
	IsSuperuser bool    `pulumi:"isSuperuser"`
	Name        *string `pulumi:"name"`
	// Generated.
	NumPk int `pulumi:"numPk"`
	// Generated.
	Parent string `pulumi:"parent"`
	// Generated.
	ParentName string  `pulumi:"parentName"`
	Pk         *string `pulumi:"pk"`
	// Generated.
	Users []int `pulumi:"users"`
	// Generated.
	UsersObjs []GetGroupUsersObj `pulumi:"usersObjs"`
}

func LookupGroupOutput(ctx *pulumi.Context, args LookupGroupOutputArgs, opts ...pulumi.InvokeOption) LookupGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGroupResultOutput, error) {
			args := v.(LookupGroupArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupGroupResult
			secret, err := ctx.InvokePackageRaw("authentik:index/getGroup:getGroup", args, &rv, "", opts...)
			if err != nil {
				return LookupGroupResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupGroupResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupGroupResultOutput), nil
			}
			return output, nil
		}).(LookupGroupResultOutput)
}

// A collection of arguments for invoking getGroup.
type LookupGroupOutputArgs struct {
	IncludeUsers pulumi.BoolPtrInput   `pulumi:"includeUsers"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	Pk           pulumi.StringPtrInput `pulumi:"pk"`
}

func (LookupGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupArgs)(nil)).Elem()
}

// A collection of values returned by getGroup.
type LookupGroupResultOutput struct{ *pulumi.OutputState }

func (LookupGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupResult)(nil)).Elem()
}

func (o LookupGroupResultOutput) ToLookupGroupResultOutput() LookupGroupResultOutput {
	return o
}

func (o LookupGroupResultOutput) ToLookupGroupResultOutputWithContext(ctx context.Context) LookupGroupResultOutput {
	return o
}

// Generated.
func (o LookupGroupResultOutput) Attributes() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Attributes }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupGroupResultOutput) IncludeUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *bool { return v.IncludeUsers }).(pulumi.BoolPtrOutput)
}

// Generated.
func (o LookupGroupResultOutput) IsSuperuser() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.IsSuperuser }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Generated.
func (o LookupGroupResultOutput) NumPk() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGroupResult) int { return v.NumPk }).(pulumi.IntOutput)
}

// Generated.
func (o LookupGroupResultOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Parent }).(pulumi.StringOutput)
}

// Generated.
func (o LookupGroupResultOutput) ParentName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.ParentName }).(pulumi.StringOutput)
}

func (o LookupGroupResultOutput) Pk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *string { return v.Pk }).(pulumi.StringPtrOutput)
}

// Generated.
func (o LookupGroupResultOutput) Users() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupGroupResult) []int { return v.Users }).(pulumi.IntArrayOutput)
}

// Generated.
func (o LookupGroupResultOutput) UsersObjs() GetGroupUsersObjArrayOutput {
	return o.ApplyT(func(v LookupGroupResult) []GetGroupUsersObj { return v.UsersObjs }).(GetGroupUsersObjArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGroupResultOutput{})
}
