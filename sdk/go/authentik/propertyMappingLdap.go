// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentik

import (
	"context"
	"reflect"

	"errors"
	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PropertyMappingLdap struct {
	pulumi.CustomResourceState

	Expression  pulumi.StringOutput `pulumi:"expression"`
	Name        pulumi.StringOutput `pulumi:"name"`
	ObjectField pulumi.StringOutput `pulumi:"objectField"`
}

// NewPropertyMappingLdap registers a new resource with the given unique name, arguments, and options.
func NewPropertyMappingLdap(ctx *pulumi.Context,
	name string, args *PropertyMappingLdapArgs, opts ...pulumi.ResourceOption) (*PropertyMappingLdap, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Expression == nil {
		return nil, errors.New("invalid value for required argument 'Expression'")
	}
	if args.ObjectField == nil {
		return nil, errors.New("invalid value for required argument 'ObjectField'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PropertyMappingLdap
	err := ctx.RegisterResource("authentik:index/propertyMappingLdap:PropertyMappingLdap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPropertyMappingLdap gets an existing PropertyMappingLdap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPropertyMappingLdap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PropertyMappingLdapState, opts ...pulumi.ResourceOption) (*PropertyMappingLdap, error) {
	var resource PropertyMappingLdap
	err := ctx.ReadResource("authentik:index/propertyMappingLdap:PropertyMappingLdap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PropertyMappingLdap resources.
type propertyMappingLdapState struct {
	Expression  *string `pulumi:"expression"`
	Name        *string `pulumi:"name"`
	ObjectField *string `pulumi:"objectField"`
}

type PropertyMappingLdapState struct {
	Expression  pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	ObjectField pulumi.StringPtrInput
}

func (PropertyMappingLdapState) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyMappingLdapState)(nil)).Elem()
}

type propertyMappingLdapArgs struct {
	Expression  string  `pulumi:"expression"`
	Name        *string `pulumi:"name"`
	ObjectField string  `pulumi:"objectField"`
}

// The set of arguments for constructing a PropertyMappingLdap resource.
type PropertyMappingLdapArgs struct {
	Expression  pulumi.StringInput
	Name        pulumi.StringPtrInput
	ObjectField pulumi.StringInput
}

func (PropertyMappingLdapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyMappingLdapArgs)(nil)).Elem()
}

type PropertyMappingLdapInput interface {
	pulumi.Input

	ToPropertyMappingLdapOutput() PropertyMappingLdapOutput
	ToPropertyMappingLdapOutputWithContext(ctx context.Context) PropertyMappingLdapOutput
}

func (*PropertyMappingLdap) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyMappingLdap)(nil)).Elem()
}

func (i *PropertyMappingLdap) ToPropertyMappingLdapOutput() PropertyMappingLdapOutput {
	return i.ToPropertyMappingLdapOutputWithContext(context.Background())
}

func (i *PropertyMappingLdap) ToPropertyMappingLdapOutputWithContext(ctx context.Context) PropertyMappingLdapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyMappingLdapOutput)
}

// PropertyMappingLdapArrayInput is an input type that accepts PropertyMappingLdapArray and PropertyMappingLdapArrayOutput values.
// You can construct a concrete instance of `PropertyMappingLdapArrayInput` via:
//
//	PropertyMappingLdapArray{ PropertyMappingLdapArgs{...} }
type PropertyMappingLdapArrayInput interface {
	pulumi.Input

	ToPropertyMappingLdapArrayOutput() PropertyMappingLdapArrayOutput
	ToPropertyMappingLdapArrayOutputWithContext(context.Context) PropertyMappingLdapArrayOutput
}

type PropertyMappingLdapArray []PropertyMappingLdapInput

func (PropertyMappingLdapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PropertyMappingLdap)(nil)).Elem()
}

func (i PropertyMappingLdapArray) ToPropertyMappingLdapArrayOutput() PropertyMappingLdapArrayOutput {
	return i.ToPropertyMappingLdapArrayOutputWithContext(context.Background())
}

func (i PropertyMappingLdapArray) ToPropertyMappingLdapArrayOutputWithContext(ctx context.Context) PropertyMappingLdapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyMappingLdapArrayOutput)
}

// PropertyMappingLdapMapInput is an input type that accepts PropertyMappingLdapMap and PropertyMappingLdapMapOutput values.
// You can construct a concrete instance of `PropertyMappingLdapMapInput` via:
//
//	PropertyMappingLdapMap{ "key": PropertyMappingLdapArgs{...} }
type PropertyMappingLdapMapInput interface {
	pulumi.Input

	ToPropertyMappingLdapMapOutput() PropertyMappingLdapMapOutput
	ToPropertyMappingLdapMapOutputWithContext(context.Context) PropertyMappingLdapMapOutput
}

type PropertyMappingLdapMap map[string]PropertyMappingLdapInput

func (PropertyMappingLdapMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PropertyMappingLdap)(nil)).Elem()
}

func (i PropertyMappingLdapMap) ToPropertyMappingLdapMapOutput() PropertyMappingLdapMapOutput {
	return i.ToPropertyMappingLdapMapOutputWithContext(context.Background())
}

func (i PropertyMappingLdapMap) ToPropertyMappingLdapMapOutputWithContext(ctx context.Context) PropertyMappingLdapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyMappingLdapMapOutput)
}

type PropertyMappingLdapOutput struct{ *pulumi.OutputState }

func (PropertyMappingLdapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyMappingLdap)(nil)).Elem()
}

func (o PropertyMappingLdapOutput) ToPropertyMappingLdapOutput() PropertyMappingLdapOutput {
	return o
}

func (o PropertyMappingLdapOutput) ToPropertyMappingLdapOutputWithContext(ctx context.Context) PropertyMappingLdapOutput {
	return o
}

func (o PropertyMappingLdapOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyMappingLdap) pulumi.StringOutput { return v.Expression }).(pulumi.StringOutput)
}

func (o PropertyMappingLdapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyMappingLdap) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyMappingLdapOutput) ObjectField() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyMappingLdap) pulumi.StringOutput { return v.ObjectField }).(pulumi.StringOutput)
}

type PropertyMappingLdapArrayOutput struct{ *pulumi.OutputState }

func (PropertyMappingLdapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PropertyMappingLdap)(nil)).Elem()
}

func (o PropertyMappingLdapArrayOutput) ToPropertyMappingLdapArrayOutput() PropertyMappingLdapArrayOutput {
	return o
}

func (o PropertyMappingLdapArrayOutput) ToPropertyMappingLdapArrayOutputWithContext(ctx context.Context) PropertyMappingLdapArrayOutput {
	return o
}

func (o PropertyMappingLdapArrayOutput) Index(i pulumi.IntInput) PropertyMappingLdapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PropertyMappingLdap {
		return vs[0].([]*PropertyMappingLdap)[vs[1].(int)]
	}).(PropertyMappingLdapOutput)
}

type PropertyMappingLdapMapOutput struct{ *pulumi.OutputState }

func (PropertyMappingLdapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PropertyMappingLdap)(nil)).Elem()
}

func (o PropertyMappingLdapMapOutput) ToPropertyMappingLdapMapOutput() PropertyMappingLdapMapOutput {
	return o
}

func (o PropertyMappingLdapMapOutput) ToPropertyMappingLdapMapOutputWithContext(ctx context.Context) PropertyMappingLdapMapOutput {
	return o
}

func (o PropertyMappingLdapMapOutput) MapIndex(k pulumi.StringInput) PropertyMappingLdapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PropertyMappingLdap {
		return vs[0].(map[string]*PropertyMappingLdap)[vs[1].(string)]
	}).(PropertyMappingLdapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyMappingLdapInput)(nil)).Elem(), &PropertyMappingLdap{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyMappingLdapArrayInput)(nil)).Elem(), PropertyMappingLdapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyMappingLdapMapInput)(nil)).Elem(), PropertyMappingLdapMap{})
	pulumi.RegisterOutputType(PropertyMappingLdapOutput{})
	pulumi.RegisterOutputType(PropertyMappingLdapArrayOutput{})
	pulumi.RegisterOutputType(PropertyMappingLdapMapOutput{})
}
