// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentik

import (
	"context"
	"reflect"

	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get SAML Property mappings
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := authentik.LookupPropertyMappingSaml(ctx, &authentik.LookupPropertyMappingSamlArgs{
//				ManagedLists: []string{
//					"goauthentik.io/providers/saml/upn",
//					"goauthentik.io/providers/saml/name",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPropertyMappingSaml(ctx *pulumi.Context, args *LookupPropertyMappingSamlArgs, opts ...pulumi.InvokeOption) (*LookupPropertyMappingSamlResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPropertyMappingSamlResult
	err := ctx.Invoke("authentik:index/getPropertyMappingSaml:getPropertyMappingSaml", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPropertyMappingSaml.
type LookupPropertyMappingSamlArgs struct {
	// Generated.
	Expression *string `pulumi:"expression"`
	// Generated.
	FriendlyName *string `pulumi:"friendlyName"`
	// List of ids when `managedList` is set. Generated.
	Ids     []string `pulumi:"ids"`
	Managed *string  `pulumi:"managed"`
	// Retrive multiple property mappings
	ManagedLists []string `pulumi:"managedLists"`
	Name         *string  `pulumi:"name"`
	// Generated.
	SamlName *string `pulumi:"samlName"`
}

// A collection of values returned by getPropertyMappingSaml.
type LookupPropertyMappingSamlResult struct {
	// Generated.
	Expression string `pulumi:"expression"`
	// Generated.
	FriendlyName string `pulumi:"friendlyName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of ids when `managedList` is set. Generated.
	Ids     []string `pulumi:"ids"`
	Managed *string  `pulumi:"managed"`
	// Retrive multiple property mappings
	ManagedLists []string `pulumi:"managedLists"`
	Name         *string  `pulumi:"name"`
	// Generated.
	SamlName string `pulumi:"samlName"`
}

func LookupPropertyMappingSamlOutput(ctx *pulumi.Context, args LookupPropertyMappingSamlOutputArgs, opts ...pulumi.InvokeOption) LookupPropertyMappingSamlResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPropertyMappingSamlResult, error) {
			args := v.(LookupPropertyMappingSamlArgs)
			r, err := LookupPropertyMappingSaml(ctx, &args, opts...)
			var s LookupPropertyMappingSamlResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPropertyMappingSamlResultOutput)
}

// A collection of arguments for invoking getPropertyMappingSaml.
type LookupPropertyMappingSamlOutputArgs struct {
	// Generated.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Generated.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// List of ids when `managedList` is set. Generated.
	Ids     pulumi.StringArrayInput `pulumi:"ids"`
	Managed pulumi.StringPtrInput   `pulumi:"managed"`
	// Retrive multiple property mappings
	ManagedLists pulumi.StringArrayInput `pulumi:"managedLists"`
	Name         pulumi.StringPtrInput   `pulumi:"name"`
	// Generated.
	SamlName pulumi.StringPtrInput `pulumi:"samlName"`
}

func (LookupPropertyMappingSamlOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPropertyMappingSamlArgs)(nil)).Elem()
}

// A collection of values returned by getPropertyMappingSaml.
type LookupPropertyMappingSamlResultOutput struct{ *pulumi.OutputState }

func (LookupPropertyMappingSamlResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPropertyMappingSamlResult)(nil)).Elem()
}

func (o LookupPropertyMappingSamlResultOutput) ToLookupPropertyMappingSamlResultOutput() LookupPropertyMappingSamlResultOutput {
	return o
}

func (o LookupPropertyMappingSamlResultOutput) ToLookupPropertyMappingSamlResultOutputWithContext(ctx context.Context) LookupPropertyMappingSamlResultOutput {
	return o
}

func (o LookupPropertyMappingSamlResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupPropertyMappingSamlResult] {
	return pulumix.Output[LookupPropertyMappingSamlResult]{
		OutputState: o.OutputState,
	}
}

// Generated.
func (o LookupPropertyMappingSamlResultOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyMappingSamlResult) string { return v.Expression }).(pulumi.StringOutput)
}

// Generated.
func (o LookupPropertyMappingSamlResultOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyMappingSamlResult) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPropertyMappingSamlResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyMappingSamlResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of ids when `managedList` is set. Generated.
func (o LookupPropertyMappingSamlResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPropertyMappingSamlResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o LookupPropertyMappingSamlResultOutput) Managed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPropertyMappingSamlResult) *string { return v.Managed }).(pulumi.StringPtrOutput)
}

// Retrive multiple property mappings
func (o LookupPropertyMappingSamlResultOutput) ManagedLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPropertyMappingSamlResult) []string { return v.ManagedLists }).(pulumi.StringArrayOutput)
}

func (o LookupPropertyMappingSamlResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPropertyMappingSamlResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Generated.
func (o LookupPropertyMappingSamlResultOutput) SamlName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyMappingSamlResult) string { return v.SamlName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPropertyMappingSamlResultOutput{})
}
