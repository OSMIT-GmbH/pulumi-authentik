// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentik

import (
	"context"
	"reflect"

	"errors"
	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manage Google Workspace Provider Property mappings
type PropertyMappingProviderGoogleWorkspace struct {
	pulumi.CustomResourceState

	Expression pulumi.StringOutput `pulumi:"expression"`
	Name       pulumi.StringOutput `pulumi:"name"`
}

// NewPropertyMappingProviderGoogleWorkspace registers a new resource with the given unique name, arguments, and options.
func NewPropertyMappingProviderGoogleWorkspace(ctx *pulumi.Context,
	name string, args *PropertyMappingProviderGoogleWorkspaceArgs, opts ...pulumi.ResourceOption) (*PropertyMappingProviderGoogleWorkspace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Expression == nil {
		return nil, errors.New("invalid value for required argument 'Expression'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PropertyMappingProviderGoogleWorkspace
	err := ctx.RegisterResource("authentik:index/propertyMappingProviderGoogleWorkspace:PropertyMappingProviderGoogleWorkspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPropertyMappingProviderGoogleWorkspace gets an existing PropertyMappingProviderGoogleWorkspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPropertyMappingProviderGoogleWorkspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PropertyMappingProviderGoogleWorkspaceState, opts ...pulumi.ResourceOption) (*PropertyMappingProviderGoogleWorkspace, error) {
	var resource PropertyMappingProviderGoogleWorkspace
	err := ctx.ReadResource("authentik:index/propertyMappingProviderGoogleWorkspace:PropertyMappingProviderGoogleWorkspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PropertyMappingProviderGoogleWorkspace resources.
type propertyMappingProviderGoogleWorkspaceState struct {
	Expression *string `pulumi:"expression"`
	Name       *string `pulumi:"name"`
}

type PropertyMappingProviderGoogleWorkspaceState struct {
	Expression pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
}

func (PropertyMappingProviderGoogleWorkspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyMappingProviderGoogleWorkspaceState)(nil)).Elem()
}

type propertyMappingProviderGoogleWorkspaceArgs struct {
	Expression string  `pulumi:"expression"`
	Name       *string `pulumi:"name"`
}

// The set of arguments for constructing a PropertyMappingProviderGoogleWorkspace resource.
type PropertyMappingProviderGoogleWorkspaceArgs struct {
	Expression pulumi.StringInput
	Name       pulumi.StringPtrInput
}

func (PropertyMappingProviderGoogleWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyMappingProviderGoogleWorkspaceArgs)(nil)).Elem()
}

type PropertyMappingProviderGoogleWorkspaceInput interface {
	pulumi.Input

	ToPropertyMappingProviderGoogleWorkspaceOutput() PropertyMappingProviderGoogleWorkspaceOutput
	ToPropertyMappingProviderGoogleWorkspaceOutputWithContext(ctx context.Context) PropertyMappingProviderGoogleWorkspaceOutput
}

func (*PropertyMappingProviderGoogleWorkspace) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyMappingProviderGoogleWorkspace)(nil)).Elem()
}

func (i *PropertyMappingProviderGoogleWorkspace) ToPropertyMappingProviderGoogleWorkspaceOutput() PropertyMappingProviderGoogleWorkspaceOutput {
	return i.ToPropertyMappingProviderGoogleWorkspaceOutputWithContext(context.Background())
}

func (i *PropertyMappingProviderGoogleWorkspace) ToPropertyMappingProviderGoogleWorkspaceOutputWithContext(ctx context.Context) PropertyMappingProviderGoogleWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyMappingProviderGoogleWorkspaceOutput)
}

// PropertyMappingProviderGoogleWorkspaceArrayInput is an input type that accepts PropertyMappingProviderGoogleWorkspaceArray and PropertyMappingProviderGoogleWorkspaceArrayOutput values.
// You can construct a concrete instance of `PropertyMappingProviderGoogleWorkspaceArrayInput` via:
//
//	PropertyMappingProviderGoogleWorkspaceArray{ PropertyMappingProviderGoogleWorkspaceArgs{...} }
type PropertyMappingProviderGoogleWorkspaceArrayInput interface {
	pulumi.Input

	ToPropertyMappingProviderGoogleWorkspaceArrayOutput() PropertyMappingProviderGoogleWorkspaceArrayOutput
	ToPropertyMappingProviderGoogleWorkspaceArrayOutputWithContext(context.Context) PropertyMappingProviderGoogleWorkspaceArrayOutput
}

type PropertyMappingProviderGoogleWorkspaceArray []PropertyMappingProviderGoogleWorkspaceInput

func (PropertyMappingProviderGoogleWorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PropertyMappingProviderGoogleWorkspace)(nil)).Elem()
}

func (i PropertyMappingProviderGoogleWorkspaceArray) ToPropertyMappingProviderGoogleWorkspaceArrayOutput() PropertyMappingProviderGoogleWorkspaceArrayOutput {
	return i.ToPropertyMappingProviderGoogleWorkspaceArrayOutputWithContext(context.Background())
}

func (i PropertyMappingProviderGoogleWorkspaceArray) ToPropertyMappingProviderGoogleWorkspaceArrayOutputWithContext(ctx context.Context) PropertyMappingProviderGoogleWorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyMappingProviderGoogleWorkspaceArrayOutput)
}

// PropertyMappingProviderGoogleWorkspaceMapInput is an input type that accepts PropertyMappingProviderGoogleWorkspaceMap and PropertyMappingProviderGoogleWorkspaceMapOutput values.
// You can construct a concrete instance of `PropertyMappingProviderGoogleWorkspaceMapInput` via:
//
//	PropertyMappingProviderGoogleWorkspaceMap{ "key": PropertyMappingProviderGoogleWorkspaceArgs{...} }
type PropertyMappingProviderGoogleWorkspaceMapInput interface {
	pulumi.Input

	ToPropertyMappingProviderGoogleWorkspaceMapOutput() PropertyMappingProviderGoogleWorkspaceMapOutput
	ToPropertyMappingProviderGoogleWorkspaceMapOutputWithContext(context.Context) PropertyMappingProviderGoogleWorkspaceMapOutput
}

type PropertyMappingProviderGoogleWorkspaceMap map[string]PropertyMappingProviderGoogleWorkspaceInput

func (PropertyMappingProviderGoogleWorkspaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PropertyMappingProviderGoogleWorkspace)(nil)).Elem()
}

func (i PropertyMappingProviderGoogleWorkspaceMap) ToPropertyMappingProviderGoogleWorkspaceMapOutput() PropertyMappingProviderGoogleWorkspaceMapOutput {
	return i.ToPropertyMappingProviderGoogleWorkspaceMapOutputWithContext(context.Background())
}

func (i PropertyMappingProviderGoogleWorkspaceMap) ToPropertyMappingProviderGoogleWorkspaceMapOutputWithContext(ctx context.Context) PropertyMappingProviderGoogleWorkspaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyMappingProviderGoogleWorkspaceMapOutput)
}

type PropertyMappingProviderGoogleWorkspaceOutput struct{ *pulumi.OutputState }

func (PropertyMappingProviderGoogleWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyMappingProviderGoogleWorkspace)(nil)).Elem()
}

func (o PropertyMappingProviderGoogleWorkspaceOutput) ToPropertyMappingProviderGoogleWorkspaceOutput() PropertyMappingProviderGoogleWorkspaceOutput {
	return o
}

func (o PropertyMappingProviderGoogleWorkspaceOutput) ToPropertyMappingProviderGoogleWorkspaceOutputWithContext(ctx context.Context) PropertyMappingProviderGoogleWorkspaceOutput {
	return o
}

func (o PropertyMappingProviderGoogleWorkspaceOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyMappingProviderGoogleWorkspace) pulumi.StringOutput { return v.Expression }).(pulumi.StringOutput)
}

func (o PropertyMappingProviderGoogleWorkspaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyMappingProviderGoogleWorkspace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type PropertyMappingProviderGoogleWorkspaceArrayOutput struct{ *pulumi.OutputState }

func (PropertyMappingProviderGoogleWorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PropertyMappingProviderGoogleWorkspace)(nil)).Elem()
}

func (o PropertyMappingProviderGoogleWorkspaceArrayOutput) ToPropertyMappingProviderGoogleWorkspaceArrayOutput() PropertyMappingProviderGoogleWorkspaceArrayOutput {
	return o
}

func (o PropertyMappingProviderGoogleWorkspaceArrayOutput) ToPropertyMappingProviderGoogleWorkspaceArrayOutputWithContext(ctx context.Context) PropertyMappingProviderGoogleWorkspaceArrayOutput {
	return o
}

func (o PropertyMappingProviderGoogleWorkspaceArrayOutput) Index(i pulumi.IntInput) PropertyMappingProviderGoogleWorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PropertyMappingProviderGoogleWorkspace {
		return vs[0].([]*PropertyMappingProviderGoogleWorkspace)[vs[1].(int)]
	}).(PropertyMappingProviderGoogleWorkspaceOutput)
}

type PropertyMappingProviderGoogleWorkspaceMapOutput struct{ *pulumi.OutputState }

func (PropertyMappingProviderGoogleWorkspaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PropertyMappingProviderGoogleWorkspace)(nil)).Elem()
}

func (o PropertyMappingProviderGoogleWorkspaceMapOutput) ToPropertyMappingProviderGoogleWorkspaceMapOutput() PropertyMappingProviderGoogleWorkspaceMapOutput {
	return o
}

func (o PropertyMappingProviderGoogleWorkspaceMapOutput) ToPropertyMappingProviderGoogleWorkspaceMapOutputWithContext(ctx context.Context) PropertyMappingProviderGoogleWorkspaceMapOutput {
	return o
}

func (o PropertyMappingProviderGoogleWorkspaceMapOutput) MapIndex(k pulumi.StringInput) PropertyMappingProviderGoogleWorkspaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PropertyMappingProviderGoogleWorkspace {
		return vs[0].(map[string]*PropertyMappingProviderGoogleWorkspace)[vs[1].(string)]
	}).(PropertyMappingProviderGoogleWorkspaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyMappingProviderGoogleWorkspaceInput)(nil)).Elem(), &PropertyMappingProviderGoogleWorkspace{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyMappingProviderGoogleWorkspaceArrayInput)(nil)).Elem(), PropertyMappingProviderGoogleWorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyMappingProviderGoogleWorkspaceMapInput)(nil)).Elem(), PropertyMappingProviderGoogleWorkspaceMap{})
	pulumi.RegisterOutputType(PropertyMappingProviderGoogleWorkspaceOutput{})
	pulumi.RegisterOutputType(PropertyMappingProviderGoogleWorkspaceArrayOutput{})
	pulumi.RegisterOutputType(PropertyMappingProviderGoogleWorkspaceMapOutput{})
}
