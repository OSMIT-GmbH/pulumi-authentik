// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentik

import (
	"context"
	"reflect"

	"github.com/OSMIT-GmbH/pulumi-authentik/sdk/go/authentik/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupUser(ctx *pulumi.Context, args *LookupUserArgs, opts ...pulumi.InvokeOption) (*LookupUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserResult
	err := ctx.Invoke("authentik:index/getUser:getUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUser.
type LookupUserArgs struct {
	Pk       *int    `pulumi:"pk"`
	Username *string `pulumi:"username"`
}

// A collection of values returned by getUser.
type LookupUserResult struct {
	Attributes string   `pulumi:"attributes"`
	Avatar     string   `pulumi:"avatar"`
	Email      string   `pulumi:"email"`
	Groups     []string `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	IsActive    bool   `pulumi:"isActive"`
	IsSuperuser bool   `pulumi:"isSuperuser"`
	LastLogin   string `pulumi:"lastLogin"`
	Name        string `pulumi:"name"`
	Path        string `pulumi:"path"`
	Pk          int    `pulumi:"pk"`
	Type        string `pulumi:"type"`
	Uid         string `pulumi:"uid"`
	Username    string `pulumi:"username"`
}

func LookupUserOutput(ctx *pulumi.Context, args LookupUserOutputArgs, opts ...pulumi.InvokeOption) LookupUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserResult, error) {
			args := v.(LookupUserArgs)
			r, err := LookupUser(ctx, &args, opts...)
			var s LookupUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserResultOutput)
}

// A collection of arguments for invoking getUser.
type LookupUserOutputArgs struct {
	Pk       pulumi.IntPtrInput    `pulumi:"pk"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (LookupUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserArgs)(nil)).Elem()
}

// A collection of values returned by getUser.
type LookupUserResultOutput struct{ *pulumi.OutputState }

func (LookupUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserResult)(nil)).Elem()
}

func (o LookupUserResultOutput) ToLookupUserResultOutput() LookupUserResultOutput {
	return o
}

func (o LookupUserResultOutput) ToLookupUserResultOutputWithContext(ctx context.Context) LookupUserResultOutput {
	return o
}

func (o LookupUserResultOutput) Attributes() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Attributes }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Avatar() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Avatar }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Email }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.IsActive }).(pulumi.BoolOutput)
}

func (o LookupUserResultOutput) IsSuperuser() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.IsSuperuser }).(pulumi.BoolOutput)
}

func (o LookupUserResultOutput) LastLogin() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.LastLogin }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Path }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Pk() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUserResult) int { return v.Pk }).(pulumi.IntOutput)
}

func (o LookupUserResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Uid }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserResultOutput{})
}
