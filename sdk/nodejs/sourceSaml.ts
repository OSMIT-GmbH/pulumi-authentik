// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as authentik from "@osmit-gmbh/pulumi-authentik";
 * import * as authentik from "@pulumi/authentik";
 *
 * const default-source-pre-authentication = authentik.getFlow({
 *     slug: "default-source-pre-authentication",
 * });
 * const default-source-authentication = authentik.getFlow({
 *     slug: "default-source-authentication",
 * });
 * const default-source-enrollment = authentik.getFlow({
 *     slug: "default-source-enrollment",
 * });
 * const name = new authentik.SourceSaml("name", {
 *     slug: "test-source",
 *     authenticationFlow: default_source_authentication.then(default_source_authentication => default_source_authentication.id),
 *     enrollmentFlow: default_source_enrollment.then(default_source_enrollment => default_source_enrollment.id),
 *     preAuthenticationFlow: default_source_pre_authentication.then(default_source_pre_authentication => default_source_pre_authentication.id),
 *     ssoUrl: "http://localhost",
 * });
 * ```
 */
export class SourceSaml extends pulumi.CustomResource {
    /**
     * Get an existing SourceSaml resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SourceSamlState, opts?: pulumi.CustomResourceOptions): SourceSaml {
        return new SourceSaml(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/sourceSaml:SourceSaml';

    /**
     * Returns true if the given object is an instance of SourceSaml.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SourceSaml {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SourceSaml.__pulumiType;
    }

    public readonly allowIdpInitiated!: pulumi.Output<boolean | undefined>;
    public readonly authenticationFlow!: pulumi.Output<string | undefined>;
    /**
     * Allowed values: - `REDIRECT` - `POST` - `POST_AUTO`
     */
    public readonly bindingType!: pulumi.Output<string | undefined>;
    /**
     * Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512`
     */
    public readonly digestAlgorithm!: pulumi.Output<string | undefined>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public readonly encryptionKp!: pulumi.Output<string | undefined>;
    public readonly enrollmentFlow!: pulumi.Output<string | undefined>;
    /**
     * Allowed values: - `identifier` - `nameLink` - `nameDeny`
     */
    public readonly groupMatchingMode!: pulumi.Output<string | undefined>;
    public readonly issuer!: pulumi.Output<string | undefined>;
    /**
     * SAML Metadata
     */
    public /*out*/ readonly metadata!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -
     * `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -
     * `urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -
     * `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`
     */
    public readonly nameIdPolicy!: pulumi.Output<string | undefined>;
    /**
     * Allowed values: - `all` - `any`
     */
    public readonly policyEngineMode!: pulumi.Output<string | undefined>;
    public readonly preAuthenticationFlow!: pulumi.Output<string>;
    /**
     * Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
     * `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
     * `http://www.w3.org/2000/09/xmldsig#dsa-sha1`
     */
    public readonly signatureAlgorithm!: pulumi.Output<string | undefined>;
    public readonly signingKp!: pulumi.Output<string | undefined>;
    public readonly sloUrl!: pulumi.Output<string | undefined>;
    public readonly slug!: pulumi.Output<string>;
    public readonly ssoUrl!: pulumi.Output<string>;
    public readonly temporaryUserDeleteAfter!: pulumi.Output<string | undefined>;
    /**
     * Allowed values: - `identifier` - `emailLink` - `emailDeny` - `usernameLink` - `usernameDeny`
     */
    public readonly userMatchingMode!: pulumi.Output<string | undefined>;
    public readonly userPathTemplate!: pulumi.Output<string | undefined>;
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a SourceSaml resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SourceSamlArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SourceSamlArgs | SourceSamlState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SourceSamlState | undefined;
            resourceInputs["allowIdpInitiated"] = state ? state.allowIdpInitiated : undefined;
            resourceInputs["authenticationFlow"] = state ? state.authenticationFlow : undefined;
            resourceInputs["bindingType"] = state ? state.bindingType : undefined;
            resourceInputs["digestAlgorithm"] = state ? state.digestAlgorithm : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["encryptionKp"] = state ? state.encryptionKp : undefined;
            resourceInputs["enrollmentFlow"] = state ? state.enrollmentFlow : undefined;
            resourceInputs["groupMatchingMode"] = state ? state.groupMatchingMode : undefined;
            resourceInputs["issuer"] = state ? state.issuer : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameIdPolicy"] = state ? state.nameIdPolicy : undefined;
            resourceInputs["policyEngineMode"] = state ? state.policyEngineMode : undefined;
            resourceInputs["preAuthenticationFlow"] = state ? state.preAuthenticationFlow : undefined;
            resourceInputs["signatureAlgorithm"] = state ? state.signatureAlgorithm : undefined;
            resourceInputs["signingKp"] = state ? state.signingKp : undefined;
            resourceInputs["sloUrl"] = state ? state.sloUrl : undefined;
            resourceInputs["slug"] = state ? state.slug : undefined;
            resourceInputs["ssoUrl"] = state ? state.ssoUrl : undefined;
            resourceInputs["temporaryUserDeleteAfter"] = state ? state.temporaryUserDeleteAfter : undefined;
            resourceInputs["userMatchingMode"] = state ? state.userMatchingMode : undefined;
            resourceInputs["userPathTemplate"] = state ? state.userPathTemplate : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as SourceSamlArgs | undefined;
            if ((!args || args.preAuthenticationFlow === undefined) && !opts.urn) {
                throw new Error("Missing required property 'preAuthenticationFlow'");
            }
            if ((!args || args.slug === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slug'");
            }
            if ((!args || args.ssoUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ssoUrl'");
            }
            resourceInputs["allowIdpInitiated"] = args ? args.allowIdpInitiated : undefined;
            resourceInputs["authenticationFlow"] = args ? args.authenticationFlow : undefined;
            resourceInputs["bindingType"] = args ? args.bindingType : undefined;
            resourceInputs["digestAlgorithm"] = args ? args.digestAlgorithm : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["encryptionKp"] = args ? args.encryptionKp : undefined;
            resourceInputs["enrollmentFlow"] = args ? args.enrollmentFlow : undefined;
            resourceInputs["groupMatchingMode"] = args ? args.groupMatchingMode : undefined;
            resourceInputs["issuer"] = args ? args.issuer : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameIdPolicy"] = args ? args.nameIdPolicy : undefined;
            resourceInputs["policyEngineMode"] = args ? args.policyEngineMode : undefined;
            resourceInputs["preAuthenticationFlow"] = args ? args.preAuthenticationFlow : undefined;
            resourceInputs["signatureAlgorithm"] = args ? args.signatureAlgorithm : undefined;
            resourceInputs["signingKp"] = args ? args.signingKp : undefined;
            resourceInputs["sloUrl"] = args ? args.sloUrl : undefined;
            resourceInputs["slug"] = args ? args.slug : undefined;
            resourceInputs["ssoUrl"] = args ? args.ssoUrl : undefined;
            resourceInputs["temporaryUserDeleteAfter"] = args ? args.temporaryUserDeleteAfter : undefined;
            resourceInputs["userMatchingMode"] = args ? args.userMatchingMode : undefined;
            resourceInputs["userPathTemplate"] = args ? args.userPathTemplate : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["metadata"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SourceSaml.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SourceSaml resources.
 */
export interface SourceSamlState {
    allowIdpInitiated?: pulumi.Input<boolean>;
    authenticationFlow?: pulumi.Input<string>;
    /**
     * Allowed values: - `REDIRECT` - `POST` - `POST_AUTO`
     */
    bindingType?: pulumi.Input<string>;
    /**
     * Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512`
     */
    digestAlgorithm?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    encryptionKp?: pulumi.Input<string>;
    enrollmentFlow?: pulumi.Input<string>;
    /**
     * Allowed values: - `identifier` - `nameLink` - `nameDeny`
     */
    groupMatchingMode?: pulumi.Input<string>;
    issuer?: pulumi.Input<string>;
    /**
     * SAML Metadata
     */
    metadata?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -
     * `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -
     * `urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -
     * `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`
     */
    nameIdPolicy?: pulumi.Input<string>;
    /**
     * Allowed values: - `all` - `any`
     */
    policyEngineMode?: pulumi.Input<string>;
    preAuthenticationFlow?: pulumi.Input<string>;
    /**
     * Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
     * `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
     * `http://www.w3.org/2000/09/xmldsig#dsa-sha1`
     */
    signatureAlgorithm?: pulumi.Input<string>;
    signingKp?: pulumi.Input<string>;
    sloUrl?: pulumi.Input<string>;
    slug?: pulumi.Input<string>;
    ssoUrl?: pulumi.Input<string>;
    temporaryUserDeleteAfter?: pulumi.Input<string>;
    /**
     * Allowed values: - `identifier` - `emailLink` - `emailDeny` - `usernameLink` - `usernameDeny`
     */
    userMatchingMode?: pulumi.Input<string>;
    userPathTemplate?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SourceSaml resource.
 */
export interface SourceSamlArgs {
    allowIdpInitiated?: pulumi.Input<boolean>;
    authenticationFlow?: pulumi.Input<string>;
    /**
     * Allowed values: - `REDIRECT` - `POST` - `POST_AUTO`
     */
    bindingType?: pulumi.Input<string>;
    /**
     * Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512`
     */
    digestAlgorithm?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    encryptionKp?: pulumi.Input<string>;
    enrollmentFlow?: pulumi.Input<string>;
    /**
     * Allowed values: - `identifier` - `nameLink` - `nameDeny`
     */
    groupMatchingMode?: pulumi.Input<string>;
    issuer?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -
     * `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -
     * `urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -
     * `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`
     */
    nameIdPolicy?: pulumi.Input<string>;
    /**
     * Allowed values: - `all` - `any`
     */
    policyEngineMode?: pulumi.Input<string>;
    preAuthenticationFlow: pulumi.Input<string>;
    /**
     * Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
     * `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
     * `http://www.w3.org/2000/09/xmldsig#dsa-sha1`
     */
    signatureAlgorithm?: pulumi.Input<string>;
    signingKp?: pulumi.Input<string>;
    sloUrl?: pulumi.Input<string>;
    slug: pulumi.Input<string>;
    ssoUrl: pulumi.Input<string>;
    temporaryUserDeleteAfter?: pulumi.Input<string>;
    /**
     * Allowed values: - `identifier` - `emailLink` - `emailDeny` - `usernameLink` - `usernameDeny`
     */
    userMatchingMode?: pulumi.Input<string>;
    userPathTemplate?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
