// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as authentik from "@osmit-gmbh/pulumi-authentik";
 *
 * const _default = new authentik.Tenant("default", {
 *     brandingTitle: "test",
 *     "default": true,
 *     domain: ".",
 * });
 * ```
 */
export class Tenant extends pulumi.CustomResource {
    /**
     * Get an existing Tenant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TenantState, opts?: pulumi.CustomResourceOptions): Tenant {
        return new Tenant(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/tenant:Tenant';

    /**
     * Returns true if the given object is an instance of Tenant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Tenant {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Tenant.__pulumiType;
    }

    /**
     * JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.
     */
    public readonly attributes!: pulumi.Output<string | undefined>;
    public readonly brandingFavicon!: pulumi.Output<string | undefined>;
    public readonly brandingLogo!: pulumi.Output<string | undefined>;
    /**
     * Defaults to `authentik`.
     */
    public readonly brandingTitle!: pulumi.Output<string | undefined>;
    /**
     * Defaults to `false`.
     */
    public readonly default!: pulumi.Output<boolean | undefined>;
    public readonly domain!: pulumi.Output<string>;
    /**
     * Defaults to `days=365`.
     */
    public readonly eventRetention!: pulumi.Output<string | undefined>;
    public readonly flowAuthentication!: pulumi.Output<string | undefined>;
    public readonly flowDeviceCode!: pulumi.Output<string | undefined>;
    public readonly flowInvalidation!: pulumi.Output<string | undefined>;
    public readonly flowRecovery!: pulumi.Output<string | undefined>;
    public readonly flowUnenrollment!: pulumi.Output<string | undefined>;
    public readonly flowUserSettings!: pulumi.Output<string | undefined>;
    public readonly webCertificate!: pulumi.Output<string | undefined>;

    /**
     * Create a Tenant resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TenantArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TenantArgs | TenantState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TenantState | undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["brandingFavicon"] = state ? state.brandingFavicon : undefined;
            resourceInputs["brandingLogo"] = state ? state.brandingLogo : undefined;
            resourceInputs["brandingTitle"] = state ? state.brandingTitle : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["eventRetention"] = state ? state.eventRetention : undefined;
            resourceInputs["flowAuthentication"] = state ? state.flowAuthentication : undefined;
            resourceInputs["flowDeviceCode"] = state ? state.flowDeviceCode : undefined;
            resourceInputs["flowInvalidation"] = state ? state.flowInvalidation : undefined;
            resourceInputs["flowRecovery"] = state ? state.flowRecovery : undefined;
            resourceInputs["flowUnenrollment"] = state ? state.flowUnenrollment : undefined;
            resourceInputs["flowUserSettings"] = state ? state.flowUserSettings : undefined;
            resourceInputs["webCertificate"] = state ? state.webCertificate : undefined;
        } else {
            const args = argsOrState as TenantArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["brandingFavicon"] = args ? args.brandingFavicon : undefined;
            resourceInputs["brandingLogo"] = args ? args.brandingLogo : undefined;
            resourceInputs["brandingTitle"] = args ? args.brandingTitle : undefined;
            resourceInputs["default"] = args ? args.default : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["eventRetention"] = args ? args.eventRetention : undefined;
            resourceInputs["flowAuthentication"] = args ? args.flowAuthentication : undefined;
            resourceInputs["flowDeviceCode"] = args ? args.flowDeviceCode : undefined;
            resourceInputs["flowInvalidation"] = args ? args.flowInvalidation : undefined;
            resourceInputs["flowRecovery"] = args ? args.flowRecovery : undefined;
            resourceInputs["flowUnenrollment"] = args ? args.flowUnenrollment : undefined;
            resourceInputs["flowUserSettings"] = args ? args.flowUserSettings : undefined;
            resourceInputs["webCertificate"] = args ? args.webCertificate : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Tenant.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Tenant resources.
 */
export interface TenantState {
    /**
     * JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.
     */
    attributes?: pulumi.Input<string>;
    brandingFavicon?: pulumi.Input<string>;
    brandingLogo?: pulumi.Input<string>;
    /**
     * Defaults to `authentik`.
     */
    brandingTitle?: pulumi.Input<string>;
    /**
     * Defaults to `false`.
     */
    default?: pulumi.Input<boolean>;
    domain?: pulumi.Input<string>;
    /**
     * Defaults to `days=365`.
     */
    eventRetention?: pulumi.Input<string>;
    flowAuthentication?: pulumi.Input<string>;
    flowDeviceCode?: pulumi.Input<string>;
    flowInvalidation?: pulumi.Input<string>;
    flowRecovery?: pulumi.Input<string>;
    flowUnenrollment?: pulumi.Input<string>;
    flowUserSettings?: pulumi.Input<string>;
    webCertificate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Tenant resource.
 */
export interface TenantArgs {
    /**
     * JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.
     */
    attributes?: pulumi.Input<string>;
    brandingFavicon?: pulumi.Input<string>;
    brandingLogo?: pulumi.Input<string>;
    /**
     * Defaults to `authentik`.
     */
    brandingTitle?: pulumi.Input<string>;
    /**
     * Defaults to `false`.
     */
    default?: pulumi.Input<boolean>;
    domain: pulumi.Input<string>;
    /**
     * Defaults to `days=365`.
     */
    eventRetention?: pulumi.Input<string>;
    flowAuthentication?: pulumi.Input<string>;
    flowDeviceCode?: pulumi.Input<string>;
    flowInvalidation?: pulumi.Input<string>;
    flowRecovery?: pulumi.Input<string>;
    flowUnenrollment?: pulumi.Input<string>;
    flowUserSettings?: pulumi.Input<string>;
    webCertificate?: pulumi.Input<string>;
}
