// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as authentik from "@osmit-gmbh/pulumi-authentik";
 *
 * const name = new authentik.StageUserLogin("name", {});
 * ```
 */
export class StageUserLogin extends pulumi.CustomResource {
    /**
     * Get an existing StageUserLogin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StageUserLoginState, opts?: pulumi.CustomResourceOptions): StageUserLogin {
        return new StageUserLogin(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/stageUserLogin:StageUserLogin';

    /**
     * Returns true if the given object is an instance of StageUserLogin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StageUserLogin {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StageUserLogin.__pulumiType;
    }

    /**
     * Allowed values: - `noBinding` - `bindContinent` - `bindContinentCountry` - `bindContinentCountryCity`
     */
    public readonly geoipBinding!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Allowed values: - `noBinding` - `bindAsn` - `bindAsnNetwork` - `bindAsnNetworkIp`
     */
    public readonly networkBinding!: pulumi.Output<string | undefined>;
    public readonly rememberMeOffset!: pulumi.Output<string | undefined>;
    public readonly sessionDuration!: pulumi.Output<string | undefined>;
    public readonly terminateOtherSessions!: pulumi.Output<boolean | undefined>;

    /**
     * Create a StageUserLogin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StageUserLoginArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StageUserLoginArgs | StageUserLoginState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StageUserLoginState | undefined;
            resourceInputs["geoipBinding"] = state ? state.geoipBinding : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkBinding"] = state ? state.networkBinding : undefined;
            resourceInputs["rememberMeOffset"] = state ? state.rememberMeOffset : undefined;
            resourceInputs["sessionDuration"] = state ? state.sessionDuration : undefined;
            resourceInputs["terminateOtherSessions"] = state ? state.terminateOtherSessions : undefined;
        } else {
            const args = argsOrState as StageUserLoginArgs | undefined;
            resourceInputs["geoipBinding"] = args ? args.geoipBinding : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkBinding"] = args ? args.networkBinding : undefined;
            resourceInputs["rememberMeOffset"] = args ? args.rememberMeOffset : undefined;
            resourceInputs["sessionDuration"] = args ? args.sessionDuration : undefined;
            resourceInputs["terminateOtherSessions"] = args ? args.terminateOtherSessions : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StageUserLogin.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StageUserLogin resources.
 */
export interface StageUserLoginState {
    /**
     * Allowed values: - `noBinding` - `bindContinent` - `bindContinentCountry` - `bindContinentCountryCity`
     */
    geoipBinding?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Allowed values: - `noBinding` - `bindAsn` - `bindAsnNetwork` - `bindAsnNetworkIp`
     */
    networkBinding?: pulumi.Input<string>;
    rememberMeOffset?: pulumi.Input<string>;
    sessionDuration?: pulumi.Input<string>;
    terminateOtherSessions?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a StageUserLogin resource.
 */
export interface StageUserLoginArgs {
    /**
     * Allowed values: - `noBinding` - `bindContinent` - `bindContinentCountry` - `bindContinentCountryCity`
     */
    geoipBinding?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Allowed values: - `noBinding` - `bindAsn` - `bindAsnNetwork` - `bindAsnNetworkIp`
     */
    networkBinding?: pulumi.Input<string>;
    rememberMeOffset?: pulumi.Input<string>;
    sessionDuration?: pulumi.Input<string>;
    terminateOtherSessions?: pulumi.Input<boolean>;
}
